(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("assert"), require("crypto"), require("http"), require("https"), require("url"), require("util"), require("fs"), require("buffer"), require("stream"), require("tty"), require("net"), require("zlib"), require("child_process"), require("os"), require("path"));
	else if(typeof define === 'function' && define.amd)
		define(["assert", "crypto", "http", "https", "url", "util", "fs", "buffer", "stream", "tty", "net", "zlib", "child_process", "os", "path"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("assert"), require("crypto"), require("http"), require("https"), require("url"), require("util"), require("fs"), require("buffer"), require("stream"), require("tty"), require("net"), require("zlib"), require("child_process"), require("os"), require("path")) : factory(root["assert"], root["crypto"], root["http"], root["https"], root["url"], root["util"], root["fs"], root["buffer"], root["stream"], root["tty"], root["net"], root["zlib"], root["child_process"], root["os"], root["path"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_34__, __WEBPACK_EXTERNAL_MODULE_36__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_68__, __WEBPACK_EXTERNAL_MODULE_73__, __WEBPACK_EXTERNAL_MODULE_74__, __WEBPACK_EXTERNAL_MODULE_75__, __WEBPACK_EXTERNAL_MODULE_147__, __WEBPACK_EXTERNAL_MODULE_149__, __WEBPACK_EXTERNAL_MODULE_152__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 56);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory();
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define([], factory);
	}
	else {
		// Global (browser)
		root.CryptoJS = factory();
	}
}(this, function () {

	/**
	 * CryptoJS core components.
	 */
	var CryptoJS = CryptoJS || (function (Math, undefined) {
	    /*
	     * Local polyfil of Object.create
	     */
	    var create = Object.create || (function () {
	        function F() {};

	        return function (obj) {
	            var subtype;

	            F.prototype = obj;

	            subtype = new F();

	            F.prototype = null;

	            return subtype;
	        };
	    }())

	    /**
	     * CryptoJS namespace.
	     */
	    var C = {};

	    /**
	     * Library namespace.
	     */
	    var C_lib = C.lib = {};

	    /**
	     * Base object for prototypal inheritance.
	     */
	    var Base = C_lib.Base = (function () {


	        return {
	            /**
	             * Creates a new object that inherits from this object.
	             *
	             * @param {Object} overrides Properties to copy into the new object.
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         field: 'value',
	             *
	             *         method: function () {
	             *         }
	             *     });
	             */
	            extend: function (overrides) {
	                // Spawn
	                var subtype = create(this);

	                // Augment
	                if (overrides) {
	                    subtype.mixIn(overrides);
	                }

	                // Create default initializer
	                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
	                    subtype.init = function () {
	                        subtype.$super.init.apply(this, arguments);
	                    };
	                }

	                // Initializer's prototype is the subtype object
	                subtype.init.prototype = subtype;

	                // Reference supertype
	                subtype.$super = this;

	                return subtype;
	            },

	            /**
	             * Extends this object and runs the init method.
	             * Arguments to create() will be passed to init().
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var instance = MyType.create();
	             */
	            create: function () {
	                var instance = this.extend();
	                instance.init.apply(instance, arguments);

	                return instance;
	            },

	            /**
	             * Initializes a newly created object.
	             * Override this method to add some logic when your objects are created.
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         init: function () {
	             *             // ...
	             *         }
	             *     });
	             */
	            init: function () {
	            },

	            /**
	             * Copies properties into this object.
	             *
	             * @param {Object} properties The properties to mix in.
	             *
	             * @example
	             *
	             *     MyType.mixIn({
	             *         field: 'value'
	             *     });
	             */
	            mixIn: function (properties) {
	                for (var propertyName in properties) {
	                    if (properties.hasOwnProperty(propertyName)) {
	                        this[propertyName] = properties[propertyName];
	                    }
	                }

	                // IE won't copy toString using the loop above
	                if (properties.hasOwnProperty('toString')) {
	                    this.toString = properties.toString;
	                }
	            },

	            /**
	             * Creates a copy of this object.
	             *
	             * @return {Object} The clone.
	             *
	             * @example
	             *
	             *     var clone = instance.clone();
	             */
	            clone: function () {
	                return this.init.prototype.extend(this);
	            }
	        };
	    }());

	    /**
	     * An array of 32-bit words.
	     *
	     * @property {Array} words The array of 32-bit words.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var WordArray = C_lib.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of 32-bit words.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.create();
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 4;
	            }
	        },

	        /**
	         * Converts this word array to a string.
	         *
	         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
	         *
	         * @return {string} The stringified word array.
	         *
	         * @example
	         *
	         *     var string = wordArray + '';
	         *     var string = wordArray.toString();
	         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
	         */
	        toString: function (encoder) {
	            return (encoder || Hex).stringify(this);
	        },

	        /**
	         * Concatenates a word array to this word array.
	         *
	         * @param {WordArray} wordArray The word array to append.
	         *
	         * @return {WordArray} This word array.
	         *
	         * @example
	         *
	         *     wordArray1.concat(wordArray2);
	         */
	        concat: function (wordArray) {
	            // Shortcuts
	            var thisWords = this.words;
	            var thatWords = wordArray.words;
	            var thisSigBytes = this.sigBytes;
	            var thatSigBytes = wordArray.sigBytes;

	            // Clamp excess bits
	            this.clamp();

	            // Concat
	            if (thisSigBytes % 4) {
	                // Copy one byte at a time
	                for (var i = 0; i < thatSigBytes; i++) {
	                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
	                }
	            } else {
	                // Copy one word at a time
	                for (var i = 0; i < thatSigBytes; i += 4) {
	                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];
	                }
	            }
	            this.sigBytes += thatSigBytes;

	            // Chainable
	            return this;
	        },

	        /**
	         * Removes insignificant bits.
	         *
	         * @example
	         *
	         *     wordArray.clamp();
	         */
	        clamp: function () {
	            // Shortcuts
	            var words = this.words;
	            var sigBytes = this.sigBytes;

	            // Clamp
	            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
	            words.length = Math.ceil(sigBytes / 4);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = wordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone.words = this.words.slice(0);

	            return clone;
	        },

	        /**
	         * Creates a word array filled with random bytes.
	         *
	         * @param {number} nBytes The number of random bytes to generate.
	         *
	         * @return {WordArray} The random word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.random(16);
	         */
	        random: function (nBytes) {
	            var words = [];

	            var r = (function (m_w) {
	                var m_w = m_w;
	                var m_z = 0x3ade68b1;
	                var mask = 0xffffffff;

	                return function () {
	                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;
	                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;
	                    var result = ((m_z << 0x10) + m_w) & mask;
	                    result /= 0x100000000;
	                    result += 0.5;
	                    return result * (Math.random() > .5 ? 1 : -1);
	                }
	            });

	            for (var i = 0, rcache; i < nBytes; i += 4) {
	                var _r = r((rcache || Math.random()) * 0x100000000);

	                rcache = _r() * 0x3ade67b7;
	                words.push((_r() * 0x100000000) | 0);
	            }

	            return new WordArray.init(words, nBytes);
	        }
	    });

	    /**
	     * Encoder namespace.
	     */
	    var C_enc = C.enc = {};

	    /**
	     * Hex encoding strategy.
	     */
	    var Hex = C_enc.Hex = {
	        /**
	         * Converts a word array to a hex string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The hex string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var hexChars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                hexChars.push((bite >>> 4).toString(16));
	                hexChars.push((bite & 0x0f).toString(16));
	            }

	            return hexChars.join('');
	        },

	        /**
	         * Converts a hex string to a word array.
	         *
	         * @param {string} hexStr The hex string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
	         */
	        parse: function (hexStr) {
	            // Shortcut
	            var hexStrLength = hexStr.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < hexStrLength; i += 2) {
	                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
	            }

	            return new WordArray.init(words, hexStrLength / 2);
	        }
	    };

	    /**
	     * Latin1 encoding strategy.
	     */
	    var Latin1 = C_enc.Latin1 = {
	        /**
	         * Converts a word array to a Latin1 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Latin1 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var latin1Chars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                latin1Chars.push(String.fromCharCode(bite));
	            }

	            return latin1Chars.join('');
	        },

	        /**
	         * Converts a Latin1 string to a word array.
	         *
	         * @param {string} latin1Str The Latin1 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
	         */
	        parse: function (latin1Str) {
	            // Shortcut
	            var latin1StrLength = latin1Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < latin1StrLength; i++) {
	                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
	            }

	            return new WordArray.init(words, latin1StrLength);
	        }
	    };

	    /**
	     * UTF-8 encoding strategy.
	     */
	    var Utf8 = C_enc.Utf8 = {
	        /**
	         * Converts a word array to a UTF-8 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-8 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            try {
	                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
	            } catch (e) {
	                throw new Error('Malformed UTF-8 data');
	            }
	        },

	        /**
	         * Converts a UTF-8 string to a word array.
	         *
	         * @param {string} utf8Str The UTF-8 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
	         */
	        parse: function (utf8Str) {
	            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
	        }
	    };

	    /**
	     * Abstract buffered block algorithm template.
	     *
	     * The property blockSize must be implemented in a concrete subtype.
	     *
	     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
	     */
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
	        /**
	         * Resets this block algorithm's data buffer to its initial state.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm.reset();
	         */
	        reset: function () {
	            // Initial values
	            this._data = new WordArray.init();
	            this._nDataBytes = 0;
	        },

	        /**
	         * Adds new data to this block algorithm's buffer.
	         *
	         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm._append('data');
	         *     bufferedBlockAlgorithm._append(wordArray);
	         */
	        _append: function (data) {
	            // Convert string to WordArray, else assume WordArray already
	            if (typeof data == 'string') {
	                data = Utf8.parse(data);
	            }

	            // Append
	            this._data.concat(data);
	            this._nDataBytes += data.sigBytes;
	        },

	        /**
	         * Processes available data blocks.
	         *
	         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
	         *
	         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
	         *
	         * @return {WordArray} The processed data.
	         *
	         * @example
	         *
	         *     var processedData = bufferedBlockAlgorithm._process();
	         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
	         */
	        _process: function (doFlush) {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var dataSigBytes = data.sigBytes;
	            var blockSize = this.blockSize;
	            var blockSizeBytes = blockSize * 4;

	            // Count blocks ready
	            var nBlocksReady = dataSigBytes / blockSizeBytes;
	            if (doFlush) {
	                // Round up to include partial blocks
	                nBlocksReady = Math.ceil(nBlocksReady);
	            } else {
	                // Round down to include only full blocks,
	                // less the number of blocks that must remain in the buffer
	                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
	            }

	            // Count words ready
	            var nWordsReady = nBlocksReady * blockSize;

	            // Count bytes ready
	            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

	            // Process blocks
	            if (nWordsReady) {
	                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
	                    // Perform concrete-algorithm logic
	                    this._doProcessBlock(dataWords, offset);
	                }

	                // Remove processed words
	                var processedWords = dataWords.splice(0, nWordsReady);
	                data.sigBytes -= nBytesReady;
	            }

	            // Return processed words
	            return new WordArray.init(processedWords, nBytesReady);
	        },

	        /**
	         * Creates a copy of this object.
	         *
	         * @return {Object} The clone.
	         *
	         * @example
	         *
	         *     var clone = bufferedBlockAlgorithm.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone._data = this._data.clone();

	            return clone;
	        },

	        _minBufferSize: 0
	    });

	    /**
	     * Abstract hasher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
	     */
	    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         */
	        cfg: Base.extend(),

	        /**
	         * Initializes a newly created hasher.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
	         *
	         * @example
	         *
	         *     var hasher = CryptoJS.algo.SHA256.create();
	         */
	        init: function (cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this hasher to its initial state.
	         *
	         * @example
	         *
	         *     hasher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-hasher logic
	            this._doReset();
	        },

	        /**
	         * Updates this hasher with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {Hasher} This hasher.
	         *
	         * @example
	         *
	         *     hasher.update('message');
	         *     hasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            // Append
	            this._append(messageUpdate);

	            // Update the hash
	            this._process();

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the hash computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The hash.
	         *
	         * @example
	         *
	         *     var hash = hasher.finalize();
	         *     var hash = hasher.finalize('message');
	         *     var hash = hasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Final message update
	            if (messageUpdate) {
	                this._append(messageUpdate);
	            }

	            // Perform concrete-hasher logic
	            var hash = this._doFinalize();

	            return hash;
	        },

	        blockSize: 512/32,

	        /**
	         * Creates a shortcut function to a hasher's object interface.
	         *
	         * @param {Hasher} hasher The hasher to create a helper for.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
	         */
	        _createHelper: function (hasher) {
	            return function (message, cfg) {
	                return new hasher.init(cfg).finalize(message);
	            };
	        },

	        /**
	         * Creates a shortcut function to the HMAC's object interface.
	         *
	         * @param {Hasher} hasher The hasher to use in this HMAC helper.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
	         */
	        _createHmacHelper: function (hasher) {
	            return function (message, key) {
	                return new C_algo.HMAC.init(hasher, key).finalize(message);
	            };
	        }
	    });

	    /**
	     * Algorithm namespace.
	     */
	    var C_algo = C.algo = {};

	    return C;
	}(Math));


	return CryptoJS;

}));

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(8));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./evpkdf"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Cipher core components.
	 */
	CryptoJS.lib.Cipher || (function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var Base64 = C_enc.Base64;
	    var C_algo = C.algo;
	    var EvpKDF = C_algo.EvpKDF;

	    /**
	     * Abstract base cipher template.
	     *
	     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
	     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
	     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
	     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
	     */
	    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {WordArray} iv The IV to use for this operation.
	         */
	        cfg: Base.extend(),

	        /**
	         * Creates this cipher in encryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createEncryptor: function (key, cfg) {
	            return this.create(this._ENC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Creates this cipher in decryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createDecryptor: function (key, cfg) {
	            return this.create(this._DEC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Initializes a newly created cipher.
	         *
	         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
	         */
	        init: function (xformMode, key, cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Store transform mode and key
	            this._xformMode = xformMode;
	            this._key = key;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this cipher to its initial state.
	         *
	         * @example
	         *
	         *     cipher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-cipher logic
	            this._doReset();
	        },

	        /**
	         * Adds data to be encrypted or decrypted.
	         *
	         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.process('data');
	         *     var encrypted = cipher.process(wordArray);
	         */
	        process: function (dataUpdate) {
	            // Append
	            this._append(dataUpdate);

	            // Process available blocks
	            return this._process();
	        },

	        /**
	         * Finalizes the encryption or decryption process.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after final processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.finalize();
	         *     var encrypted = cipher.finalize('data');
	         *     var encrypted = cipher.finalize(wordArray);
	         */
	        finalize: function (dataUpdate) {
	            // Final data update
	            if (dataUpdate) {
	                this._append(dataUpdate);
	            }

	            // Perform concrete-cipher logic
	            var finalProcessedData = this._doFinalize();

	            return finalProcessedData;
	        },

	        keySize: 128/32,

	        ivSize: 128/32,

	        _ENC_XFORM_MODE: 1,

	        _DEC_XFORM_MODE: 2,

	        /**
	         * Creates shortcut functions to a cipher's object interface.
	         *
	         * @param {Cipher} cipher The cipher to create a helper for.
	         *
	         * @return {Object} An object with encrypt and decrypt shortcut functions.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
	         */
	        _createHelper: (function () {
	            function selectCipherStrategy(key) {
	                if (typeof key == 'string') {
	                    return PasswordBasedCipher;
	                } else {
	                    return SerializableCipher;
	                }
	            }

	            return function (cipher) {
	                return {
	                    encrypt: function (message, key, cfg) {
	                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
	                    },

	                    decrypt: function (ciphertext, key, cfg) {
	                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
	                    }
	                };
	            };
	        }())
	    });

	    /**
	     * Abstract base stream cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
	     */
	    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
	        _doFinalize: function () {
	            // Process partial blocks
	            var finalProcessedBlocks = this._process(!!'flush');

	            return finalProcessedBlocks;
	        },

	        blockSize: 1
	    });

	    /**
	     * Mode namespace.
	     */
	    var C_mode = C.mode = {};

	    /**
	     * Abstract base block cipher mode template.
	     */
	    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
	        /**
	         * Creates this mode for encryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
	         */
	        createEncryptor: function (cipher, iv) {
	            return this.Encryptor.create(cipher, iv);
	        },

	        /**
	         * Creates this mode for decryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
	         */
	        createDecryptor: function (cipher, iv) {
	            return this.Decryptor.create(cipher, iv);
	        },

	        /**
	         * Initializes a newly created mode.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
	         */
	        init: function (cipher, iv) {
	            this._cipher = cipher;
	            this._iv = iv;
	        }
	    });

	    /**
	     * Cipher Block Chaining mode.
	     */
	    var CBC = C_mode.CBC = (function () {
	        /**
	         * Abstract base CBC mode.
	         */
	        var CBC = BlockCipherMode.extend();

	        /**
	         * CBC encryptor.
	         */
	        CBC.Encryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // XOR and encrypt
	                xorBlock.call(this, words, offset, blockSize);
	                cipher.encryptBlock(words, offset);

	                // Remember this block to use with next block
	                this._prevBlock = words.slice(offset, offset + blockSize);
	            }
	        });

	        /**
	         * CBC decryptor.
	         */
	        CBC.Decryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // Remember this block to use with next block
	                var thisBlock = words.slice(offset, offset + blockSize);

	                // Decrypt and XOR
	                cipher.decryptBlock(words, offset);
	                xorBlock.call(this, words, offset, blockSize);

	                // This block becomes the previous block
	                this._prevBlock = thisBlock;
	            }
	        });

	        function xorBlock(words, offset, blockSize) {
	            // Shortcut
	            var iv = this._iv;

	            // Choose mixing block
	            if (iv) {
	                var block = iv;

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            } else {
	                var block = this._prevBlock;
	            }

	            // XOR blocks
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= block[i];
	            }
	        }

	        return CBC;
	    }());

	    /**
	     * Padding namespace.
	     */
	    var C_pad = C.pad = {};

	    /**
	     * PKCS #5/7 padding strategy.
	     */
	    var Pkcs7 = C_pad.Pkcs7 = {
	        /**
	         * Pads data using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to pad.
	         * @param {number} blockSize The multiple that the data should be padded to.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
	         */
	        pad: function (data, blockSize) {
	            // Shortcut
	            var blockSizeBytes = blockSize * 4;

	            // Count padding bytes
	            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	            // Create padding word
	            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;

	            // Create padding
	            var paddingWords = [];
	            for (var i = 0; i < nPaddingBytes; i += 4) {
	                paddingWords.push(paddingWord);
	            }
	            var padding = WordArray.create(paddingWords, nPaddingBytes);

	            // Add padding
	            data.concat(padding);
	        },

	        /**
	         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to unpad.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
	         */
	        unpad: function (data) {
	            // Get number of padding bytes from last byte
	            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	            // Remove padding
	            data.sigBytes -= nPaddingBytes;
	        }
	    };

	    /**
	     * Abstract base block cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
	     */
	    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Mode} mode The block mode to use. Default: CBC
	         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
	         */
	        cfg: Cipher.cfg.extend({
	            mode: CBC,
	            padding: Pkcs7
	        }),

	        reset: function () {
	            // Reset cipher
	            Cipher.reset.call(this);

	            // Shortcuts
	            var cfg = this.cfg;
	            var iv = cfg.iv;
	            var mode = cfg.mode;

	            // Reset block mode
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                var modeCreator = mode.createEncryptor;
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                var modeCreator = mode.createDecryptor;
	                // Keep at least one block in the buffer for unpadding
	                this._minBufferSize = 1;
	            }

	            if (this._mode && this._mode.__creator == modeCreator) {
	                this._mode.init(this, iv && iv.words);
	            } else {
	                this._mode = modeCreator.call(mode, this, iv && iv.words);
	                this._mode.__creator = modeCreator;
	            }
	        },

	        _doProcessBlock: function (words, offset) {
	            this._mode.processBlock(words, offset);
	        },

	        _doFinalize: function () {
	            // Shortcut
	            var padding = this.cfg.padding;

	            // Finalize
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                // Pad data
	                padding.pad(this._data, this.blockSize);

	                // Process final blocks
	                var finalProcessedBlocks = this._process(!!'flush');
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                // Process final blocks
	                var finalProcessedBlocks = this._process(!!'flush');

	                // Unpad data
	                padding.unpad(finalProcessedBlocks);
	            }

	            return finalProcessedBlocks;
	        },

	        blockSize: 128/32
	    });

	    /**
	     * A collection of cipher parameters.
	     *
	     * @property {WordArray} ciphertext The raw ciphertext.
	     * @property {WordArray} key The key to this ciphertext.
	     * @property {WordArray} iv The IV used in the ciphering operation.
	     * @property {WordArray} salt The salt used with a key derivation function.
	     * @property {Cipher} algorithm The cipher algorithm.
	     * @property {Mode} mode The block mode used in the ciphering operation.
	     * @property {Padding} padding The padding scheme used in the ciphering operation.
	     * @property {number} blockSize The block size of the cipher.
	     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
	     */
	    var CipherParams = C_lib.CipherParams = Base.extend({
	        /**
	         * Initializes a newly created cipher params object.
	         *
	         * @param {Object} cipherParams An object with any of the possible cipher parameters.
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.lib.CipherParams.create({
	         *         ciphertext: ciphertextWordArray,
	         *         key: keyWordArray,
	         *         iv: ivWordArray,
	         *         salt: saltWordArray,
	         *         algorithm: CryptoJS.algo.AES,
	         *         mode: CryptoJS.mode.CBC,
	         *         padding: CryptoJS.pad.PKCS7,
	         *         blockSize: 4,
	         *         formatter: CryptoJS.format.OpenSSL
	         *     });
	         */
	        init: function (cipherParams) {
	            this.mixIn(cipherParams);
	        },

	        /**
	         * Converts this cipher params object to a string.
	         *
	         * @param {Format} formatter (Optional) The formatting strategy to use.
	         *
	         * @return {string} The stringified cipher params.
	         *
	         * @throws Error If neither the formatter nor the default formatter is set.
	         *
	         * @example
	         *
	         *     var string = cipherParams + '';
	         *     var string = cipherParams.toString();
	         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
	         */
	        toString: function (formatter) {
	            return (formatter || this.formatter).stringify(this);
	        }
	    });

	    /**
	     * Format namespace.
	     */
	    var C_format = C.format = {};

	    /**
	     * OpenSSL formatting strategy.
	     */
	    var OpenSSLFormatter = C_format.OpenSSL = {
	        /**
	         * Converts a cipher params object to an OpenSSL-compatible string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The OpenSSL-compatible string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            // Shortcuts
	            var ciphertext = cipherParams.ciphertext;
	            var salt = cipherParams.salt;

	            // Format
	            if (salt) {
	                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
	            } else {
	                var wordArray = ciphertext;
	            }

	            return wordArray.toString(Base64);
	        },

	        /**
	         * Converts an OpenSSL-compatible string to a cipher params object.
	         *
	         * @param {string} openSSLStr The OpenSSL-compatible string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
	         */
	        parse: function (openSSLStr) {
	            // Parse base64
	            var ciphertext = Base64.parse(openSSLStr);

	            // Shortcut
	            var ciphertextWords = ciphertext.words;

	            // Test for salt
	            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
	                // Extract salt
	                var salt = WordArray.create(ciphertextWords.slice(2, 4));

	                // Remove salt from ciphertext
	                ciphertextWords.splice(0, 4);
	                ciphertext.sigBytes -= 16;
	            }

	            return CipherParams.create({ ciphertext: ciphertext, salt: salt });
	        }
	    };

	    /**
	     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
	     */
	    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
	         */
	        cfg: Base.extend({
	            format: OpenSSLFormatter
	        }),

	        /**
	         * Encrypts a message.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Encrypt
	            var encryptor = cipher.createEncryptor(key, cfg);
	            var ciphertext = encryptor.finalize(message);

	            // Shortcut
	            var cipherCfg = encryptor.cfg;

	            // Create and return serializable cipher params
	            return CipherParams.create({
	                ciphertext: ciphertext,
	                key: key,
	                iv: cipherCfg.iv,
	                algorithm: cipher,
	                mode: cipherCfg.mode,
	                padding: cipherCfg.padding,
	                blockSize: cipher.blockSize,
	                formatter: cfg.format
	            });
	        },

	        /**
	         * Decrypts serialized ciphertext.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Decrypt
	            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

	            return plaintext;
	        },

	        /**
	         * Converts serialized ciphertext to CipherParams,
	         * else assumed CipherParams already and returns ciphertext unchanged.
	         *
	         * @param {CipherParams|string} ciphertext The ciphertext.
	         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
	         *
	         * @return {CipherParams} The unserialized ciphertext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
	         */
	        _parse: function (ciphertext, format) {
	            if (typeof ciphertext == 'string') {
	                return format.parse(ciphertext, this);
	            } else {
	                return ciphertext;
	            }
	        }
	    });

	    /**
	     * Key derivation function namespace.
	     */
	    var C_kdf = C.kdf = {};

	    /**
	     * OpenSSL key derivation function.
	     */
	    var OpenSSLKdf = C_kdf.OpenSSL = {
	        /**
	         * Derives a key and IV from a password.
	         *
	         * @param {string} password The password to derive from.
	         * @param {number} keySize The size in words of the key to generate.
	         * @param {number} ivSize The size in words of the IV to generate.
	         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
	         *
	         * @return {CipherParams} A cipher params object with the key, IV, and salt.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
	         */
	        execute: function (password, keySize, ivSize, salt) {
	            // Generate random salt
	            if (!salt) {
	                salt = WordArray.random(64/8);
	            }

	            // Derive key and IV
	            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

	            // Separate key and IV
	            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
	            key.sigBytes = keySize * 4;

	            // Return params
	            return CipherParams.create({ key: key, iv: iv, salt: salt });
	        }
	    };

	    /**
	     * A serializable cipher wrapper that derives the key from a password,
	     * and returns ciphertext as a serializable cipher params object.
	     */
	    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
	         */
	        cfg: SerializableCipher.cfg.extend({
	            kdf: OpenSSLKdf
	        }),

	        /**
	         * Encrypts a message using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Encrypt
	            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

	            // Mix in derived params
	            ciphertext.mixIn(derivedParams);

	            return ciphertext;
	        },

	        /**
	         * Decrypts serialized ciphertext using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Decrypt
	            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

	            return plaintext;
	        }
	    });
	}());


}));

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(27);
var isBuffer = __webpack_require__(59);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object' && !isArray(obj)) {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = exports;

elliptic.version = __webpack_require__(89).version;
elliptic.utils = __webpack_require__(90);
elliptic.rand = __webpack_require__(91);
elliptic.curve = __webpack_require__(15);
elliptic.curves = __webpack_require__(97);

// Protocols
elliptic.ec = __webpack_require__(105);
elliptic.eddsa = __webpack_require__(109);


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(7);
var inherits = __webpack_require__(16);

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = __webpack_require__(43).Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)(module)))

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ab2str = exports.ab2str = function ab2str(buf) {
  return String.fromCharCode.apply(null, new Uint8Array(buf));
};

var str2ab = exports.str2ab = function str2ab(str) {
  var bufView = new Uint8Array(str.length);
  for (var i = 0, strLen = str.length; i < strLen; i++) {
    bufView[i] = str.charCodeAt(i);
  }
  return bufView;
};

var hexstring2ab = exports.hexstring2ab = function hexstring2ab(str) {
  var result = [];
  while (str.length >= 2) {
    result.push(parseInt(str.substring(0, 2), 16));
    str = str.substring(2, str.length);
  }

  return result;
};

var ab2hexstring = exports.ab2hexstring = function ab2hexstring(arr) {
  var result = '';
  for (var i = 0; i < arr.length; i++) {
    var str = arr[i].toString(16);
    str = str.length === 0 ? '00' : str.length === 1 ? '0' + str : str;
    result += str;
  }
  return result;
};

/**
 * Converts a number to a hexstring of a suitable size
 * @param {number} num
 * @param {number} size - The required size in chars, eg 2 for Uint8, 4 for Uint16. Defaults to 2.
 */
var num2hexstring = exports.num2hexstring = function num2hexstring(num) {
  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;

  var hexstring = num.toString(16);
  return hexstring.length % size === 0 ? hexstring : ('0'.repeat(size) + hexstring).substring(hexstring.length);
};

/**
 * Converts a number to a Fixed8 format string
 * @param {number} num
 * @return {string} number in Fixed8 representation.
 */
var num2fixed8 = exports.num2fixed8 = function num2fixed8(num) {
  var hexValue = Math.round(num * 100000000).toString(16);
  return reverseHex(('0000000000000000' + hexValue).substring(hexValue.length));
};

/**
 * Converts a Fixed8 string to number
 * @param {string} fixed8
 * @return {number}
 */
var fixed82num = exports.fixed82num = function fixed82num(fixed8) {
  return parseInt(reverseHex(fixed8), 16) / 100000000;
};

/**
 * Converts a number to a variable length Int. Used for array length header
 * @param num - The number
 * @returns {string} hexstring of the variable Int.
 */
var num2VarInt = exports.num2VarInt = function num2VarInt(num) {
  if (num < 0xfd) {
    return num2hexstring(num);
  } else if (num <= 0xffff) {
    return 'fd' + num2hexstring(num, 4);
  } else if (num <= 0xffffffff) {
    return 'fe' + num2hexstring(num, 8);
  } else {
    return 'ff' + num2hexstring(num, 8) + num2hexstring(num / Math.pow(2, 32), 8);
  }
};

var hexXor = exports.hexXor = function hexXor(str1, str2) {
  if (str1.length !== str2.length) throw new Error();
  if (str1.length % 2 !== 0) throw new Error();
  var result = [];
  for (var i = 0; i < str1.length; i += 2) {
    result.push(parseInt(str1.substr(i, 2), 16) ^ parseInt(str2.substr(i, 2), 16));
  }
  return ab2hexstring(result);
};

var reverseArray = exports.reverseArray = function reverseArray(arr) {
  var result = new Uint8Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    result[i] = arr[arr.length - 1 - i];
  }

  return result;
};

var reverseHex = exports.reverseHex = function reverseHex(hex) {
  if (hex.length % 2 !== 0) throw new Error('Incorrect Length: ' + hex);
  var out = '';
  for (var i = hex.length - 2; i >= 0; i -= 2) {
    out += hex.substr(i, 2);
  }
  return out;
};

var numStoreInMemory = exports.numStoreInMemory = function numStoreInMemory(num, length) {
  for (var i = num.length; i < length; i++) {
    num = '0' + num;
  }
  var data = reverseArray(Buffer.from(num, 'HEX'));

  return ab2hexstring(data);
};

var stringToBytes = exports.stringToBytes = function stringToBytes(str) {
  var utf8 = unescape(encodeURIComponent(str));

  var arr = [];
  for (var i = 0; i < utf8.length; i++) {
    arr.push(utf8.charCodeAt(i));
  }

  return arr;
};

var StringStream = exports.StringStream = function () {
  function StringStream() {
    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    _classCallCheck(this, StringStream);

    this.str = str;
    this.pter = 0;
  }

  _createClass(StringStream, [{
    key: 'isEmpty',
    value: function isEmpty() {
      return this.pter >= this.str.length;
    }
  }, {
    key: 'read',
    value: function read(bytes) {
      if (this.isEmpty()) throw new Error();
      var out = this.str.substr(this.pter, bytes * 2);
      this.pter += bytes * 2;
      return out;
    }
  }, {
    key: 'readVarBytes',
    value: function readVarBytes() {
      return this.read(this.readVarInt());
    }
  }, {
    key: 'readVarInt',
    value: function readVarInt() {
      var len = parseInt(this.read(1), 16);
      if (len === 0xfd) len = parseInt(reverseHex(this.read(2)), 16);else if (len === 0xfe) len = parseInt(reverseHex(this.read(4)), 16);else if (len === 0xff) len = parseInt(reverseHex(this.read(8)), 16);
      return len;
    }
  }]);

  return StringStream;
}();

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(24), __webpack_require__(25));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./sha1", "./hmac"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var MD5 = C_algo.MD5;

	    /**
	     * This key derivation function is meant to conform with EVP_BytesToKey.
	     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
	     */
	    var EvpKDF = C_algo.EvpKDF = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hash algorithm to use. Default: MD5
	         * @property {number} iterations The number of iterations to perform. Default: 1
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: MD5,
	            iterations: 1
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.EvpKDF.create();
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Derives a key from a password.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            // Shortcut
	            var cfg = this.cfg;

	            // Init hasher
	            var hasher = cfg.hasher.create();

	            // Initial values
	            var derivedKey = WordArray.create();

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                if (block) {
	                    hasher.update(block);
	                }
	                var block = hasher.update(password).finalize(salt);
	                hasher.reset();

	                // Iterations
	                for (var i = 1; i < iterations; i++) {
	                    block = hasher.finalize(block);
	                    hasher.reset();
	                }

	                derivedKey.concat(block);
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Derives a key from a password.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.EvpKDF(password, salt);
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.EvpKDF = function (password, salt, cfg) {
	        return EvpKDF.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.EvpKDF;

}));

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verifyPublicKeyEncoded = exports.verifyAddress = exports.signatureData = exports.getScriptHashFromPublicKey = exports.getScriptHashFromAddress = exports.toAddress = exports.getPublicKeyEncoded = exports.getPublicKey = exports.getPrivateKeyFromWIF = exports.getHash = exports.getAccountFromWIFKey = exports.getAccountFromPublicKey = exports.getAccountFromPrivateKey = exports.generateRandomArray = exports.generatePrivateKey = exports.getWIFFromPrivateKey = exports.createSignatureScript = exports.addContract = exports.addressToScriptHash = undefined;

var _ecurve = __webpack_require__(84);

var _ecurve2 = _interopRequireDefault(_ecurve);

var _bigi = __webpack_require__(14);

var _bigi2 = _interopRequireDefault(_bigi);

var _elliptic = __webpack_require__(3);

var _cryptoJs = __webpack_require__(23);

var _cryptoJs2 = _interopRequireDefault(_cryptoJs);

var _wif = __webpack_require__(135);

var _wif2 = _interopRequireDefault(_wif);

var _utils = __webpack_require__(6);

var _secureRandom = __webpack_require__(139);

var _secureRandom2 = _interopRequireDefault(_secureRandom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BASE58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
var base58 = __webpack_require__(51)(BASE58);

/**
 * @typedef {Object} Account
 * @property {string} privateKey The private key in hex
 * @property {string} publicKeyEncoded The public key in encoded form
 * @property {string} publicKeyHash Hash of the public key
 * @property {string} programHash Program Hash to use for signing
 * @property {string} address Public address of the private key
 */

var addressToScriptHash = exports.addressToScriptHash = function addressToScriptHash(address) {
  return (0, _utils.ab2hexstring)(base58.decode(address).slice(1, 21));
};

/**
 * Constructs a signed transaction.
 * @param {string} txData - Unsigned serialized transaction.
 * @param {string} sign - Signature obtained from signatureData.
 * @param {string} publicKeyEncoded - Public key in encoded form.
 * @return {string} A signed transaction ready to be sent over RPC.
 */
var addContract = exports.addContract = function addContract(txData, sign, publicKeyEncoded) {
  var signatureScript = createSignatureScript(publicKeyEncoded);
  // console.log(signatureScript);
  // sign num
  var data = txData + '01';
  // sign struct len
  data = data + '41';
  // sign data len
  data = data + '40';
  // sign data
  data = data + sign;
  // Contract data len
  data = data + '23';
  // script data
  data = data + signatureScript;
  // console.log(data);
  return data;
};

/**
 * Create Signature Script
 * @param {string|ArrayBuffer} publicKeyEncoded - Public Key in encoded form
 * @return {string} Signature Script
 */
var createSignatureScript = exports.createSignatureScript = function createSignatureScript(publicKeyEncoded) {
  if (publicKeyEncoded instanceof ArrayBuffer) publicKeyEncoded = publicKeyEncoded.toString('hex');
  return '21' + publicKeyEncoded + 'ac';
};

/**
 * Encodes Private Key into WIF
 * @param {ArrayBuffer} privateKey - Private Key
 * @returns {string} WIF key
 */
var getWIFFromPrivateKey = exports.getWIFFromPrivateKey = function getWIFFromPrivateKey(privateKey) {
  var hexKey = (0, _utils.ab2hexstring)(privateKey);
  return _wif2.default.encode(128, Buffer.from(hexKey, 'hex'), true);
};

/**
 * Generates a random private key
 * @returns {ArrayBuffer} An ArrayBuffer of 32 bytes
 */
var generatePrivateKey = exports.generatePrivateKey = function generatePrivateKey() {
  return (0, _secureRandom2.default)(32);
};

var generateRandomArray = exports.generateRandomArray = function generateRandomArray($arrayLen) {
  return (0, _secureRandom2.default)($arrayLen);
};

/**
 * Get Account from Private Key
 * @param {string} privateKey - Private Key
 * @returns {Account} An Account object
 */
var getAccountFromPrivateKey = exports.getAccountFromPrivateKey = function getAccountFromPrivateKey(privateKey) {
  if (privateKey.length !== 64) {
    return -1;
  }
  var publicKeyEncoded = getPublicKey(privateKey, true);
  // console.log(publicKeyEncoded)
  return getAccountFromPublicKey((0, _utils.ab2hexstring)(publicKeyEncoded), privateKey);
};

/**
 * Get Account from Public Key
 * @param {string} publicKeyEncoded - Public Key in encoded form
 * @param {string} privateKey - Private Key (optional)
 * @returns {Account} An Account object
 */
var getAccountFromPublicKey = exports.getAccountFromPublicKey = function getAccountFromPublicKey(publicKeyEncoded, privateKey) {
  if (!verifyPublicKeyEncoded(publicKeyEncoded)) {
    // verify failed.
    return -1;
  }
  var publicKeyHash = getHash(publicKeyEncoded);
  // console.log(publicKeyHash)

  var script = createSignatureScript(publicKeyEncoded);
  // console.log(script)

  var programHash = getHash(script);
  // console.log(programHash)

  var address = toAddress((0, _utils.hexstring2ab)(programHash));
  // console.log(address)

  return { privateKey: privateKey, publicKeyEncoded: publicKeyEncoded, publicKeyHash: publicKeyHash, programHash: programHash, address: address };
};

/**
 * Get Account from WIF
 * @param {string} WIFKey - WIF Key
 * @returns {Account|number} An Account object or -1 for basic encoding errors, -2 for failed verification of WIF
 */
var getAccountFromWIFKey = exports.getAccountFromWIFKey = function getAccountFromWIFKey(WIFKey) {
  var privateKey = getPrivateKeyFromWIF(WIFKey);
  if (privateKey === -1 || privateKey === -2) {
    return privateKey;
  }
  return getAccountFromPrivateKey(privateKey);
};

/**
 * Get hash of string input
 * @param {string} signatureScript - String input
 * @returns {string} Hashed output
 */
var getHash = exports.getHash = function getHash(signatureScript) {
  var ProgramHexString = _cryptoJs2.default.enc.Hex.parse(signatureScript);
  var ProgramSha256 = _cryptoJs2.default.SHA256(ProgramHexString);
  return _cryptoJs2.default.RIPEMD160(ProgramSha256).toString();
};

/**
 * Get private key from WIF key.
 * @param {string} wif - WIF key
 * @return {string} Private key
 */
var getPrivateKeyFromWIF = exports.getPrivateKeyFromWIF = function getPrivateKeyFromWIF(wif) {
  var data = base58.decode(wif);

  if (data.length !== 38 || data[0] !== 0x80 || data[33] !== 0x01) {
    // basic encoding errors
    return -1;
  }

  var dataHexString = _cryptoJs2.default.enc.Hex.parse((0, _utils.ab2hexstring)(data.slice(0, data.length - 4)));
  var dataSha = _cryptoJs2.default.SHA256(dataHexString);
  var dataSha2 = _cryptoJs2.default.SHA256(dataSha);
  var dataShaBuffer = (0, _utils.hexstring2ab)(dataSha2.toString());

  if ((0, _utils.ab2hexstring)(dataShaBuffer.slice(0, 4)) !== (0, _utils.ab2hexstring)(data.slice(data.length - 4, data.length))) {
    // wif verify failed.
    return -2;
  }

  return data.slice(1, 33).toString('hex');
};

/**
 * Get public key from private key.
 * @param {string} privateKey - Private Key.
 * @param {boolean} encode - If the returned public key should be encrypted. Defaults to true
 * @return {ArrayBuffer} ArrayBuffer containing the public key.
 */
var getPublicKey = exports.getPublicKey = function getPublicKey(privateKey, encode) {
  var ecparams = _ecurve2.default.getCurveByName('secp256r1');
  var curvePt = ecparams.G.multiply(_bigi2.default.fromBuffer((0, _utils.hexstring2ab)(privateKey)));
  return curvePt.getEncoded(encode);
};

/**
 * Encodes an unencoded public key.
 * @param {string} publicKey - Unencoded public key.
 * @return {string} Encoded public key.
 */
var getPublicKeyEncoded = exports.getPublicKeyEncoded = function getPublicKeyEncoded(publicKey) {
  var publicKeyArray = (0, _utils.hexstring2ab)(publicKey);
  if (publicKeyArray[64] % 2 === 1) {
    return '03' + (0, _utils.ab2hexstring)(publicKeyArray.slice(1, 33));
  } else {
    return '02' + (0, _utils.ab2hexstring)(publicKeyArray.slice(1, 33));
  }
};

/**
 * Constructs a valid address from a ProgramHash
 * @param {ArrayBuffer} ProgramHash - ProgramHash obtained from hashing the address
 * @returns {string} A valid NEO address
 */
var toAddress = exports.toAddress = function toAddress(ProgramHash) {
  if (ProgramHash.length !== 20) throw new Error('Invalid ProgramHash length');
  var data = new Uint8Array(1 + ProgramHash.length);
  data.set([23]); // Wallet addressVersion
  data.set(ProgramHash, 1);
  // console.log(ab2hexstring(data))

  var scriptHashHex = _cryptoJs2.default.enc.Hex.parse((0, _utils.ab2hexstring)(data));
  var scriptHashSha = _cryptoJs2.default.SHA256(scriptHashHex);
  var scriptHashSha2 = _cryptoJs2.default.SHA256(scriptHashSha);
  var scriptHashShaBuffer = (0, _utils.hexstring2ab)(scriptHashSha2.toString());
  // console.log(ab2hexstring(ProgramSha256Buffer))

  var datas = new Uint8Array(1 + ProgramHash.length + 4);
  datas.set(data);
  datas.set(scriptHashShaBuffer.slice(0, 4), 21);
  // console.log(ab2hexstring(datas))

  return base58.encode(datas);
};

/**
 * Gets the scriptHash of an address.
 * @param {string} address - The address
 * @return {string} scriptHash (BE)
 */
var getScriptHashFromAddress = exports.getScriptHashFromAddress = function getScriptHashFromAddress(address) {
  var hash = (0, _utils.ab2hexstring)(base58.decode(address));
  return (0, _utils.reverseHex)(hash.substr(2, 40));
};

/**
 * Gets the scriptHash of a Public key.
 * @param {string} publicKey
 * @return {string} scriptHash (BE)
 */
var getScriptHashFromPublicKey = exports.getScriptHashFromPublicKey = function getScriptHashFromPublicKey(publicKey) {
  return getScriptHashFromAddress(toAddress((0, _utils.hexstring2ab)(getHash(createSignatureScript(publicKey)))));
};
/**
 * Signs a transaction with a private key
 * @param {string} data - Serialised transaction data.
 * @param {string} privateKey - Private Key
 * @returns {string} Signature data.
 */
var signatureData = exports.signatureData = function signatureData(data, privateKey) {
  var msg = _cryptoJs2.default.enc.Hex.parse(data);
  var msgHash = _cryptoJs2.default.SHA256(msg);
  var msgHashHex = Buffer.from(msgHash.toString(), 'hex');
  // const privateKeyHex = Buffer.from($privateKey, 'hex')
  // console.log( "msgHash:", msgHashHex.toString('hex'));
  // console.log('buffer', privateKeyHex.toString('hex'));

  var elliptic = new _elliptic.ec('p256');
  var sig = elliptic.sign(msgHashHex, privateKey, null);
  var signature = {
    signature: Buffer.concat([sig.r.toArrayLike(Buffer, 'be', 32), sig.s.toArrayLike(Buffer, 'be', 32)])
  };
  return signature.signature.toString('hex');
};

/**
 * Verifies if the string is a valid NEO address.
 * @param {string} address - A string that can be a NEO address.
 * @returns {boolean} True if the string is a valid NEO address.
 */
var verifyAddress = exports.verifyAddress = function verifyAddress(address) {
  var programHash = base58.decode(address);
  var programHexString = _cryptoJs2.default.enc.Hex.parse((0, _utils.ab2hexstring)(programHash.slice(0, 21)));
  var programSha256 = _cryptoJs2.default.SHA256(programHexString);
  var programSha256Twice = _cryptoJs2.default.SHA256(programSha256);
  var programSha256Buffer = (0, _utils.hexstring2ab)(programSha256Twice.toString());

  // We use the checksum to verify the address
  if ((0, _utils.ab2hexstring)(programSha256Buffer.slice(0, 4)) !== (0, _utils.ab2hexstring)(programHash.slice(21, 25))) {
    return false;
  }

  // As other chains use similar checksum methods, we need to attempt to transform the programHash back into the address
  if (toAddress(programHash.slice(1, 21)) !== address) {
    // address is not valid Neo address, could be btc, ltc etc.
    return false;
  }

  return true;
};

/**
 * Verifies if the string is a valid public key.
 * @param {string} publicKeyEncoded - A string that is a possible public key in encoded form.
 * @returns {boolean} True if the string is a valid encoded public key.
 */
var verifyPublicKeyEncoded = exports.verifyPublicKeyEncoded = function verifyPublicKeyEncoded(publicKeyEncoded) {
  var publicKeyArray = (0, _utils.hexstring2ab)(publicKeyEncoded);
  if (publicKeyArray[0] !== 0x02 && publicKeyArray[0] !== 0x03) {
    return false;
  }

  var ecparams = _ecurve2.default.getCurveByName('secp256r1');
  var curvePt = _ecurve2.default.Point.decodeFrom(ecparams, Buffer.from(publicKeyEncoded, 'hex'));
  // let curvePtX = curvePt.affineX.toBuffer(32)
  var curvePtY = curvePt.affineY.toBuffer(32);

  // console.log( "publicKeyArray", publicKeyArray )
  // console.log( "curvePtX", curvePtX )
  // console.log( "curvePtY", curvePtY )

  if (publicKeyArray[0] === 0x02 && curvePtY[31] % 2 === 0) {
    return true;
  }

  if (publicKeyArray[0] === 0x03 && curvePtY[31] % 2 === 1) {
    return true;
  }

  return false;
};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * Base64 encoding strategy.
	     */
	    var Base64 = C_enc.Base64 = {
	        /**
	         * Converts a word array to a Base64 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Base64 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;
	            var map = this._map;

	            // Clamp excess bits
	            wordArray.clamp();

	            // Convert
	            var base64Chars = [];
	            for (var i = 0; i < sigBytes; i += 3) {
	                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
	                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
	                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

	                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

	                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
	                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
	                }
	            }

	            // Add padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                while (base64Chars.length % 4) {
	                    base64Chars.push(paddingChar);
	                }
	            }

	            return base64Chars.join('');
	        },

	        /**
	         * Converts a Base64 string to a word array.
	         *
	         * @param {string} base64Str The Base64 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
	         */
	        parse: function (base64Str) {
	            // Shortcuts
	            var base64StrLength = base64Str.length;
	            var map = this._map;
	            var reverseMap = this._reverseMap;

	            if (!reverseMap) {
	                    reverseMap = this._reverseMap = [];
	                    for (var j = 0; j < map.length; j++) {
	                        reverseMap[map.charCodeAt(j)] = j;
	                    }
	            }

	            // Ignore padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                var paddingIndex = base64Str.indexOf(paddingChar);
	                if (paddingIndex !== -1) {
	                    base64StrLength = paddingIndex;
	                }
	            }

	            // Convert
	            return parseLoop(base64Str, base64StrLength, reverseMap);

	        },

	        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
	    };

	    function parseLoop(base64Str, base64StrLength, reverseMap) {
	      var words = [];
	      var nBytes = 0;
	      for (var i = 0; i < base64StrLength; i++) {
	          if (i % 4) {
	              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
	              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
	              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);
	              nBytes++;
	          }
	      }
	      return WordArray.create(words, nBytes);
	    }
	}());


	return CryptoJS.enc.Base64;

}));

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var T = [];

	    // Compute constants
	    (function () {
	        for (var i = 0; i < 64; i++) {
	            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
	        }
	    }());

	    /**
	     * MD5 hash algorithm.
	     */
	    var MD5 = C_algo.MD5 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }

	            // Shortcuts
	            var H = this._hash.words;

	            var M_offset_0  = M[offset + 0];
	            var M_offset_1  = M[offset + 1];
	            var M_offset_2  = M[offset + 2];
	            var M_offset_3  = M[offset + 3];
	            var M_offset_4  = M[offset + 4];
	            var M_offset_5  = M[offset + 5];
	            var M_offset_6  = M[offset + 6];
	            var M_offset_7  = M[offset + 7];
	            var M_offset_8  = M[offset + 8];
	            var M_offset_9  = M[offset + 9];
	            var M_offset_10 = M[offset + 10];
	            var M_offset_11 = M[offset + 11];
	            var M_offset_12 = M[offset + 12];
	            var M_offset_13 = M[offset + 13];
	            var M_offset_14 = M[offset + 14];
	            var M_offset_15 = M[offset + 15];

	            // Working varialbes
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];

	            // Computation
	            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
	            d = FF(d, a, b, c, M_offset_1,  12, T[1]);
	            c = FF(c, d, a, b, M_offset_2,  17, T[2]);
	            b = FF(b, c, d, a, M_offset_3,  22, T[3]);
	            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
	            d = FF(d, a, b, c, M_offset_5,  12, T[5]);
	            c = FF(c, d, a, b, M_offset_6,  17, T[6]);
	            b = FF(b, c, d, a, M_offset_7,  22, T[7]);
	            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
	            d = FF(d, a, b, c, M_offset_9,  12, T[9]);
	            c = FF(c, d, a, b, M_offset_10, 17, T[10]);
	            b = FF(b, c, d, a, M_offset_11, 22, T[11]);
	            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
	            d = FF(d, a, b, c, M_offset_13, 12, T[13]);
	            c = FF(c, d, a, b, M_offset_14, 17, T[14]);
	            b = FF(b, c, d, a, M_offset_15, 22, T[15]);

	            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
	            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
	            c = GG(c, d, a, b, M_offset_11, 14, T[18]);
	            b = GG(b, c, d, a, M_offset_0,  20, T[19]);
	            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
	            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
	            c = GG(c, d, a, b, M_offset_15, 14, T[22]);
	            b = GG(b, c, d, a, M_offset_4,  20, T[23]);
	            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
	            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
	            c = GG(c, d, a, b, M_offset_3,  14, T[26]);
	            b = GG(b, c, d, a, M_offset_8,  20, T[27]);
	            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
	            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
	            c = GG(c, d, a, b, M_offset_7,  14, T[30]);
	            b = GG(b, c, d, a, M_offset_12, 20, T[31]);

	            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
	            d = HH(d, a, b, c, M_offset_8,  11, T[33]);
	            c = HH(c, d, a, b, M_offset_11, 16, T[34]);
	            b = HH(b, c, d, a, M_offset_14, 23, T[35]);
	            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
	            d = HH(d, a, b, c, M_offset_4,  11, T[37]);
	            c = HH(c, d, a, b, M_offset_7,  16, T[38]);
	            b = HH(b, c, d, a, M_offset_10, 23, T[39]);
	            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
	            d = HH(d, a, b, c, M_offset_0,  11, T[41]);
	            c = HH(c, d, a, b, M_offset_3,  16, T[42]);
	            b = HH(b, c, d, a, M_offset_6,  23, T[43]);
	            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
	            d = HH(d, a, b, c, M_offset_12, 11, T[45]);
	            c = HH(c, d, a, b, M_offset_15, 16, T[46]);
	            b = HH(b, c, d, a, M_offset_2,  23, T[47]);

	            a = II(a, b, c, d, M_offset_0,  6,  T[48]);
	            d = II(d, a, b, c, M_offset_7,  10, T[49]);
	            c = II(c, d, a, b, M_offset_14, 15, T[50]);
	            b = II(b, c, d, a, M_offset_5,  21, T[51]);
	            a = II(a, b, c, d, M_offset_12, 6,  T[52]);
	            d = II(d, a, b, c, M_offset_3,  10, T[53]);
	            c = II(c, d, a, b, M_offset_10, 15, T[54]);
	            b = II(b, c, d, a, M_offset_1,  21, T[55]);
	            a = II(a, b, c, d, M_offset_8,  6,  T[56]);
	            d = II(d, a, b, c, M_offset_15, 10, T[57]);
	            c = II(c, d, a, b, M_offset_6,  15, T[58]);
	            b = II(b, c, d, a, M_offset_13, 21, T[59]);
	            a = II(a, b, c, d, M_offset_4,  6,  T[60]);
	            d = II(d, a, b, c, M_offset_11, 10, T[61]);
	            c = II(c, d, a, b, M_offset_2,  15, T[62]);
	            b = II(b, c, d, a, M_offset_9,  21, T[63]);

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

	            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
	            var nBitsTotalL = nBitsTotal;
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
	                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
	            );
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
	            );

	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                // Shortcut
	                var H_i = H[i];

	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    function FF(a, b, c, d, x, s, t) {
	        var n = a + ((b & c) | (~b & d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function GG(a, b, c, d, x, s, t) {
	        var n = a + ((b & d) | (c & ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function HH(a, b, c, d, x, s, t) {
	        var n = a + (b ^ c ^ d) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function II(a, b, c, d, x, s, t) {
	        var n = a + (c ^ (b | ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.MD5('message');
	     *     var hash = CryptoJS.MD5(wordArray);
	     */
	    C.MD5 = Hasher._createHelper(MD5);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacMD5(message, key);
	     */
	    C.HmacMD5 = Hasher._createHmacHelper(MD5);
	}(Math));


	return CryptoJS.MD5;

}));

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var assert = __webpack_require__(7);

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var BigInteger = __webpack_require__(41)

//addons
__webpack_require__(86)

module.exports = BigInteger

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = exports;

curve.base = __webpack_require__(92);
curve.short = __webpack_require__(93);
curve.mont = __webpack_require__(95);
curve.edwards = __webpack_require__(96);


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

try {
  var util = __webpack_require__(36);
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  module.exports = __webpack_require__(94);
}


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var X32WordArray = C_lib.WordArray;

	    /**
	     * x64 namespace.
	     */
	    var C_x64 = C.x64 = {};

	    /**
	     * A 64-bit word.
	     */
	    var X64Word = C_x64.Word = Base.extend({
	        /**
	         * Initializes a newly created 64-bit word.
	         *
	         * @param {number} high The high 32 bits.
	         * @param {number} low The low 32 bits.
	         *
	         * @example
	         *
	         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
	         */
	        init: function (high, low) {
	            this.high = high;
	            this.low = low;
	        }

	        /**
	         * Bitwise NOTs this word.
	         *
	         * @return {X64Word} A new x64-Word object after negating.
	         *
	         * @example
	         *
	         *     var negated = x64Word.not();
	         */
	        // not: function () {
	            // var high = ~this.high;
	            // var low = ~this.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ANDs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to AND with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ANDing.
	         *
	         * @example
	         *
	         *     var anded = x64Word.and(anotherX64Word);
	         */
	        // and: function (word) {
	            // var high = this.high & word.high;
	            // var low = this.low & word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to OR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ORing.
	         *
	         * @example
	         *
	         *     var ored = x64Word.or(anotherX64Word);
	         */
	        // or: function (word) {
	            // var high = this.high | word.high;
	            // var low = this.low | word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise XORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to XOR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after XORing.
	         *
	         * @example
	         *
	         *     var xored = x64Word.xor(anotherX64Word);
	         */
	        // xor: function (word) {
	            // var high = this.high ^ word.high;
	            // var low = this.low ^ word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the left.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftL(25);
	         */
	        // shiftL: function (n) {
	            // if (n < 32) {
	                // var high = (this.high << n) | (this.low >>> (32 - n));
	                // var low = this.low << n;
	            // } else {
	                // var high = this.low << (n - 32);
	                // var low = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the right.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftR(7);
	         */
	        // shiftR: function (n) {
	            // if (n < 32) {
	                // var low = (this.low >>> n) | (this.high << (32 - n));
	                // var high = this.high >>> n;
	            // } else {
	                // var low = this.high >>> (n - 32);
	                // var high = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Rotates this word n bits to the left.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotL(25);
	         */
	        // rotL: function (n) {
	            // return this.shiftL(n).or(this.shiftR(64 - n));
	        // },

	        /**
	         * Rotates this word n bits to the right.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotR(7);
	         */
	        // rotR: function (n) {
	            // return this.shiftR(n).or(this.shiftL(64 - n));
	        // },

	        /**
	         * Adds this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to add with this word.
	         *
	         * @return {X64Word} A new x64-Word object after adding.
	         *
	         * @example
	         *
	         *     var added = x64Word.add(anotherX64Word);
	         */
	        // add: function (word) {
	            // var low = (this.low + word.low) | 0;
	            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
	            // var high = (this.high + word.high + carry) | 0;

	            // return X64Word.create(high, low);
	        // }
	    });

	    /**
	     * An array of 64-bit words.
	     *
	     * @property {Array} words The array of CryptoJS.x64.Word objects.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var X64WordArray = C_x64.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create();
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ]);
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ], 10);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 8;
	            }
	        },

	        /**
	         * Converts this 64-bit word array to a 32-bit word array.
	         *
	         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
	         *
	         * @example
	         *
	         *     var x32WordArray = x64WordArray.toX32();
	         */
	        toX32: function () {
	            // Shortcuts
	            var x64Words = this.words;
	            var x64WordsLength = x64Words.length;

	            // Convert
	            var x32Words = [];
	            for (var i = 0; i < x64WordsLength; i++) {
	                var x64Word = x64Words[i];
	                x32Words.push(x64Word.high);
	                x32Words.push(x64Word.low);
	            }

	            return X32WordArray.create(x32Words, this.sigBytes);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {X64WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = x64WordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);

	            // Clone "words" array
	            var words = clone.words = this.words.slice(0);

	            // Clone each X64Word object
	            var wordsLength = words.length;
	            for (var i = 0; i < wordsLength; i++) {
	                words[i] = words[i].clone();
	            }

	            return clone;
	        }
	    });
	}());


	return CryptoJS;

}));

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);
var normalizeHeaderName = __webpack_require__(61);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(62);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(67);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(29);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var hash = exports;

hash.utils = __webpack_require__(4);
hash.common = __webpack_require__(12);
hash.sha = __webpack_require__(98);
hash.ripemd = __webpack_require__(102);
hash.hmac = __webpack_require__(103);

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(17), __webpack_require__(112), __webpack_require__(113), __webpack_require__(10), __webpack_require__(11), __webpack_require__(24), __webpack_require__(48), __webpack_require__(114), __webpack_require__(49), __webpack_require__(115), __webpack_require__(116), __webpack_require__(117), __webpack_require__(25), __webpack_require__(118), __webpack_require__(8), __webpack_require__(1), __webpack_require__(119), __webpack_require__(120), __webpack_require__(121), __webpack_require__(122), __webpack_require__(123), __webpack_require__(124), __webpack_require__(125), __webpack_require__(126), __webpack_require__(127), __webpack_require__(128), __webpack_require__(129), __webpack_require__(130), __webpack_require__(131), __webpack_require__(132), __webpack_require__(133), __webpack_require__(134));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropadding", "./pad-nopadding", "./format-hex", "./aes", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy"], factory);
	}
	else {
		// Global (browser)
		root.CryptoJS = factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	return CryptoJS;

}));

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-1 hash algorithm.
	     */
	    var SHA1 = C_algo.SHA1 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476,
	                0xc3d2e1f0
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];

	            // Computation
	            for (var i = 0; i < 80; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	                    W[i] = (n << 1) | (n >>> 31);
	                }

	                var t = ((a << 5) | (a >>> 27)) + e + W[i];
	                if (i < 20) {
	                    t += ((b & c) | (~b & d)) + 0x5a827999;
	                } else if (i < 40) {
	                    t += (b ^ c ^ d) + 0x6ed9eba1;
	                } else if (i < 60) {
	                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;
	                } else /* if (i < 80) */ {
	                    t += (b ^ c ^ d) - 0x359d3e2a;
	                }

	                e = d;
	                d = c;
	                c = (b << 30) | (b >>> 2);
	                b = a;
	                a = t;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA1('message');
	     *     var hash = CryptoJS.SHA1(wordArray);
	     */
	    C.SHA1 = Hasher._createHelper(SHA1);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA1(message, key);
	     */
	    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
	}());


	return CryptoJS.SHA1;

}));

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var C_algo = C.algo;

	    /**
	     * HMAC algorithm.
	     */
	    var HMAC = C_algo.HMAC = Base.extend({
	        /**
	         * Initializes a newly created HMAC.
	         *
	         * @param {Hasher} hasher The hash algorithm to use.
	         * @param {WordArray|string} key The secret key.
	         *
	         * @example
	         *
	         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
	         */
	        init: function (hasher, key) {
	            // Init hasher
	            hasher = this._hasher = new hasher.init();

	            // Convert string to WordArray, else assume WordArray already
	            if (typeof key == 'string') {
	                key = Utf8.parse(key);
	            }

	            // Shortcuts
	            var hasherBlockSize = hasher.blockSize;
	            var hasherBlockSizeBytes = hasherBlockSize * 4;

	            // Allow arbitrary length keys
	            if (key.sigBytes > hasherBlockSizeBytes) {
	                key = hasher.finalize(key);
	            }

	            // Clamp excess bits
	            key.clamp();

	            // Clone key for inner and outer pads
	            var oKey = this._oKey = key.clone();
	            var iKey = this._iKey = key.clone();

	            // Shortcuts
	            var oKeyWords = oKey.words;
	            var iKeyWords = iKey.words;

	            // XOR keys with pad constants
	            for (var i = 0; i < hasherBlockSize; i++) {
	                oKeyWords[i] ^= 0x5c5c5c5c;
	                iKeyWords[i] ^= 0x36363636;
	            }
	            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this HMAC to its initial state.
	         *
	         * @example
	         *
	         *     hmacHasher.reset();
	         */
	        reset: function () {
	            // Shortcut
	            var hasher = this._hasher;

	            // Reset
	            hasher.reset();
	            hasher.update(this._iKey);
	        },

	        /**
	         * Updates this HMAC with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {HMAC} This HMAC instance.
	         *
	         * @example
	         *
	         *     hmacHasher.update('message');
	         *     hmacHasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            this._hasher.update(messageUpdate);

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the HMAC computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The HMAC.
	         *
	         * @example
	         *
	         *     var hmac = hmacHasher.finalize();
	         *     var hmac = hmacHasher.finalize('message');
	         *     var hmac = hmacHasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Shortcut
	            var hasher = this._hasher;

	            // Compute HMAC
	            var innerHash = hasher.finalize(messageUpdate);
	            hasher.reset();
	            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

	            return hmac;
	        }
	    });
	}());


}));

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testInvokeRPC = exports.queryRPC = exports.getWalletDBHeight = exports.getTransactionHistory = exports.getRPCEndpoint = exports.getClaimAmounts = exports.getBalance = exports.getAPIEndpoint = exports.doSendTx = exports.doMintTokens = exports.doSendAsset = exports.getStorage = exports.parseVMStack = exports.doInvokeScript = exports.doClaimAllGas = exports.allAssetIds = exports.gasId = exports.neoId = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _axios = __webpack_require__(57);

var _axios2 = _interopRequireDefault(_axios);

var _wallet = __webpack_require__(9);

var _index = __webpack_require__(52);

var tx = _interopRequireWildcard(_index);

var _utils = __webpack_require__(6);

var _lodash = __webpack_require__(143);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// hard-code asset ids for NEO and GAS
var neoId = exports.neoId = 'c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b';
var gasId = exports.gasId = '602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7';
var allAssetIds = exports.allAssetIds = [neoId, gasId];

/**
 * @typedef {Object} Coin
 * @property {number} index - Index in list.
 * @property {string} txid - Transaction ID which produced this coin.
 * @property {number} value - Value of this coin.
 */

/**
 * @typedef {Object} Balance
 * @property {{balance: number, unspent: Coin[]}} NEO Amount of NEO in address
 * @property {{balance: number, unspent: Coin[]}} GAS Amount of GAS in address
 * @property {string} address - The Address that was queried
 * @property {string} net - 'MainNet' or 'TestNet'
 */

/**
 * @typedef {Object} History
 * @property {string} address - Address.
 * @property {string} name - API name.
 * @property {string} net - 'MainNet' or 'TestNet'
 * @property {PastTx[]} history - List of past transactions.
 */

/**
 * @typedef {Object} PastTx
 * @property {number} GAS - Gas involved.
 * @property {number} NEO - NEO involved.
 * @property {number} block_index - Block index.
 * @property {boolean} gas_sent - Was GAS sent.
 * @property {boolean} neo_sent - Was NEO sent.
 * @property {string} txid - Transaction ID.
 */
/**
 * @typedef {Object} Response
 * @property {string} jsonrpc - JSON-RPC Version
 * @property {number} id - Unique ID.
 * @property {any} result - Result
*/

/**
 * Perform a ClaimTransaction for all available GAS
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} fromWif - WIF key of address you are claiming from.
 * @return {Promise<Response>} RPC response from sending transaction
 */
var doClaimAllGas = exports.doClaimAllGas = function doClaimAllGas(net, fromWif) {
  var apiEndpoint = getAPIEndpoint(net);
  var account = (0, _wallet.getAccountFromWIFKey)(fromWif);
  // TODO: when fully working replace this with mainnet/testnet switch
  return _axios2.default.get(apiEndpoint + '/v2/address/claims/' + account.address).then(function (response) {
    var unsignedTx = tx.create.claim(account.publicKeyEncoded, response.data);
    var signedTx = tx.signTransaction(unsignedTx, account.privateKey);
    var hexTx = tx.serializeTransaction(signedTx);
    return queryRPC(net, 'sendrawtransaction', [hexTx], 2);
  });
};

/**
 * Sends an invokescript RPC request and returns a parsed result.
 * @param {string} net - 'MainNet' or 'TestNet' or custom URL
 * @param {string} script - script to run on VM.
 * @param {boolean} parse - If method should parse response
 * @return {{state: string, gas_consumed: string|number, stack: []}} VM Response.
 */
var doInvokeScript = exports.doInvokeScript = function doInvokeScript(net, script) {
  var parse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  return queryRPC(net, 'invokescript', [script]).then(function (response) {
    console.log(response);
    if (parse && response.result.state === 'HALT, BREAK') {
      var parsed = parseVMStack(response.result.stack);
      var gasConsumed = parseInt(response.result.gas_consumed, 10);
      return Object.assign(response.result, { stack: parsed, gas_consumed: gasConsumed });
    } else {
      return response.result;
    }
  });
};

/**
 * Parses the VM Stack and returns human readable strings
 * @param {{type:string, value: string}[]} stack - VM Output
 * @return {any[]} Array of results
 */
var parseVMStack = exports.parseVMStack = function parseVMStack(stack) {
  return stack.map(function (item) {
    switch (item.type) {
      case 'ByteArray':
        return (0, _utils.ab2str)((0, _utils.hexstring2ab)(item.value));
      case 'Integer':
        return parseInt(item.value, 10);
      default:
        throw Error('Unknown type: ' + item.type);
    }
  });
};

/**
 * Lookup key in SC storage
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} scriptHash of SC
 * @return {Promise<Response>} RPC response looking up key from storage
 */
var getStorage = exports.getStorage = function getStorage(net, scriptHash, key) {
  return queryRPC(net, 'getstorage', [scriptHash, key]);
};

/**
 * Send an asset to an address
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} toAddress - The destination address.
 * @param {string} fromWif - The WIF key of the originating address.
 * @param {{NEO: number, GAS: number}} amount - The amount of each asset (NEO and GAS) to send, leave empty for 0.
 * @return {Promise<Response>} RPC Response
 */
var doSendAsset = exports.doSendAsset = function doSendAsset(net, toAddress, fromWif, assetAmounts) {
  var account = (0, _wallet.getAccountFromWIFKey)(fromWif);
  var toScriptHash = (0, _wallet.getScriptHashFromAddress)(toAddress);
  return getBalance(net, account.address).then(function (balances) {
    // TODO: maybe have transactions handle this construction?
    var intents = _lodash2.default.map(assetAmounts, function (v, k) {
      return { assetId: tx.ASSETS[k], value: v, scriptHash: toScriptHash };
    });
    var unsignedTx = tx.create.contract(account.publicKeyEncoded, balances, intents);
    var signedTx = tx.signTransaction(unsignedTx, account.privateKey);
    var hexTx = tx.serializeTransaction(signedTx);
    return queryRPC(net, 'sendrawtransaction', [hexTx], 4);
  });
};

/**
 * Call mintTokens for RPX
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} fromWif - The WIF key of the originating address.
 * @param {neo} amount - The amount of neo to send to RPX.
 * @param {gasCost} amount - The Gas to send as SC fee.
 * @return {Promise<Response>} RPC Response
 */
var doMintTokens = exports.doMintTokens = function doMintTokens(net, scriptHash, fromWif, neo, gasCost) {
  var account = (0, _wallet.getAccountFromWIFKey)(fromWif);
  return getBalance(net, account.address).then(function (balances) {
    // TODO: maybe have transactions handle this construction?
    var intents = [{ assetId: tx.ASSETS['NEO'], value: neo, scriptHash: scriptHash }];
    var invoke = { operation: 'mintTokens', scriptHash: scriptHash };
    var unsignedTx = tx.create.invocation(account.publicKeyEncoded, balances, intents, invoke, gasCost, { version: 1 });
    var signedTx = tx.signTransaction(unsignedTx, account.privateKey);
    var hexTx = tx.serializeTransaction(signedTx);
    return queryRPC(net, 'sendrawtransaction', [hexTx], 4);
  });
};

/**
 * Sends a Transaction.
 * @param {string} net - 'MainNet' or 'TestNet'
 * @param {string|Object} transaction - Serialized hexstring or Transaction Object.
 * @param {Promise<Response>}
 */
var doSendTx = exports.doSendTx = function doSendTx(net, transaction) {
  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 42;

  var txString = (typeof transaction === 'undefined' ? 'undefined' : _typeof(transaction)) === 'object' ? tx.serializeTransaction(transaction) : transaction;
  return queryRPC(net, 'sendrawtransaction', [txString], id);
};

/**
 * API Switch for MainNet and TestNet
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @return {string} URL of API endpoint.
 */
var getAPIEndpoint = exports.getAPIEndpoint = function getAPIEndpoint(net) {
  if (net === 'MainNet') {
    return 'http://api.wallet.cityofzion.io';
  } else {
    return 'http://testnet-api.wallet.cityofzion.io';
  }
};

/**
 * Get balances of NEO and GAS for an address
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} address - Address to check.
 * @return {Promise<Balance>} Balance of address
 */
var getBalance = exports.getBalance = function getBalance(net, address) {
  var apiEndpoint = getAPIEndpoint(net);
  return _axios2.default.get(apiEndpoint + '/v2/address/balance/' + address).then(function (res) {
    return res.data;
    // const neo = res.data.NEO.balance
    // const gas = res.data.GAS.balance
    // return { Neo: neo, Gas: gas, unspent: { Neo: res.data.NEO.unspent, Gas: res.data.GAS.unspent } }
  });
};

/**
 * Get amounts of available (spent) and unavailable claims
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} address - Address to check.
 * @return {Promise<{available: number, unavailable: number}>} An Object with available and unavailable GAS amounts.
 */
var getClaimAmounts = exports.getClaimAmounts = function getClaimAmounts(net, address) {
  var apiEndpoint = getAPIEndpoint(net);
  return _axios2.default.get(apiEndpoint + '/v2/address/claims/' + address).then(function (res) {
    return { available: parseInt(res.data.total_claim), unavailable: parseInt(res.data.total_unspent_claim) };
  });
};

/**
 * Returns the best performing (highest block + fastest) node RPC
 * @param {string} net - 'MainNet' or 'TestNet' or a custom URL.
 * @return {Promise<string>} The URL of the best performing node or the custom URL provided.
 */
var getRPCEndpoint = exports.getRPCEndpoint = function getRPCEndpoint(net) {
  if (net !== 'TestNet' && net !== 'MainNet') return Promise.resolve(net);
  var apiEndpoint = getAPIEndpoint(net);
  return _axios2.default.get(apiEndpoint + '/v2/network/best_node').then(function (response) {
    return response.data.node;
  });
};

/**
 * Get transaction history for an account
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} address - Address to check.
 * @return {Promise<History>} History
 */
var getTransactionHistory = exports.getTransactionHistory = function getTransactionHistory(net, address) {
  var apiEndpoint = getAPIEndpoint(net);
  return _axios2.default.get(apiEndpoint + '/v2/address/history/' + address).then(function (response) {
    return response.data.history;
  });
};

/**
 * Get the current height of the light wallet DB
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @return {Promise<number>} Current height.
 */
var getWalletDBHeight = exports.getWalletDBHeight = function getWalletDBHeight(net) {
  var apiEndpoint = getAPIEndpoint(net);
  return _axios2.default.get(apiEndpoint + '/v2/block/height').then(function (response) {
    return parseInt(response.data.block_height);
  });
};

/**
 * Wrapper for querying node RPC
 * @param {string} net - 'MainNet' or 'TestNet'.
 * @param {string} method - RPC Method name.
 * @param {Array} params - Array of parameters to send.
 * @param {number} id - Unique id to identity yourself. RPC should reply with same id.
 * @returns {Promise<Response>} RPC Response
 */
var queryRPC = exports.queryRPC = function queryRPC(net, method, params) {
  var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

  var jsonRequest = _axios2.default.create({ headers: { 'Content-Type': 'application/json' } });
  var jsonRpcData = { method: method, params: params, id: id, jsonrpc: '2.0' };
  return getRPCEndpoint(net).then(function (rpcEndpoint) {
    return jsonRequest.post(rpcEndpoint, jsonRpcData).then(function (response) {
      return response.data;
    });
  });
};

var testInvokeRPC = exports.testInvokeRPC = function testInvokeRPC(script) {
  var jsonRequest = _axios2.default.create({ headers: { 'Content-Type': 'application/json' } });
  var jsonRpcData = { method: 'invokescript', params: [script], id: 1, jsonrpc: '2.0' };
  return jsonRequest.post('http://test1.cityofzion.io:8880/', jsonRpcData).then(function (response) {
    return response.data;
  });
};

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(19);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var url = __webpack_require__(34);
var assert = __webpack_require__(13);
var http = __webpack_require__(31);
var https = __webpack_require__(32);
var Writable = __webpack_require__(68).Writable;
var debug = __webpack_require__(69)('follow-redirects');

var nativeProtocols = {'http:': http, 'https:': https};
var schemes = {};
var exports = module.exports = {
	maxRedirects: 21
};
// RFC7231§4.2.1: Of the request methods defined by this specification,
// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.
var safeMethods = {GET: true, HEAD: true, OPTIONS: true, TRACE: true};

// Create handlers that pass events from native requests
var eventHandlers = Object.create(null);
['abort', 'aborted', 'error', 'socket'].forEach(function (event) {
	eventHandlers[event] = function (arg) {
		this._redirectable.emit(event, arg);
	};
});

// An HTTP(S) request that can be redirected
function RedirectableRequest(options, responseCallback) {
	// Initialize the request
	Writable.call(this);
	this._options = options;
	this._redirectCount = 0;
	this._bufferedWrites = [];

	// Attach a callback if passed
	if (responseCallback) {
		this.on('response', responseCallback);
	}

	// React to responses of native requests
	var self = this;
	this._onNativeResponse = function (response) {
		self._processResponse(response);
	};

	// Complete the URL object when necessary
	if (!options.pathname && options.path) {
		var searchPos = options.path.indexOf('?');
		if (searchPos < 0) {
			options.pathname = options.path;
		} else {
			options.pathname = options.path.substring(0, searchPos);
			options.search = options.path.substring(searchPos);
		}
	}

	// Perform the first request
	this._performRequest();
}
RedirectableRequest.prototype = Object.create(Writable.prototype);

// Executes the next native request (initial or redirect)
RedirectableRequest.prototype._performRequest = function () {
	// If specified, use the agent corresponding to the protocol
	// (HTTP and HTTPS use different types of agents)
	var protocol = this._options.protocol;
	if (this._options.agents) {
		this._options.agent = this._options.agents[schemes[protocol]];
	}

	// Create the native request
	var nativeProtocol = nativeProtocols[protocol];
	var request = this._currentRequest =
				nativeProtocol.request(this._options, this._onNativeResponse);
	this._currentUrl = url.format(this._options);

	// Set up event handlers
	request._redirectable = this;
	for (var event in eventHandlers) {
		/* istanbul ignore else */
		if (event) {
			request.on(event, eventHandlers[event]);
		}
	}

	// End a redirected request
	// (The first request must be ended explicitly with RedirectableRequest#end)
	if (this._isRedirect) {
		// If the request doesn't have en entity, end directly.
		var bufferedWrites = this._bufferedWrites;
		if (bufferedWrites.length === 0) {
			request.end();
		// Otherwise, write the request entity and end afterwards.
		} else {
			var i = 0;
			(function writeNext() {
				if (i < bufferedWrites.length) {
					var bufferedWrite = bufferedWrites[i++];
					request.write(bufferedWrite.data, bufferedWrite.encoding, writeNext);
				} else {
					request.end();
				}
			})();
		}
	}
};

// Processes a response from the current native request
RedirectableRequest.prototype._processResponse = function (response) {
	// RFC7231§6.4: The 3xx (Redirection) class of status code indicates
	// that further action needs to be taken by the user agent in order to
	// fulfill the request. If a Location header field is provided,
	// the user agent MAY automatically redirect its request to the URI
	// referenced by the Location field value,
	// even if the specific status code is not understood.
	var location = response.headers.location;
	if (location && this._options.followRedirects !== false &&
			response.statusCode >= 300 && response.statusCode < 400) {
		// RFC7231§6.4: A client SHOULD detect and intervene
		// in cyclical redirections (i.e., "infinite" redirection loops).
		if (++this._redirectCount > this._options.maxRedirects) {
			return this.emit('error', new Error('Max redirects exceeded.'));
		}

		// RFC7231§6.4: Automatic redirection needs to done with
		// care for methods not known to be safe […],
		// since the user might not wish to redirect an unsafe request.
		// RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates
		// that the target resource resides temporarily under a different URI
		// and the user agent MUST NOT change the request method
		// if it performs an automatic redirection to that URI.
		var header;
		var headers = this._options.headers;
		if (response.statusCode !== 307 && !(this._options.method in safeMethods)) {
			this._options.method = 'GET';
			// Drop a possible entity and headers related to it
			this._bufferedWrites = [];
			for (header in headers) {
				if (/^content-/i.test(header)) {
					delete headers[header];
				}
			}
		}

		// Drop the Host header, as the redirect might lead to a different host
		if (!this._isRedirect) {
			for (header in headers) {
				if (/^host$/i.test(header)) {
					delete headers[header];
				}
			}
		}

		// Perform the redirected request
		var redirectUrl = url.resolve(this._currentUrl, location);
		debug('redirecting to', redirectUrl);
		Object.assign(this._options, url.parse(redirectUrl));
		this._isRedirect = true;
		this._performRequest();
	} else {
		// The response is not a redirect; return it as-is
		response.responseUrl = this._currentUrl;
		this.emit('response', response);

		// Clean up
		delete this._options;
		delete this._bufferedWrites;
	}
};

// Aborts the current native request
RedirectableRequest.prototype.abort = function () {
	this._currentRequest.abort();
};

// Flushes the headers of the current native request
RedirectableRequest.prototype.flushHeaders = function () {
	this._currentRequest.flushHeaders();
};

// Sets the noDelay option of the current native request
RedirectableRequest.prototype.setNoDelay = function (noDelay) {
	this._currentRequest.setNoDelay(noDelay);
};

// Sets the socketKeepAlive option of the current native request
RedirectableRequest.prototype.setSocketKeepAlive = function (enable, initialDelay) {
	this._currentRequest.setSocketKeepAlive(enable, initialDelay);
};

// Sets the timeout option of the current native request
RedirectableRequest.prototype.setTimeout = function (timeout, callback) {
	this._currentRequest.setTimeout(timeout, callback);
};

// Writes buffered data to the current native request
RedirectableRequest.prototype.write = function (data, encoding, callback) {
	this._currentRequest.write(data, encoding, callback);
	this._bufferedWrites.push({data: data, encoding: encoding});
};

// Ends the current native request
RedirectableRequest.prototype.end = function (data, encoding, callback) {
	this._currentRequest.end(data, encoding, callback);
	if (data) {
		this._bufferedWrites.push({data: data, encoding: encoding});
	}
};

// Export a redirecting wrapper for each native protocol
Object.keys(nativeProtocols).forEach(function (protocol) {
	var scheme = schemes[protocol] = protocol.substr(0, protocol.length - 1);
	var nativeProtocol = nativeProtocols[protocol];
	var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);

	// Executes an HTTP request, following redirects
	wrappedProtocol.request = function (options, callback) {
		if (typeof options === 'string') {
			options = url.parse(options);
			options.maxRedirects = exports.maxRedirects;
		} else {
			options = Object.assign({
				maxRedirects: exports.maxRedirects,
				protocol: protocol
			}, options);
		}
		assert.equal(options.protocol, protocol, 'protocol mismatch');
		debug('options', options);

		return new RedirectableRequest(options, callback);
	};

	// Executes a GET request, following redirects
	wrappedProtocol.get = function (options, callback) {
		var request = wrappedProtocol.request(options, callback);
		request.end();
		return request;
	};
});


/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(71);

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Previous log timestamp.
 */

var prevTime;

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  return debug;
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (var i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var assert = __webpack_require__(13)
var BigInteger = __webpack_require__(14)

var THREE = BigInteger.valueOf(3)

function Point (curve, x, y, z) {
  assert.notStrictEqual(z, undefined, 'Missing Z coordinate')

  this.curve = curve
  this.x = x
  this.y = y
  this.z = z
  this._zInv = null

  this.compressed = true
}

Object.defineProperty(Point.prototype, 'zInv', {
  get: function () {
    if (this._zInv === null) {
      this._zInv = this.z.modInverse(this.curve.p)
    }

    return this._zInv
  }
})

Object.defineProperty(Point.prototype, 'affineX', {
  get: function () {
    return this.x.multiply(this.zInv).mod(this.curve.p)
  }
})

Object.defineProperty(Point.prototype, 'affineY', {
  get: function () {
    return this.y.multiply(this.zInv).mod(this.curve.p)
  }
})

Point.fromAffine = function (curve, x, y) {
  return new Point(curve, x, y, BigInteger.ONE)
}

Point.prototype.equals = function (other) {
  if (other === this) return true
  if (this.curve.isInfinity(this)) return this.curve.isInfinity(other)
  if (this.curve.isInfinity(other)) return this.curve.isInfinity(this)

  // u = Y2 * Z1 - Y1 * Z2
  var u = other.y.multiply(this.z).subtract(this.y.multiply(other.z)).mod(this.curve.p)

  if (u.signum() !== 0) return false

  // v = X2 * Z1 - X1 * Z2
  var v = other.x.multiply(this.z).subtract(this.x.multiply(other.z)).mod(this.curve.p)

  return v.signum() === 0
}

Point.prototype.negate = function () {
  var y = this.curve.p.subtract(this.y)

  return new Point(this.curve, this.x, y, this.z)
}

Point.prototype.add = function (b) {
  if (this.curve.isInfinity(this)) return b
  if (this.curve.isInfinity(b)) return this

  var x1 = this.x
  var y1 = this.y
  var x2 = b.x
  var y2 = b.y

  // u = Y2 * Z1 - Y1 * Z2
  var u = y2.multiply(this.z).subtract(y1.multiply(b.z)).mod(this.curve.p)
  // v = X2 * Z1 - X1 * Z2
  var v = x2.multiply(this.z).subtract(x1.multiply(b.z)).mod(this.curve.p)

  if (v.signum() === 0) {
    if (u.signum() === 0) {
      return this.twice() // this == b, so double
    }

    return this.curve.infinity // this = -b, so infinity
  }

  var v2 = v.square()
  var v3 = v2.multiply(v)
  var x1v2 = x1.multiply(v2)
  var zu2 = u.square().multiply(this.z)

  // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)
  var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.p)
  // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3
  var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.p)
  // z3 = v^3 * z1 * z2
  var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.p)

  return new Point(this.curve, x3, y3, z3)
}

Point.prototype.twice = function () {
  if (this.curve.isInfinity(this)) return this
  if (this.y.signum() === 0) return this.curve.infinity

  var x1 = this.x
  var y1 = this.y

  var y1z1 = y1.multiply(this.z).mod(this.curve.p)
  var y1sqz1 = y1z1.multiply(y1).mod(this.curve.p)
  var a = this.curve.a

  // w = 3 * x1^2 + a * z1^2
  var w = x1.square().multiply(THREE)

  if (a.signum() !== 0) {
    w = w.add(this.z.square().multiply(a))
  }

  w = w.mod(this.curve.p)
  // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)
  var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.p)
  // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3
  var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.pow(3)).mod(this.curve.p)
  // z3 = 8 * (y1 * z1)^3
  var z3 = y1z1.pow(3).shiftLeft(3).mod(this.curve.p)

  return new Point(this.curve, x3, y3, z3)
}

// Simple NAF (Non-Adjacent Form) multiplication algorithm
// TODO: modularize the multiplication algorithm
Point.prototype.multiply = function (k) {
  if (this.curve.isInfinity(this)) return this
  if (k.signum() === 0) return this.curve.infinity

  var e = k
  var h = e.multiply(THREE)

  var neg = this.negate()
  var R = this

  for (var i = h.bitLength() - 2; i > 0; --i) {
    var hBit = h.testBit(i)
    var eBit = e.testBit(i)

    R = R.twice()

    if (hBit !== eBit) {
      R = R.add(hBit ? this : neg)
    }
  }

  return R
}

// Compute this*j + x*k (simultaneous multiplication)
Point.prototype.multiplyTwo = function (j, x, k) {
  var i = Math.max(j.bitLength(), k.bitLength()) - 1
  var R = this.curve.infinity
  var both = this.add(x)

  while (i >= 0) {
    var jBit = j.testBit(i)
    var kBit = k.testBit(i)

    R = R.twice()

    if (jBit) {
      if (kBit) {
        R = R.add(both)
      } else {
        R = R.add(this)
      }
    } else if (kBit) {
      R = R.add(x)
    }
    --i
  }

  return R
}

Point.prototype.getEncoded = function (compressed) {
  if (compressed == null) compressed = this.compressed
  if (this.curve.isInfinity(this)) return new Buffer('00', 'hex') // Infinity point encoded is simply '00'

  var x = this.affineX
  var y = this.affineY
  var byteLength = this.curve.pLength
  var buffer

  // 0x02/0x03 | X
  if (compressed) {
    buffer = new Buffer(1 + byteLength)
    buffer.writeUInt8(y.isEven() ? 0x02 : 0x03, 0)

  // 0x04 | X | Y
  } else {
    buffer = new Buffer(1 + byteLength + byteLength)
    buffer.writeUInt8(0x04, 0)

    y.toBuffer(byteLength).copy(buffer, 1 + byteLength)
  }

  x.toBuffer(byteLength).copy(buffer, 1)

  return buffer
}

Point.decodeFrom = function (curve, buffer) {
  var type = buffer.readUInt8(0)
  var compressed = (type !== 4)

  var byteLength = Math.floor((curve.p.bitLength() + 7) / 8)
  var x = BigInteger.fromBuffer(buffer.slice(1, 1 + byteLength))

  var Q
  if (compressed) {
    assert.equal(buffer.length, byteLength + 1, 'Invalid sequence length')
    assert(type === 0x02 || type === 0x03, 'Invalid sequence tag')

    var isOdd = (type === 0x03)
    Q = curve.pointFromX(isOdd, x)
  } else {
    assert.equal(buffer.length, 1 + byteLength + byteLength, 'Invalid sequence length')

    var y = BigInteger.fromBuffer(buffer.slice(1 + byteLength))
    Q = Point.fromAffine(curve, x, y)
  }

  Q.compressed = compressed
  return Q
}

Point.prototype.toString = function () {
  if (this.curve.isInfinity(this)) return '(INFINITY)'

  return '(' + this.affineX.toString() + ',' + this.affineY.toString() + ')'
}

module.exports = Point


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// (public) Constructor
function BigInteger(a, b, c) {
  if (!(this instanceof BigInteger))
    return new BigInteger(a, b, c)

  if (a != null) {
    if ("number" == typeof a) this.fromNumber(a, b, c)
    else if (b == null && "string" != typeof a) this.fromString(a, 256)
    else this.fromString(a, b)
  }
}

var proto = BigInteger.prototype

// duck-typed isBigInteger
proto.__bigi = __webpack_require__(85).version
BigInteger.isBigInteger = function (obj, check_ver) {
  return obj && obj.__bigi && (!check_ver || obj.__bigi === proto.__bigi)
}

// Bits per digit
var dbits

// am: Compute w_j += (x*this_i), propagate carries,
// c is initial carry, returns final carry.
// c < 3*dvalue, x < 2*dvalue, this_i < dvalue
// We need to select the fastest one that works in this environment.

// am1: use a single mult and divide to get the high bits,
// max digit bits should be 26 because
// max internal value = 2*dvalue^2-2*dvalue (< 2^53)
function am1(i, x, w, j, c, n) {
  while (--n >= 0) {
    var v = x * this[i++] + w[j] + c
    c = Math.floor(v / 0x4000000)
    w[j++] = v & 0x3ffffff
  }
  return c
}
// am2 avoids a big mult-and-extract completely.
// Max digit bits should be <= 30 because we do bitwise ops
// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
function am2(i, x, w, j, c, n) {
  var xl = x & 0x7fff,
    xh = x >> 15
  while (--n >= 0) {
    var l = this[i] & 0x7fff
    var h = this[i++] >> 15
    var m = xh * l + h * xl
    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff)
    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30)
    w[j++] = l & 0x3fffffff
  }
  return c
}
// Alternately, set max digit bits to 28 since some
// browsers slow down when dealing with 32-bit numbers.
function am3(i, x, w, j, c, n) {
  var xl = x & 0x3fff,
    xh = x >> 14
  while (--n >= 0) {
    var l = this[i] & 0x3fff
    var h = this[i++] >> 14
    var m = xh * l + h * xl
    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c
    c = (l >> 28) + (m >> 14) + xh * h
    w[j++] = l & 0xfffffff
  }
  return c
}

// wtf?
BigInteger.prototype.am = am1
dbits = 26

BigInteger.prototype.DB = dbits
BigInteger.prototype.DM = ((1 << dbits) - 1)
var DV = BigInteger.prototype.DV = (1 << dbits)

var BI_FP = 52
BigInteger.prototype.FV = Math.pow(2, BI_FP)
BigInteger.prototype.F1 = BI_FP - dbits
BigInteger.prototype.F2 = 2 * dbits - BI_FP

// Digit conversions
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz"
var BI_RC = new Array()
var rr, vv
rr = "0".charCodeAt(0)
for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv
rr = "a".charCodeAt(0)
for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv
rr = "A".charCodeAt(0)
for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv

function int2char(n) {
  return BI_RM.charAt(n)
}

function intAt(s, i) {
  var c = BI_RC[s.charCodeAt(i)]
  return (c == null) ? -1 : c
}

// (protected) copy this to r
function bnpCopyTo(r) {
  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i]
  r.t = this.t
  r.s = this.s
}

// (protected) set from integer value x, -DV <= x < DV
function bnpFromInt(x) {
  this.t = 1
  this.s = (x < 0) ? -1 : 0
  if (x > 0) this[0] = x
  else if (x < -1) this[0] = x + DV
  else this.t = 0
}

// return bigint initialized to value
function nbv(i) {
  var r = new BigInteger()
  r.fromInt(i)
  return r
}

// (protected) set from string and radix
function bnpFromString(s, b) {
  var self = this

  var k
  if (b == 16) k = 4
  else if (b == 8) k = 3
  else if (b == 256) k = 8; // byte array
  else if (b == 2) k = 1
  else if (b == 32) k = 5
  else if (b == 4) k = 2
  else {
    self.fromRadix(s, b)
    return
  }
  self.t = 0
  self.s = 0
  var i = s.length,
    mi = false,
    sh = 0
  while (--i >= 0) {
    var x = (k == 8) ? s[i] & 0xff : intAt(s, i)
    if (x < 0) {
      if (s.charAt(i) == "-") mi = true
      continue
    }
    mi = false
    if (sh == 0)
      self[self.t++] = x
    else if (sh + k > self.DB) {
      self[self.t - 1] |= (x & ((1 << (self.DB - sh)) - 1)) << sh
      self[self.t++] = (x >> (self.DB - sh))
    } else
      self[self.t - 1] |= x << sh
    sh += k
    if (sh >= self.DB) sh -= self.DB
  }
  if (k == 8 && (s[0] & 0x80) != 0) {
    self.s = -1
    if (sh > 0) self[self.t - 1] |= ((1 << (self.DB - sh)) - 1) << sh
  }
  self.clamp()
  if (mi) BigInteger.ZERO.subTo(self, self)
}

// (protected) clamp off excess high words
function bnpClamp() {
  var c = this.s & this.DM
  while (this.t > 0 && this[this.t - 1] == c)--this.t
}

// (public) return string representation in given radix
function bnToString(b) {
  var self = this
  if (self.s < 0) return "-" + self.negate()
    .toString(b)
  var k
  if (b == 16) k = 4
  else if (b == 8) k = 3
  else if (b == 2) k = 1
  else if (b == 32) k = 5
  else if (b == 4) k = 2
  else return self.toRadix(b)
  var km = (1 << k) - 1,
    d, m = false,
    r = "",
    i = self.t
  var p = self.DB - (i * self.DB) % k
  if (i-- > 0) {
    if (p < self.DB && (d = self[i] >> p) > 0) {
      m = true
      r = int2char(d)
    }
    while (i >= 0) {
      if (p < k) {
        d = (self[i] & ((1 << p) - 1)) << (k - p)
        d |= self[--i] >> (p += self.DB - k)
      } else {
        d = (self[i] >> (p -= k)) & km
        if (p <= 0) {
          p += self.DB
          --i
        }
      }
      if (d > 0) m = true
      if (m) r += int2char(d)
    }
  }
  return m ? r : "0"
}

// (public) -this
function bnNegate() {
  var r = new BigInteger()
  BigInteger.ZERO.subTo(this, r)
  return r
}

// (public) |this|
function bnAbs() {
  return (this.s < 0) ? this.negate() : this
}

// (public) return + if this > a, - if this < a, 0 if equal
function bnCompareTo(a) {
  var r = this.s - a.s
  if (r != 0) return r
  var i = this.t
  r = i - a.t
  if (r != 0) return (this.s < 0) ? -r : r
  while (--i >= 0)
    if ((r = this[i] - a[i]) != 0) return r
  return 0
}

// returns bit length of the integer x
function nbits(x) {
  var r = 1,
    t
  if ((t = x >>> 16) != 0) {
    x = t
    r += 16
  }
  if ((t = x >> 8) != 0) {
    x = t
    r += 8
  }
  if ((t = x >> 4) != 0) {
    x = t
    r += 4
  }
  if ((t = x >> 2) != 0) {
    x = t
    r += 2
  }
  if ((t = x >> 1) != 0) {
    x = t
    r += 1
  }
  return r
}

// (public) return the number of bits in "this"
function bnBitLength() {
  if (this.t <= 0) return 0
  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM))
}

// (public) return the number of bytes in "this"
function bnByteLength() {
  return this.bitLength() >> 3
}

// (protected) r = this << n*DB
function bnpDLShiftTo(n, r) {
  var i
  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i]
  for (i = n - 1; i >= 0; --i) r[i] = 0
  r.t = this.t + n
  r.s = this.s
}

// (protected) r = this >> n*DB
function bnpDRShiftTo(n, r) {
  for (var i = n; i < this.t; ++i) r[i - n] = this[i]
  r.t = Math.max(this.t - n, 0)
  r.s = this.s
}

// (protected) r = this << n
function bnpLShiftTo(n, r) {
  var self = this
  var bs = n % self.DB
  var cbs = self.DB - bs
  var bm = (1 << cbs) - 1
  var ds = Math.floor(n / self.DB),
    c = (self.s << bs) & self.DM,
    i
  for (i = self.t - 1; i >= 0; --i) {
    r[i + ds + 1] = (self[i] >> cbs) | c
    c = (self[i] & bm) << bs
  }
  for (i = ds - 1; i >= 0; --i) r[i] = 0
  r[ds] = c
  r.t = self.t + ds + 1
  r.s = self.s
  r.clamp()
}

// (protected) r = this >> n
function bnpRShiftTo(n, r) {
  var self = this
  r.s = self.s
  var ds = Math.floor(n / self.DB)
  if (ds >= self.t) {
    r.t = 0
    return
  }
  var bs = n % self.DB
  var cbs = self.DB - bs
  var bm = (1 << bs) - 1
  r[0] = self[ds] >> bs
  for (var i = ds + 1; i < self.t; ++i) {
    r[i - ds - 1] |= (self[i] & bm) << cbs
    r[i - ds] = self[i] >> bs
  }
  if (bs > 0) r[self.t - ds - 1] |= (self.s & bm) << cbs
  r.t = self.t - ds
  r.clamp()
}

// (protected) r = this - a
function bnpSubTo(a, r) {
  var self = this
  var i = 0,
    c = 0,
    m = Math.min(a.t, self.t)
  while (i < m) {
    c += self[i] - a[i]
    r[i++] = c & self.DM
    c >>= self.DB
  }
  if (a.t < self.t) {
    c -= a.s
    while (i < self.t) {
      c += self[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c += self.s
  } else {
    c += self.s
    while (i < a.t) {
      c -= a[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c -= a.s
  }
  r.s = (c < 0) ? -1 : 0
  if (c < -1) r[i++] = self.DV + c
  else if (c > 0) r[i++] = c
  r.t = i
  r.clamp()
}

// (protected) r = this * a, r != this,a (HAC 14.12)
// "this" should be the larger one if appropriate.
function bnpMultiplyTo(a, r) {
  var x = this.abs(),
    y = a.abs()
  var i = x.t
  r.t = i + y.t
  while (--i >= 0) r[i] = 0
  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t)
  r.s = 0
  r.clamp()
  if (this.s != a.s) BigInteger.ZERO.subTo(r, r)
}

// (protected) r = this^2, r != this (HAC 14.16)
function bnpSquareTo(r) {
  var x = this.abs()
  var i = r.t = 2 * x.t
  while (--i >= 0) r[i] = 0
  for (i = 0; i < x.t - 1; ++i) {
    var c = x.am(i, x[i], r, 2 * i, 0, 1)
    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
      r[i + x.t] -= x.DV
      r[i + x.t + 1] = 1
    }
  }
  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1)
  r.s = 0
  r.clamp()
}

// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
// r != q, this != m.  q or r may be null.
function bnpDivRemTo(m, q, r) {
  var self = this
  var pm = m.abs()
  if (pm.t <= 0) return
  var pt = self.abs()
  if (pt.t < pm.t) {
    if (q != null) q.fromInt(0)
    if (r != null) self.copyTo(r)
    return
  }
  if (r == null) r = new BigInteger()
  var y = new BigInteger(),
    ts = self.s,
    ms = m.s
  var nsh = self.DB - nbits(pm[pm.t - 1]); // normalize modulus
  if (nsh > 0) {
    pm.lShiftTo(nsh, y)
    pt.lShiftTo(nsh, r)
  } else {
    pm.copyTo(y)
    pt.copyTo(r)
  }
  var ys = y.t
  var y0 = y[ys - 1]
  if (y0 == 0) return
  var yt = y0 * (1 << self.F1) + ((ys > 1) ? y[ys - 2] >> self.F2 : 0)
  var d1 = self.FV / yt,
    d2 = (1 << self.F1) / yt,
    e = 1 << self.F2
  var i = r.t,
    j = i - ys,
    t = (q == null) ? new BigInteger() : q
  y.dlShiftTo(j, t)
  if (r.compareTo(t) >= 0) {
    r[r.t++] = 1
    r.subTo(t, r)
  }
  BigInteger.ONE.dlShiftTo(ys, t)
  t.subTo(y, y); // "negative" y so we can replace sub with am later
  while (y.t < ys) y[y.t++] = 0
  while (--j >= 0) {
    // Estimate quotient digit
    var qd = (r[--i] == y0) ? self.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2)
    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out
      y.dlShiftTo(j, t)
      r.subTo(t, r)
      while (r[i] < --qd) r.subTo(t, r)
    }
  }
  if (q != null) {
    r.drShiftTo(ys, q)
    if (ts != ms) BigInteger.ZERO.subTo(q, q)
  }
  r.t = ys
  r.clamp()
  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder
  if (ts < 0) BigInteger.ZERO.subTo(r, r)
}

// (public) this mod a
function bnMod(a) {
  var r = new BigInteger()
  this.abs()
    .divRemTo(a, null, r)
  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r)
  return r
}

// Modular reduction using "classic" algorithm
function Classic(m) {
  this.m = m
}

function cConvert(x) {
  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m)
  else return x
}

function cRevert(x) {
  return x
}

function cReduce(x) {
  x.divRemTo(this.m, null, x)
}

function cMulTo(x, y, r) {
  x.multiplyTo(y, r)
  this.reduce(r)
}

function cSqrTo(x, r) {
  x.squareTo(r)
  this.reduce(r)
}

Classic.prototype.convert = cConvert
Classic.prototype.revert = cRevert
Classic.prototype.reduce = cReduce
Classic.prototype.mulTo = cMulTo
Classic.prototype.sqrTo = cSqrTo

// (protected) return "-1/this % 2^DB"; useful for Mont. reduction
// justification:
//         xy == 1 (mod m)
//         xy =  1+km
//   xy(2-xy) = (1+km)(1-km)
// x[y(2-xy)] = 1-k^2m^2
// x[y(2-xy)] == 1 (mod m^2)
// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
// JS multiply "overflows" differently from C/C++, so care is needed here.
function bnpInvDigit() {
  if (this.t < 1) return 0
  var x = this[0]
  if ((x & 1) == 0) return 0
  var y = x & 3; // y == 1/x mod 2^2
  y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4
  y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8
  y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16
  // last step - calculate inverse mod DV directly
  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
  y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits
  // we really want the negative inverse, and -DV < y < DV
  return (y > 0) ? this.DV - y : -y
}

// Montgomery reduction
function Montgomery(m) {
  this.m = m
  this.mp = m.invDigit()
  this.mpl = this.mp & 0x7fff
  this.mph = this.mp >> 15
  this.um = (1 << (m.DB - 15)) - 1
  this.mt2 = 2 * m.t
}

// xR mod m
function montConvert(x) {
  var r = new BigInteger()
  x.abs()
    .dlShiftTo(this.m.t, r)
  r.divRemTo(this.m, null, r)
  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r)
  return r
}

// x/R mod m
function montRevert(x) {
  var r = new BigInteger()
  x.copyTo(r)
  this.reduce(r)
  return r
}

// x = x/R mod m (HAC 14.32)
function montReduce(x) {
  while (x.t <= this.mt2) // pad x so am has enough room later
    x[x.t++] = 0
  for (var i = 0; i < this.m.t; ++i) {
    // faster way of calculating u0 = x[i]*mp mod DV
    var j = x[i] & 0x7fff
    var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM
    // use am to combine the multiply-shift-add into one call
    j = i + this.m.t
    x[j] += this.m.am(0, u0, x, i, 0, this.m.t)
    // propagate carry
    while (x[j] >= x.DV) {
      x[j] -= x.DV
      x[++j]++
    }
  }
  x.clamp()
  x.drShiftTo(this.m.t, x)
  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x)
}

// r = "x^2/R mod m"; x != r
function montSqrTo(x, r) {
  x.squareTo(r)
  this.reduce(r)
}

// r = "xy/R mod m"; x,y != r
function montMulTo(x, y, r) {
  x.multiplyTo(y, r)
  this.reduce(r)
}

Montgomery.prototype.convert = montConvert
Montgomery.prototype.revert = montRevert
Montgomery.prototype.reduce = montReduce
Montgomery.prototype.mulTo = montMulTo
Montgomery.prototype.sqrTo = montSqrTo

// (protected) true iff this is even
function bnpIsEven() {
  return ((this.t > 0) ? (this[0] & 1) : this.s) == 0
}

// (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
function bnpExp(e, z) {
  if (e > 0xffffffff || e < 1) return BigInteger.ONE
  var r = new BigInteger(),
    r2 = new BigInteger(),
    g = z.convert(this),
    i = nbits(e) - 1
  g.copyTo(r)
  while (--i >= 0) {
    z.sqrTo(r, r2)
    if ((e & (1 << i)) > 0) z.mulTo(r2, g, r)
    else {
      var t = r
      r = r2
      r2 = t
    }
  }
  return z.revert(r)
}

// (public) this^e % m, 0 <= e < 2^32
function bnModPowInt(e, m) {
  var z
  if (e < 256 || m.isEven()) z = new Classic(m)
  else z = new Montgomery(m)
  return this.exp(e, z)
}

// protected
proto.copyTo = bnpCopyTo
proto.fromInt = bnpFromInt
proto.fromString = bnpFromString
proto.clamp = bnpClamp
proto.dlShiftTo = bnpDLShiftTo
proto.drShiftTo = bnpDRShiftTo
proto.lShiftTo = bnpLShiftTo
proto.rShiftTo = bnpRShiftTo
proto.subTo = bnpSubTo
proto.multiplyTo = bnpMultiplyTo
proto.squareTo = bnpSquareTo
proto.divRemTo = bnpDivRemTo
proto.invDigit = bnpInvDigit
proto.isEven = bnpIsEven
proto.exp = bnpExp

// public
proto.toString = bnToString
proto.negate = bnNegate
proto.abs = bnAbs
proto.compareTo = bnCompareTo
proto.bitLength = bnBitLength
proto.byteLength = bnByteLength
proto.mod = bnMod
proto.modPowInt = bnModPowInt

// (public)
function bnClone() {
  var r = new BigInteger()
  this.copyTo(r)
  return r
}

// (public) return value as integer
function bnIntValue() {
  if (this.s < 0) {
    if (this.t == 1) return this[0] - this.DV
    else if (this.t == 0) return -1
  } else if (this.t == 1) return this[0]
  else if (this.t == 0) return 0
  // assumes 16 < DB < 32
  return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0]
}

// (public) return value as byte
function bnByteValue() {
  return (this.t == 0) ? this.s : (this[0] << 24) >> 24
}

// (public) return value as short (assumes DB>=16)
function bnShortValue() {
  return (this.t == 0) ? this.s : (this[0] << 16) >> 16
}

// (protected) return x s.t. r^x < DV
function bnpChunkSize(r) {
  return Math.floor(Math.LN2 * this.DB / Math.log(r))
}

// (public) 0 if this == 0, 1 if this > 0
function bnSigNum() {
  if (this.s < 0) return -1
  else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0
  else return 1
}

// (protected) convert to radix string
function bnpToRadix(b) {
  if (b == null) b = 10
  if (this.signum() == 0 || b < 2 || b > 36) return "0"
  var cs = this.chunkSize(b)
  var a = Math.pow(b, cs)
  var d = nbv(a),
    y = new BigInteger(),
    z = new BigInteger(),
    r = ""
  this.divRemTo(d, y, z)
  while (y.signum() > 0) {
    r = (a + z.intValue())
      .toString(b)
      .substr(1) + r
    y.divRemTo(d, y, z)
  }
  return z.intValue()
    .toString(b) + r
}

// (protected) convert from radix string
function bnpFromRadix(s, b) {
  var self = this
  self.fromInt(0)
  if (b == null) b = 10
  var cs = self.chunkSize(b)
  var d = Math.pow(b, cs),
    mi = false,
    j = 0,
    w = 0
  for (var i = 0; i < s.length; ++i) {
    var x = intAt(s, i)
    if (x < 0) {
      if (s.charAt(i) == "-" && self.signum() == 0) mi = true
      continue
    }
    w = b * w + x
    if (++j >= cs) {
      self.dMultiply(d)
      self.dAddOffset(w, 0)
      j = 0
      w = 0
    }
  }
  if (j > 0) {
    self.dMultiply(Math.pow(b, j))
    self.dAddOffset(w, 0)
  }
  if (mi) BigInteger.ZERO.subTo(self, self)
}

// (protected) alternate constructor
function bnpFromNumber(a, b, c) {
  var self = this
  if ("number" == typeof b) {
    // new BigInteger(int,int,RNG)
    if (a < 2) self.fromInt(1)
    else {
      self.fromNumber(a, c)
      if (!self.testBit(a - 1)) // force MSB set
        self.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, self)
      if (self.isEven()) self.dAddOffset(1, 0); // force odd
      while (!self.isProbablePrime(b)) {
        self.dAddOffset(2, 0)
        if (self.bitLength() > a) self.subTo(BigInteger.ONE.shiftLeft(a - 1), self)
      }
    }
  } else {
    // new BigInteger(int,RNG)
    var x = new Array(),
      t = a & 7
    x.length = (a >> 3) + 1
    b.nextBytes(x)
    if (t > 0) x[0] &= ((1 << t) - 1)
    else x[0] = 0
    self.fromString(x, 256)
  }
}

// (public) convert to bigendian byte array
function bnToByteArray() {
  var self = this
  var i = self.t,
    r = new Array()
  r[0] = self.s
  var p = self.DB - (i * self.DB) % 8,
    d, k = 0
  if (i-- > 0) {
    if (p < self.DB && (d = self[i] >> p) != (self.s & self.DM) >> p)
      r[k++] = d | (self.s << (self.DB - p))
    while (i >= 0) {
      if (p < 8) {
        d = (self[i] & ((1 << p) - 1)) << (8 - p)
        d |= self[--i] >> (p += self.DB - 8)
      } else {
        d = (self[i] >> (p -= 8)) & 0xff
        if (p <= 0) {
          p += self.DB
          --i
        }
      }
      if ((d & 0x80) != 0) d |= -256
      if (k === 0 && (self.s & 0x80) != (d & 0x80))++k
      if (k > 0 || d != self.s) r[k++] = d
    }
  }
  return r
}

function bnEquals(a) {
  return (this.compareTo(a) == 0)
}

function bnMin(a) {
  return (this.compareTo(a) < 0) ? this : a
}

function bnMax(a) {
  return (this.compareTo(a) > 0) ? this : a
}

// (protected) r = this op a (bitwise)
function bnpBitwiseTo(a, op, r) {
  var self = this
  var i, f, m = Math.min(a.t, self.t)
  for (i = 0; i < m; ++i) r[i] = op(self[i], a[i])
  if (a.t < self.t) {
    f = a.s & self.DM
    for (i = m; i < self.t; ++i) r[i] = op(self[i], f)
    r.t = self.t
  } else {
    f = self.s & self.DM
    for (i = m; i < a.t; ++i) r[i] = op(f, a[i])
    r.t = a.t
  }
  r.s = op(self.s, a.s)
  r.clamp()
}

// (public) this & a
function op_and(x, y) {
  return x & y
}

function bnAnd(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_and, r)
  return r
}

// (public) this | a
function op_or(x, y) {
  return x | y
}

function bnOr(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_or, r)
  return r
}

// (public) this ^ a
function op_xor(x, y) {
  return x ^ y
}

function bnXor(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_xor, r)
  return r
}

// (public) this & ~a
function op_andnot(x, y) {
  return x & ~y
}

function bnAndNot(a) {
  var r = new BigInteger()
  this.bitwiseTo(a, op_andnot, r)
  return r
}

// (public) ~this
function bnNot() {
  var r = new BigInteger()
  for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i]
  r.t = this.t
  r.s = ~this.s
  return r
}

// (public) this << n
function bnShiftLeft(n) {
  var r = new BigInteger()
  if (n < 0) this.rShiftTo(-n, r)
  else this.lShiftTo(n, r)
  return r
}

// (public) this >> n
function bnShiftRight(n) {
  var r = new BigInteger()
  if (n < 0) this.lShiftTo(-n, r)
  else this.rShiftTo(n, r)
  return r
}

// return index of lowest 1-bit in x, x < 2^31
function lbit(x) {
  if (x == 0) return -1
  var r = 0
  if ((x & 0xffff) == 0) {
    x >>= 16
    r += 16
  }
  if ((x & 0xff) == 0) {
    x >>= 8
    r += 8
  }
  if ((x & 0xf) == 0) {
    x >>= 4
    r += 4
  }
  if ((x & 3) == 0) {
    x >>= 2
    r += 2
  }
  if ((x & 1) == 0)++r
  return r
}

// (public) returns index of lowest 1-bit (or -1 if none)
function bnGetLowestSetBit() {
  for (var i = 0; i < this.t; ++i)
    if (this[i] != 0) return i * this.DB + lbit(this[i])
  if (this.s < 0) return this.t * this.DB
  return -1
}

// return number of 1 bits in x
function cbit(x) {
  var r = 0
  while (x != 0) {
    x &= x - 1
    ++r
  }
  return r
}

// (public) return number of set bits
function bnBitCount() {
  var r = 0,
    x = this.s & this.DM
  for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x)
  return r
}

// (public) true iff nth bit is set
function bnTestBit(n) {
  var j = Math.floor(n / this.DB)
  if (j >= this.t) return (this.s != 0)
  return ((this[j] & (1 << (n % this.DB))) != 0)
}

// (protected) this op (1<<n)
function bnpChangeBit(n, op) {
  var r = BigInteger.ONE.shiftLeft(n)
  this.bitwiseTo(r, op, r)
  return r
}

// (public) this | (1<<n)
function bnSetBit(n) {
  return this.changeBit(n, op_or)
}

// (public) this & ~(1<<n)
function bnClearBit(n) {
  return this.changeBit(n, op_andnot)
}

// (public) this ^ (1<<n)
function bnFlipBit(n) {
  return this.changeBit(n, op_xor)
}

// (protected) r = this + a
function bnpAddTo(a, r) {
  var self = this

  var i = 0,
    c = 0,
    m = Math.min(a.t, self.t)
  while (i < m) {
    c += self[i] + a[i]
    r[i++] = c & self.DM
    c >>= self.DB
  }
  if (a.t < self.t) {
    c += a.s
    while (i < self.t) {
      c += self[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c += self.s
  } else {
    c += self.s
    while (i < a.t) {
      c += a[i]
      r[i++] = c & self.DM
      c >>= self.DB
    }
    c += a.s
  }
  r.s = (c < 0) ? -1 : 0
  if (c > 0) r[i++] = c
  else if (c < -1) r[i++] = self.DV + c
  r.t = i
  r.clamp()
}

// (public) this + a
function bnAdd(a) {
  var r = new BigInteger()
  this.addTo(a, r)
  return r
}

// (public) this - a
function bnSubtract(a) {
  var r = new BigInteger()
  this.subTo(a, r)
  return r
}

// (public) this * a
function bnMultiply(a) {
  var r = new BigInteger()
  this.multiplyTo(a, r)
  return r
}

// (public) this^2
function bnSquare() {
  var r = new BigInteger()
  this.squareTo(r)
  return r
}

// (public) this / a
function bnDivide(a) {
  var r = new BigInteger()
  this.divRemTo(a, r, null)
  return r
}

// (public) this % a
function bnRemainder(a) {
  var r = new BigInteger()
  this.divRemTo(a, null, r)
  return r
}

// (public) [this/a,this%a]
function bnDivideAndRemainder(a) {
  var q = new BigInteger(),
    r = new BigInteger()
  this.divRemTo(a, q, r)
  return new Array(q, r)
}

// (protected) this *= n, this >= 0, 1 < n < DV
function bnpDMultiply(n) {
  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t)
  ++this.t
  this.clamp()
}

// (protected) this += n << w words, this >= 0
function bnpDAddOffset(n, w) {
  if (n == 0) return
  while (this.t <= w) this[this.t++] = 0
  this[w] += n
  while (this[w] >= this.DV) {
    this[w] -= this.DV
    if (++w >= this.t) this[this.t++] = 0
    ++this[w]
  }
}

// A "null" reducer
function NullExp() {}

function nNop(x) {
  return x
}

function nMulTo(x, y, r) {
  x.multiplyTo(y, r)
}

function nSqrTo(x, r) {
  x.squareTo(r)
}

NullExp.prototype.convert = nNop
NullExp.prototype.revert = nNop
NullExp.prototype.mulTo = nMulTo
NullExp.prototype.sqrTo = nSqrTo

// (public) this^e
function bnPow(e) {
  return this.exp(e, new NullExp())
}

// (protected) r = lower n words of "this * a", a.t <= n
// "this" should be the larger one if appropriate.
function bnpMultiplyLowerTo(a, n, r) {
  var i = Math.min(this.t + a.t, n)
  r.s = 0; // assumes a,this >= 0
  r.t = i
  while (i > 0) r[--i] = 0
  var j
  for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t)
  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i)
  r.clamp()
}

// (protected) r = "this * a" without lower n words, n > 0
// "this" should be the larger one if appropriate.
function bnpMultiplyUpperTo(a, n, r) {
  --n
  var i = r.t = this.t + a.t - n
  r.s = 0; // assumes a,this >= 0
  while (--i >= 0) r[i] = 0
  for (i = Math.max(n - this.t, 0); i < a.t; ++i)
    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n)
  r.clamp()
  r.drShiftTo(1, r)
}

// Barrett modular reduction
function Barrett(m) {
  // setup Barrett
  this.r2 = new BigInteger()
  this.q3 = new BigInteger()
  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2)
  this.mu = this.r2.divide(m)
  this.m = m
}

function barrettConvert(x) {
  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m)
  else if (x.compareTo(this.m) < 0) return x
  else {
    var r = new BigInteger()
    x.copyTo(r)
    this.reduce(r)
    return r
  }
}

function barrettRevert(x) {
  return x
}

// x = x mod m (HAC 14.42)
function barrettReduce(x) {
  var self = this
  x.drShiftTo(self.m.t - 1, self.r2)
  if (x.t > self.m.t + 1) {
    x.t = self.m.t + 1
    x.clamp()
  }
  self.mu.multiplyUpperTo(self.r2, self.m.t + 1, self.q3)
  self.m.multiplyLowerTo(self.q3, self.m.t + 1, self.r2)
  while (x.compareTo(self.r2) < 0) x.dAddOffset(1, self.m.t + 1)
  x.subTo(self.r2, x)
  while (x.compareTo(self.m) >= 0) x.subTo(self.m, x)
}

// r = x^2 mod m; x != r
function barrettSqrTo(x, r) {
  x.squareTo(r)
  this.reduce(r)
}

// r = x*y mod m; x,y != r
function barrettMulTo(x, y, r) {
  x.multiplyTo(y, r)
  this.reduce(r)
}

Barrett.prototype.convert = barrettConvert
Barrett.prototype.revert = barrettRevert
Barrett.prototype.reduce = barrettReduce
Barrett.prototype.mulTo = barrettMulTo
Barrett.prototype.sqrTo = barrettSqrTo

// (public) this^e % m (HAC 14.85)
function bnModPow(e, m) {
  var i = e.bitLength(),
    k, r = nbv(1),
    z
  if (i <= 0) return r
  else if (i < 18) k = 1
  else if (i < 48) k = 3
  else if (i < 144) k = 4
  else if (i < 768) k = 5
  else k = 6
  if (i < 8)
    z = new Classic(m)
  else if (m.isEven())
    z = new Barrett(m)
  else
    z = new Montgomery(m)

  // precomputation
  var g = new Array(),
    n = 3,
    k1 = k - 1,
    km = (1 << k) - 1
  g[1] = z.convert(this)
  if (k > 1) {
    var g2 = new BigInteger()
    z.sqrTo(g[1], g2)
    while (n <= km) {
      g[n] = new BigInteger()
      z.mulTo(g2, g[n - 2], g[n])
      n += 2
    }
  }

  var j = e.t - 1,
    w, is1 = true,
    r2 = new BigInteger(),
    t
  i = nbits(e[j]) - 1
  while (j >= 0) {
    if (i >= k1) w = (e[j] >> (i - k1)) & km
    else {
      w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i)
      if (j > 0) w |= e[j - 1] >> (this.DB + i - k1)
    }

    n = k
    while ((w & 1) == 0) {
      w >>= 1
      --n
    }
    if ((i -= n) < 0) {
      i += this.DB
      --j
    }
    if (is1) { // ret == 1, don't bother squaring or multiplying it
      g[w].copyTo(r)
      is1 = false
    } else {
      while (n > 1) {
        z.sqrTo(r, r2)
        z.sqrTo(r2, r)
        n -= 2
      }
      if (n > 0) z.sqrTo(r, r2)
      else {
        t = r
        r = r2
        r2 = t
      }
      z.mulTo(r2, g[w], r)
    }

    while (j >= 0 && (e[j] & (1 << i)) == 0) {
      z.sqrTo(r, r2)
      t = r
      r = r2
      r2 = t
      if (--i < 0) {
        i = this.DB - 1
        --j
      }
    }
  }
  return z.revert(r)
}

// (public) gcd(this,a) (HAC 14.54)
function bnGCD(a) {
  var x = (this.s < 0) ? this.negate() : this.clone()
  var y = (a.s < 0) ? a.negate() : a.clone()
  if (x.compareTo(y) < 0) {
    var t = x
    x = y
    y = t
  }
  var i = x.getLowestSetBit(),
    g = y.getLowestSetBit()
  if (g < 0) return x
  if (i < g) g = i
  if (g > 0) {
    x.rShiftTo(g, x)
    y.rShiftTo(g, y)
  }
  while (x.signum() > 0) {
    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x)
    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y)
    if (x.compareTo(y) >= 0) {
      x.subTo(y, x)
      x.rShiftTo(1, x)
    } else {
      y.subTo(x, y)
      y.rShiftTo(1, y)
    }
  }
  if (g > 0) y.lShiftTo(g, y)
  return y
}

// (protected) this % n, n < 2^26
function bnpModInt(n) {
  if (n <= 0) return 0
  var d = this.DV % n,
    r = (this.s < 0) ? n - 1 : 0
  if (this.t > 0)
    if (d == 0) r = this[0] % n
    else
      for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n
  return r
}

// (public) 1/this % m (HAC 14.61)
function bnModInverse(m) {
  var ac = m.isEven()
  if (this.signum() === 0) throw new Error('division by zero')
  if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO
  var u = m.clone(),
    v = this.clone()
  var a = nbv(1),
    b = nbv(0),
    c = nbv(0),
    d = nbv(1)
  while (u.signum() != 0) {
    while (u.isEven()) {
      u.rShiftTo(1, u)
      if (ac) {
        if (!a.isEven() || !b.isEven()) {
          a.addTo(this, a)
          b.subTo(m, b)
        }
        a.rShiftTo(1, a)
      } else if (!b.isEven()) b.subTo(m, b)
      b.rShiftTo(1, b)
    }
    while (v.isEven()) {
      v.rShiftTo(1, v)
      if (ac) {
        if (!c.isEven() || !d.isEven()) {
          c.addTo(this, c)
          d.subTo(m, d)
        }
        c.rShiftTo(1, c)
      } else if (!d.isEven()) d.subTo(m, d)
      d.rShiftTo(1, d)
    }
    if (u.compareTo(v) >= 0) {
      u.subTo(v, u)
      if (ac) a.subTo(c, a)
      b.subTo(d, b)
    } else {
      v.subTo(u, v)
      if (ac) c.subTo(a, c)
      d.subTo(b, d)
    }
  }
  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO
  while (d.compareTo(m) >= 0) d.subTo(m, d)
  while (d.signum() < 0) d.addTo(m, d)
  return d
}

var lowprimes = [
  2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,
  73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,
  157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,
  239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,
  331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,
  421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,
  509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,
  613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,
  709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,
  821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,
  919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997
]

var lplim = (1 << 26) / lowprimes[lowprimes.length - 1]

// (public) test primality with certainty >= 1-.5^t
function bnIsProbablePrime(t) {
  var i, x = this.abs()
  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
    for (i = 0; i < lowprimes.length; ++i)
      if (x[0] == lowprimes[i]) return true
    return false
  }
  if (x.isEven()) return false
  i = 1
  while (i < lowprimes.length) {
    var m = lowprimes[i],
      j = i + 1
    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++]
    m = x.modInt(m)
    while (i < j) if (m % lowprimes[i++] == 0) return false
  }
  return x.millerRabin(t)
}

// (protected) true if probably prime (HAC 4.24, Miller-Rabin)
function bnpMillerRabin(t) {
  var n1 = this.subtract(BigInteger.ONE)
  var k = n1.getLowestSetBit()
  if (k <= 0) return false
  var r = n1.shiftRight(k)
  t = (t + 1) >> 1
  if (t > lowprimes.length) t = lowprimes.length
  var a = new BigInteger(null)
  var j, bases = []
  for (var i = 0; i < t; ++i) {
    for (;;) {
      j = lowprimes[Math.floor(Math.random() * lowprimes.length)]
      if (bases.indexOf(j) == -1) break
    }
    bases.push(j)
    a.fromInt(j)
    var y = a.modPow(r, this)
    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
      var j = 1
      while (j++ < k && y.compareTo(n1) != 0) {
        y = y.modPowInt(2, this)
        if (y.compareTo(BigInteger.ONE) == 0) return false
      }
      if (y.compareTo(n1) != 0) return false
    }
  }
  return true
}

// protected
proto.chunkSize = bnpChunkSize
proto.toRadix = bnpToRadix
proto.fromRadix = bnpFromRadix
proto.fromNumber = bnpFromNumber
proto.bitwiseTo = bnpBitwiseTo
proto.changeBit = bnpChangeBit
proto.addTo = bnpAddTo
proto.dMultiply = bnpDMultiply
proto.dAddOffset = bnpDAddOffset
proto.multiplyLowerTo = bnpMultiplyLowerTo
proto.multiplyUpperTo = bnpMultiplyUpperTo
proto.modInt = bnpModInt
proto.millerRabin = bnpMillerRabin

// public
proto.clone = bnClone
proto.intValue = bnIntValue
proto.byteValue = bnByteValue
proto.shortValue = bnShortValue
proto.signum = bnSigNum
proto.toByteArray = bnToByteArray
proto.equals = bnEquals
proto.min = bnMin
proto.max = bnMax
proto.and = bnAnd
proto.or = bnOr
proto.xor = bnXor
proto.andNot = bnAndNot
proto.not = bnNot
proto.shiftLeft = bnShiftLeft
proto.shiftRight = bnShiftRight
proto.getLowestSetBit = bnGetLowestSetBit
proto.bitCount = bnBitCount
proto.testBit = bnTestBit
proto.setBit = bnSetBit
proto.clearBit = bnClearBit
proto.flipBit = bnFlipBit
proto.add = bnAdd
proto.subtract = bnSubtract
proto.multiply = bnMultiply
proto.divide = bnDivide
proto.remainder = bnRemainder
proto.divideAndRemainder = bnDivideAndRemainder
proto.modPow = bnModPow
proto.modInverse = bnModInverse
proto.pow = bnPow
proto.gcd = bnGCD
proto.isProbablePrime = bnIsProbablePrime

// JSBN-specific extension
proto.square = bnSquare

// constants
BigInteger.ZERO = nbv(0)
BigInteger.ONE = nbv(1)
BigInteger.valueOf = nbv

module.exports = BigInteger


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var assert = __webpack_require__(13)
var BigInteger = __webpack_require__(14)

var Point = __webpack_require__(40)

function Curve (p, a, b, Gx, Gy, n, h) {
  this.p = p
  this.a = a
  this.b = b
  this.G = Point.fromAffine(this, Gx, Gy)
  this.n = n
  this.h = h

  this.infinity = new Point(this, null, null, BigInteger.ZERO)

  // result caching
  this.pOverFour = p.add(BigInteger.ONE).shiftRight(2)

  // determine size of p in bytes
  this.pLength = Math.floor((this.p.bitLength() + 7) / 8)
}

Curve.prototype.pointFromX = function (isOdd, x) {
  var alpha = x.pow(3).add(this.a.multiply(x)).add(this.b).mod(this.p)
  var beta = alpha.modPow(this.pOverFour, this.p) // XXX: not compatible with all curves

  var y = beta
  if (beta.isEven() ^ !isOdd) {
    y = this.p.subtract(y) // -y % p
  }

  return Point.fromAffine(this, x, y)
}

Curve.prototype.isInfinity = function (Q) {
  if (Q === this.infinity) return true

  return Q.z.signum() === 0 && Q.y.signum() !== 0
}

Curve.prototype.isOnCurve = function (Q) {
  if (this.isInfinity(Q)) return true

  var x = Q.affineX
  var y = Q.affineY
  var a = this.a
  var b = this.b
  var p = this.p

  // Check that xQ and yQ are integers in the interval [0, p - 1]
  if (x.signum() < 0 || x.compareTo(p) >= 0) return false
  if (y.signum() < 0 || y.compareTo(p) >= 0) return false

  // and check that y^2 = x^3 + ax + b (mod p)
  var lhs = y.square().mod(p)
  var rhs = x.pow(3).add(a.multiply(x)).add(b).mod(p)
  return lhs.equals(rhs)
}

/**
 * Validate an elliptic curve point.
 *
 * See SEC 1, section 3.2.2.1: Elliptic Curve Public Key Validation Primitive
 */
Curve.prototype.validate = function (Q) {
  // Check Q != O
  assert(!this.isInfinity(Q), 'Point is at infinity')
  assert(this.isOnCurve(Q), 'Point is not on the curve')

  // Check nQ = O (where Q is a scalar multiple of G)
  var nQ = Q.multiply(this.n)
  assert(this.isInfinity(nQ), 'Point is not a scalar multiple of G')

  return true
}

module.exports = Curve


/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = require("buffer");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var common = __webpack_require__(12);
var shaCommon = __webpack_require__(45);
var assert = __webpack_require__(7);

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var common = __webpack_require__(12);
var assert = __webpack_require__(7);

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Initialization and round constants tables
	    var H = [];
	    var K = [];

	    // Compute constants
	    (function () {
	        function isPrime(n) {
	            var sqrtN = Math.sqrt(n);
	            for (var factor = 2; factor <= sqrtN; factor++) {
	                if (!(n % factor)) {
	                    return false;
	                }
	            }

	            return true;
	        }

	        function getFractionalBits(n) {
	            return ((n - (n | 0)) * 0x100000000) | 0;
	        }

	        var n = 2;
	        var nPrime = 0;
	        while (nPrime < 64) {
	            if (isPrime(n)) {
	                if (nPrime < 8) {
	                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
	                }
	                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

	                nPrime++;
	            }

	            n++;
	        }
	    }());

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-256 hash algorithm.
	     */
	    var SHA256 = C_algo.SHA256 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init(H.slice(0));
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];
	            var f = H[5];
	            var g = H[6];
	            var h = H[7];

	            // Computation
	            for (var i = 0; i < 64; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var gamma0x = W[i - 15];
	                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
	                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^
	                                   (gamma0x >>> 3);

	                    var gamma1x = W[i - 2];
	                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
	                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^
	                                   (gamma1x >>> 10);

	                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
	                }

	                var ch  = (e & f) ^ (~e & g);
	                var maj = (a & b) ^ (a & c) ^ (b & c);

	                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
	                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

	                var t1 = h + sigma1 + ch + K[i] + W[i];
	                var t2 = sigma0 + maj;

	                h = g;
	                g = f;
	                f = e;
	                e = (d + t1) | 0;
	                d = c;
	                c = b;
	                b = a;
	                a = (t1 + t2) | 0;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	            H[5] = (H[5] + f) | 0;
	            H[6] = (H[6] + g) | 0;
	            H[7] = (H[7] + h) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA256('message');
	     *     var hash = CryptoJS.SHA256(wordArray);
	     */
	    C.SHA256 = Hasher._createHelper(SHA256);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA256(message, key);
	     */
	    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
	}(Math));


	return CryptoJS.SHA256;

}));

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(17));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;

	    function X64Word_create() {
	        return X64Word.create.apply(X64Word, arguments);
	    }

	    // Constants
	    var K = [
	        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
	        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
	        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
	        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
	        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
	        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
	        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
	        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
	        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
	        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
	        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
	        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
	        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
	        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
	        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
	        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
	        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
	        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
	        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
	        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
	        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
	        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
	        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
	        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
	        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
	        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
	        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
	        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
	        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
	        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
	        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
	        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
	        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
	        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
	        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
	        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
	        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
	        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
	        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
	        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)
	    ];

	    // Reusable objects
	    var W = [];
	    (function () {
	        for (var i = 0; i < 80; i++) {
	            W[i] = X64Word_create();
	        }
	    }());

	    /**
	     * SHA-512 hash algorithm.
	     */
	    var SHA512 = C_algo.SHA512 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
	                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
	                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
	                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var H = this._hash.words;

	            var H0 = H[0];
	            var H1 = H[1];
	            var H2 = H[2];
	            var H3 = H[3];
	            var H4 = H[4];
	            var H5 = H[5];
	            var H6 = H[6];
	            var H7 = H[7];

	            var H0h = H0.high;
	            var H0l = H0.low;
	            var H1h = H1.high;
	            var H1l = H1.low;
	            var H2h = H2.high;
	            var H2l = H2.low;
	            var H3h = H3.high;
	            var H3l = H3.low;
	            var H4h = H4.high;
	            var H4l = H4.low;
	            var H5h = H5.high;
	            var H5l = H5.low;
	            var H6h = H6.high;
	            var H6l = H6.low;
	            var H7h = H7.high;
	            var H7l = H7.low;

	            // Working variables
	            var ah = H0h;
	            var al = H0l;
	            var bh = H1h;
	            var bl = H1l;
	            var ch = H2h;
	            var cl = H2l;
	            var dh = H3h;
	            var dl = H3l;
	            var eh = H4h;
	            var el = H4l;
	            var fh = H5h;
	            var fl = H5l;
	            var gh = H6h;
	            var gl = H6l;
	            var hh = H7h;
	            var hl = H7l;

	            // Rounds
	            for (var i = 0; i < 80; i++) {
	                // Shortcut
	                var Wi = W[i];

	                // Extend message
	                if (i < 16) {
	                    var Wih = Wi.high = M[offset + i * 2]     | 0;
	                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;
	                } else {
	                    // Gamma0
	                    var gamma0x  = W[i - 15];
	                    var gamma0xh = gamma0x.high;
	                    var gamma0xl = gamma0x.low;
	                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);
	                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));

	                    // Gamma1
	                    var gamma1x  = W[i - 2];
	                    var gamma1xh = gamma1x.high;
	                    var gamma1xl = gamma1x.low;
	                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);
	                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));

	                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	                    var Wi7  = W[i - 7];
	                    var Wi7h = Wi7.high;
	                    var Wi7l = Wi7.low;

	                    var Wi16  = W[i - 16];
	                    var Wi16h = Wi16.high;
	                    var Wi16l = Wi16.low;

	                    var Wil = gamma0l + Wi7l;
	                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);
	                    var Wil = Wil + gamma1l;
	                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);
	                    var Wil = Wil + Wi16l;
	                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);

	                    Wi.high = Wih;
	                    Wi.low  = Wil;
	                }

	                var chh  = (eh & fh) ^ (~eh & gh);
	                var chl  = (el & fl) ^ (~el & gl);
	                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);
	                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);

	                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));
	                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));
	                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));
	                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));

	                // t1 = h + sigma1 + ch + K[i] + W[i]
	                var Ki  = K[i];
	                var Kih = Ki.high;
	                var Kil = Ki.low;

	                var t1l = hl + sigma1l;
	                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);
	                var t1l = t1l + chl;
	                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);
	                var t1l = t1l + Kil;
	                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);
	                var t1l = t1l + Wil;
	                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);

	                // t2 = sigma0 + maj
	                var t2l = sigma0l + majl;
	                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);

	                // Update working variables
	                hh = gh;
	                hl = gl;
	                gh = fh;
	                gl = fl;
	                fh = eh;
	                fl = el;
	                el = (dl + t1l) | 0;
	                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;
	                dh = ch;
	                dl = cl;
	                ch = bh;
	                cl = bl;
	                bh = ah;
	                bl = al;
	                al = (t1l + t2l) | 0;
	                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;
	            }

	            // Intermediate hash value
	            H0l = H0.low  = (H0l + al);
	            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));
	            H1l = H1.low  = (H1l + bl);
	            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));
	            H2l = H2.low  = (H2l + cl);
	            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));
	            H3l = H3.low  = (H3l + dl);
	            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));
	            H4l = H4.low  = (H4l + el);
	            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));
	            H5l = H5.low  = (H5l + fl);
	            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));
	            H6l = H6.low  = (H6l + gl);
	            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));
	            H7l = H7.low  = (H7l + hl);
	            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Convert hash to 32-bit word array before returning
	            var hash = this._hash.toX32();

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        },

	        blockSize: 1024/32
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA512('message');
	     *     var hash = CryptoJS.SHA512(wordArray);
	     */
	    C.SHA512 = Hasher._createHelper(SHA512);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA512(message, key);
	     */
	    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
	}());


	return CryptoJS.SHA512;

}));

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var base58 = __webpack_require__(136)
var createHash = __webpack_require__(138)

// SHA256(SHA256(buffer))
function sha256x2 (buffer) {
  var tmp = createHash('sha256').update(buffer).digest()
  return createHash('sha256').update(tmp).digest()
}

// Encode a buffer as a base58-check encoded string
function encode (payload) {
  var checksum = sha256x2(payload)

  return base58.encode(Buffer.concat([
    payload,
    checksum
  ], payload.length + 4))
}

function decodeRaw (buffer) {
  var payload = buffer.slice(0, -4)
  var checksum = buffer.slice(-4)
  var newChecksum = sha256x2(payload)

  if (checksum[0] ^ newChecksum[0] |
      checksum[1] ^ newChecksum[1] |
      checksum[2] ^ newChecksum[2] |
      checksum[3] ^ newChecksum[3]) return

  return payload
}

// Decode a base58-check encoded string to a buffer, no result if checksum is wrong
function decodeUnsafe (string) {
  var buffer = base58.decodeUnsafe(string)
  if (!buffer) return

  return decodeRaw(buffer)
}

function decode (string) {
  var buffer = base58.decode(string)
  var payload = decodeRaw(buffer)
  if (!payload) throw new Error('Invalid checksum')
  return payload
}

module.exports = {
  encode: encode,
  decode: decode,
  decodeUnsafe: decodeUnsafe
}


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// base-x encoding
// Forked from https://github.com/cryptocoinjs/bs58
// Originally written by Mike Hearn for BitcoinJ
// Copyright (c) 2011 Google Inc
// Ported to JavaScript by Stefan Thomas
// Merged Buffer refactorings from base58-native by Stephen Pair
// Copyright (c) 2013 BitPay Inc

var Buffer = __webpack_require__(137).Buffer

module.exports = function base (ALPHABET) {
  var ALPHABET_MAP = {}
  var BASE = ALPHABET.length
  var LEADER = ALPHABET.charAt(0)

  // pre-compute lookup table
  for (var z = 0; z < ALPHABET.length; z++) {
    var x = ALPHABET.charAt(z)

    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')
    ALPHABET_MAP[x] = z
  }

  function encode (source) {
    if (source.length === 0) return ''

    var digits = [0]
    for (var i = 0; i < source.length; ++i) {
      for (var j = 0, carry = source[i]; j < digits.length; ++j) {
        carry += digits[j] << 8
        digits[j] = carry % BASE
        carry = (carry / BASE) | 0
      }

      while (carry > 0) {
        digits.push(carry % BASE)
        carry = (carry / BASE) | 0
      }
    }

    var string = ''

    // deal with leading zeros
    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]
    // convert digits to a string
    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]

    return string
  }

  function decodeUnsafe (string) {
    if (string.length === 0) return Buffer.allocUnsafe(0)

    var bytes = [0]
    for (var i = 0; i < string.length; i++) {
      var value = ALPHABET_MAP[string[i]]
      if (value === undefined) return

      for (var j = 0, carry = value; j < bytes.length; ++j) {
        carry += bytes[j] * BASE
        bytes[j] = carry & 0xff
        carry >>= 8
      }

      while (carry > 0) {
        bytes.push(carry & 0xff)
        carry >>= 8
      }
    }

    // deal with leading zeros
    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {
      bytes.push(0)
    }

    return Buffer.from(bytes.reverse())
  }

  function decode (string) {
    var buffer = decodeUnsafe(string)
    if (buffer) return buffer

    throw new Error('Non-base' + BASE + ' character')
  }

  return {
    encode: encode,
    decodeUnsafe: decodeUnsafe,
    decode: decode
  }
}


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTransactionHash = exports.signTransaction = exports.deserializeTransaction = exports.serializeTransaction = exports.deserialize = exports.serialize = exports.create = exports.ASSETS = undefined;

var _utils = __webpack_require__(6);

var _wallet = __webpack_require__(9);

var _cryptoJs = __webpack_require__(23);

var _cryptoJs2 = _interopRequireDefault(_cryptoJs);

var _components = __webpack_require__(53);

var comp = _interopRequireWildcard(_components);

var _exclusive = __webpack_require__(140);

var e = _interopRequireWildcard(_exclusive);

var _create = __webpack_require__(141);

var _c = _interopRequireWildcard(_create);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ASSETS = exports.ASSETS = _c.ASSETS;

/**
 * NEO's default Endianness from RPC calls is Little Endian.
 * However, we will store our data in Big Endian unless stated.
 * This helps us in utilising the data we have in terms of displaying
 * and makes it easy to interact with other tools (eg pasting into block explorer)
 */

/**
 * @typedef Transaction
 * @property {number} type
 * @property {number} version
 * @property {TransactionAttribute[]} attributes
 * @property {TransactionInput[]} inputs
 * @property {TransactionOutput[]} outputs
 * @property {Witness[]} scripts
 */

var create = exports.create = {
  claim: _c.claimTx,
  contract: _c.ContractTx,
  invocation: _c.invocationTx
};

var serialize = exports.serialize = {
  attribute: comp.serializeTransactionAttribute,
  input: comp.serializeTransactionInput,
  output: comp.serializeTransactionOutput,
  script: comp.serializeWitness,
  exclusiveData: e.serialize
};

var deserialize = exports.deserialize = {
  attribute: comp.deserializeTransactionAttribute,
  input: comp.deserializeTransactionInput,
  output: comp.deserializeTransactionOutput,
  script: comp.deserializeWitness,
  exclusiveData: e.deserialize

  /**
   * Serializes a given transaction object
   * @param {Transaction} tx
   * @param {boolean} signed - If the signatures should be serialized
   * @returns {string} Hexstring of transaction
   */
};var serializeTransaction = exports.serializeTransaction = function serializeTransaction(tx) {
  var signed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var out = '';
  out += (0, _utils.num2hexstring)(tx.type);
  out += (0, _utils.num2hexstring)(tx.version);
  out += serialize.exclusiveData[tx.type](tx);
  out += (0, _utils.num2VarInt)(tx.attributes.length);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = tx.attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var attribute = _step.value;

      out += serialize.attribute(attribute);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  out += (0, _utils.num2VarInt)(tx.inputs.length);
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = tx.inputs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var input = _step2.value;

      out += serialize.input(input);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  out += (0, _utils.num2VarInt)(tx.outputs.length);
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = tx.outputs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var output = _step3.value;

      out += serialize.output(output);
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  if (signed && tx.scripts && tx.scripts.length > 0) {
    out += (0, _utils.num2VarInt)(tx.scripts.length);
    var _iteratorNormalCompletion4 = true;
    var _didIteratorError4 = false;
    var _iteratorError4 = undefined;

    try {
      for (var _iterator4 = tx.scripts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
        var script = _step4.value;

        out += serialize.script(script);
      }
    } catch (err) {
      _didIteratorError4 = true;
      _iteratorError4 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion4 && _iterator4.return) {
          _iterator4.return();
        }
      } finally {
        if (_didIteratorError4) {
          throw _iteratorError4;
        }
      }
    }
  }
  return out;
};

/**
 * Deserializes a given string into a Transaction object
 * @param {string} data - Serialized string
 * @returns {Transaction} Transaction Object
 */
var deserializeTransaction = exports.deserializeTransaction = function deserializeTransaction(data) {
  var ss = new _utils.StringStream(data);
  var tx = {};
  tx.type = parseInt(ss.read(1), 16);
  tx.version = parseInt(ss.read(1), 16);
  var exclusiveData = deserialize.exclusiveData[tx.type](ss);
  tx.attributes = [];
  tx.inputs = [];
  tx.outputs = [];
  tx.scripts = [];
  var attrLength = ss.readVarInt();
  for (var i = 0; i < attrLength; i++) {
    tx.inputs.push(deserialize.attribute(ss));
  }
  var inputLength = ss.readVarInt();
  for (var _i = 0; _i < inputLength; _i++) {
    tx.inputs.push(deserialize.input(ss));
  }
  var outputLength = ss.readVarInt();
  for (var _i2 = 0; _i2 < outputLength; _i2++) {
    tx.outputs.push(deserialize.output(ss));
  }
  if (!ss.isEmpty()) {
    var scriptLength = ss.readVarInt();
    for (var _i3 = 0; _i3 < scriptLength; _i3++) {
      tx.scripts.push(deserialize.script(ss));
    }
  }
  return Object.assign(tx, exclusiveData);
};

/**
 * Signs a transaction with the corresponding privateKey. We are dealing with it as an Transaction object as multi-sig transactions require us to sign the transaction without signatures.
 * @param {Object} transaction - Transaction as an object
 * @param {string} privateKey - The private key. This method does not check if the private key is valid (aka that the inputs come from the corresponding address)
 * @return {Object} Signed transaction as an object.
 */
var signTransaction = exports.signTransaction = function signTransaction(transaction, privateKey) {
  var invocationScript = '40' + (0, _wallet.signatureData)(serializeTransaction(transaction, false), privateKey);
  var verificationScript = (0, _wallet.createSignatureScript)((0, _wallet.getAccountFromPrivateKey)(privateKey).publicKeyEncoded);
  var witness = { invocationScript: invocationScript, verificationScript: verificationScript };
  transaction.scripts ? transaction.scripts.push(witness) : transaction.scripts = [witness];
  return transaction;
};

/**
 * @param {Object} transaction
 * @return {string}
 */
var getTransactionHash = exports.getTransactionHash = function getTransactionHash(transaction) {
  var txString = _cryptoJs2.default.enc.Hex.parse(serializeTransaction(transaction, false));
  var hash = _cryptoJs2.default.SHA256(_cryptoJs2.default.SHA256(txString)).toString();
  return (0, _utils.reverseHex)(hash);
};

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deserializeWitness = exports.serializeWitness = exports.deserializeTransactionAttribute = exports.serializeTransactionAttribute = exports.deserializeTransactionOutput = exports.serializeTransactionOutput = exports.deserializeTransactionInput = exports.serializeTransactionInput = undefined;

var _utils = __webpack_require__(6);

/**
 * @typedef TransactionInput
 * @property {string} prevHash - Transaction hash, Uint256
 * @property {number} prevIndex - Index of the coin in the previous transaction, Uint16
 */

var serializeTransactionInput = exports.serializeTransactionInput = function serializeTransactionInput(input) {
  return (0, _utils.reverseHex)(input.prevHash) + (0, _utils.reverseHex)((0, _utils.num2hexstring)(input.prevIndex, 4));
};

var deserializeTransactionInput = exports.deserializeTransactionInput = function deserializeTransactionInput(stream) {
  var prevHash = (0, _utils.reverseHex)(stream.read(32));
  var prevIndex = parseInt((0, _utils.reverseHex)(stream.read(2)), 16);
  return { prevHash: prevHash, prevIndex: prevIndex };
};

/**
 * @typedef TransactionOutput
 * @property {string} assetId - assetId, Uint256
 * @property {number} value - value of output, Fixed8
 * @property {string} scriptHash - Uint160
 */

var serializeTransactionOutput = exports.serializeTransactionOutput = function serializeTransactionOutput(output) {
  var value = (0, _utils.num2fixed8)(output.value);
  return (0, _utils.reverseHex)(output.assetId) + value + (0, _utils.reverseHex)(output.scriptHash);
};

var deserializeTransactionOutput = exports.deserializeTransactionOutput = function deserializeTransactionOutput(stream) {
  var assetId = (0, _utils.reverseHex)(stream.read(32));
  var value = (0, _utils.fixed82num)(stream.read(8));
  var scriptHash = (0, _utils.reverseHex)(stream.read(20));
  return { assetId: assetId, value: value, scriptHash: scriptHash };
};

/**
 * @typedef TransactionAttribute
 * @property {number} usage - Identifying byte
 * @property {string} data - Data
 */
var maxTransactionAttributeSize = 65535;

var serializeTransactionAttribute = exports.serializeTransactionAttribute = function serializeTransactionAttribute(attr) {
  if (attr.data.length > maxTransactionAttributeSize) throw new Error();
  var out = (0, _utils.num2hexstring)(attr.usage);
  if (attr.usage === 0x81) {
    out += (0, _utils.num2hexstring)(attr.data.length);
  } else if (attr.usage === 0x90 || attr.usage >= 0xf0) {
    out += (0, _utils.num2VarInt)(attr.data.length);
  }
  if (attr.usage === 0x02 || attr.usage === 0x03) {
    out += attr.data.substr(2, 64);
  } else {
    out += attr.data;
  }
  return out;
};

var deserializeTransactionAttribute = exports.deserializeTransactionAttribute = function deserializeTransactionAttribute(stream) {
  var attr = {
    usage: parseInt(stream.read(1), 16)
  };
  if (attr.usage === 0x00 || attr.usage === 0x30 || attr.usage >= 0xa1 && attr.usage <= 0xaf) {
    attr.data = stream.read(32);
  } else if (attr.usage === 0x02 || attr.usage === 0x03) {
    attr.data = (0, _utils.num2hexstring)(attr.usage) + stream.read(32);
  } else if (attr.usage === 0x20) {
    attr.data = stream.read(20);
  } else if (attr.usage === 0x81) {
    attr.data = stream.read(parseInt(stream.read(1), 16));
  } else if (attr.usage === 0x90 || attr.usage >= 0xf0) {
    attr.data = stream.readVarBytes();
  } else {
    throw new Error();
  }
  return attr;
};

/**
 * @typedef Witness
 * @property {string} invocationScript - This data is stored as is (Little Endian)
 * @property {string} verificationScript - This data is stored as is (Little Endian)
 */

var serializeWitness = exports.serializeWitness = function serializeWitness(witness) {
  var invoLength = (witness.invocationScript.length / 2).toString(16);
  var veriLength = (witness.verificationScript.length / 2).toString(16);
  return invoLength + witness.invocationScript + veriLength + witness.verificationScript;
};

var deserializeWitness = exports.deserializeWitness = function deserializeWitness(stream) {
  var invocationScript = stream.readVarBytes();
  var verificationScript = stream.readVarBytes();
  return { invocationScript: invocationScript, verificationScript: verificationScript };
};

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildScript = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(6);

var _opCode = __webpack_require__(142);

var _opCode2 = _interopRequireDefault(_opCode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ScriptBuilder = function (_StringStream) {
  _inherits(ScriptBuilder, _StringStream);

  function ScriptBuilder() {
    _classCallCheck(this, ScriptBuilder);

    return _possibleConstructorReturn(this, (ScriptBuilder.__proto__ || Object.getPrototypeOf(ScriptBuilder)).apply(this, arguments));
  }

  _createClass(ScriptBuilder, [{
    key: '_emitAppCall',

    /**
     * Appends a AppCall and scriptHash. Used to end off a script.
     * @param {string} scriptHash - Hexstring(BE)
     * @param {boolean} useTailCall - Defaults to false
     * @return {ScriptBuilder} this
     */
    value: function _emitAppCall(scriptHash) {
      var useTailCall = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (scriptHash.length !== 40) throw new Error();
      return this.emit(useTailCall ? _opCode2.default.TAILCALL : _opCode2.default.APPCALL, (0, _utils.reverseHex)(scriptHash));
    }

    /**
     * Private method to append an array
     * @param {Array} arr
     * @return {ScriptBuilder} this
     */

  }, {
    key: '_emitArray',
    value: function _emitArray(arr) {
      for (var i = arr.length - 1; i >= 0; i--) {
        this.emitPush(arr[i]);
      }
      return this.emitPush(arr.length).emit(_opCode2.default.PACK);
    }

    /**
     * Private method to append a hexstring.
     * @param {string} hexstring - Hexstring(BE)
     * @return {ScriptBuilder} this
     */

  }, {
    key: '_emitString',
    value: function _emitString(hexstring) {
      var size = hexstring.length / 2;
      if (size <= _opCode2.default.PUSHBYTES75) {
        this.str += (0, _utils.num2hexstring)(size);
        this.str += hexstring;
      } else if (size < 0x100) {
        this.emit(_opCode2.default.PUSHDATA1);
        this.str += (0, _utils.num2hexstring)(size);
        this.str += hexstring;
      } else if (size < 0x10000) {
        this.emit(_opCode2.default.PUSHDATA2);
        this.str += (0, _utils.num2hexstring)(size, 4);
        this.str += hexstring;
      } else {
        this.emit(_opCode2.default.PUSHDATA4);
        this.str += (0, _utils.num2hexstring)(size, 8);
        this.str += hexstring;
      }
      return this;
    }

    /**
     * Private method to append a number.
     * @param {number} num
     * @return {ScriptBuilder} this
     */

  }, {
    key: '_emitNum',
    value: function _emitNum(num) {
      if (num === -1) return this.emit(_opCode2.default.PUSHM1);
      if (num === 0) return this.emit(_opCode2.default.PUSH0);
      if (num > 0 && num <= 16) return this.emit(_opCode2.default.PUSH1 - 1 + num);
      return this.emitPush(num.toString(16));
    }

    /**
     * Appends an Opcode, followed by args
     * @param {OpCode} op
     * @param {string} args
     * @return {ScriptBuilder} this
     */

  }, {
    key: 'emit',
    value: function emit(op, args) {
      this.str += (0, _utils.num2hexstring)(op);
      if (args) this.str += args;
      return this;
    }

    /**
     * Appends args, operation and scriptHash
     * @param {string} scriptHash - Hexstring(BE)
     * @param {string|null} operation - ASCII, defaults to null
     * @param {Array|string|number|boolean} args - any
     * @param {boolean} useTailCall - Use TailCall instead of AppCall
     * @return {ScriptBuilder} this
     */

  }, {
    key: 'emitAppCall',
    value: function emitAppCall(scriptHash) {
      var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
      var useTailCall = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

      this.emitPush(args);
      if (operation) {
        var hexOp = '';
        for (var i = 0; i < operation.length; i++) {
          hexOp += (0, _utils.num2hexstring)(operation.charCodeAt(i));
        }
        this.emitPush(hexOp);
      }
      this._emitAppCall(scriptHash, useTailCall);
      return this;
    }

    /**
     * Appends data depending on type. Used to append params/array lengths.
     * @param {Array|string|number|boolean} data
     * @return {ScriptBuilder} this
     */

  }, {
    key: 'emitPush',
    value: function emitPush(data) {
      switch (typeof data === 'undefined' ? 'undefined' : _typeof(data)) {
        case 'boolean':
          return this.emit(data ? _opCode2.default.PUSHT : _opCode2.default.PUSHF);
        case 'string':
          return this._emitString(data);
        case 'number':
          return this._emitNum(data);
        case 'object':
          return this._emitArray(data);
        case 'undefined':
          return this.emitPush(false);
        default:
          throw new Error();
      }
    }
  }]);

  return ScriptBuilder;
}(_utils.StringStream);

exports.default = ScriptBuilder;
var buildScript = exports.buildScript = function buildScript(_ref) {
  var scriptHash = _ref.scriptHash,
      _ref$operation = _ref.operation,
      operation = _ref$operation === undefined ? null : _ref$operation,
      _ref$args = _ref.args,
      args = _ref$args === undefined ? undefined : _ref$args,
      _ref$useTailCall = _ref.useTailCall,
      useTailCall = _ref$useTailCall === undefined ? false : _ref$useTailCall;

  var sb = new ScriptBuilder();
  return sb.emitAppCall(scriptHash, operation, args, useTailCall).str;
};

/***/ }),
/* 55 */
/***/ (function(module, exports) {

module.exports = cleanInputArguments;

function cleanInputArguments(password, salt, options, callback) {
	return {
		password: cleanString(password),
		salt: cleanString(salt),
		options: cleanOptions(options),
		callback: cleanCallback(arguments[arguments.length - 1])
	};
}

function cleanString(input) {
	if (typeof input == 'function') return Buffer('', 'utf8');
	if (input instanceof Buffer) return input;
	if (typeof input == 'string') return new Buffer(input, 'utf8');
	return new Buffer(String(input || ''), 'utf8');
}

function cleanOptions(options) {
	//console.log('cleanOptions ', options, typeof options);
	options = (options !== null && typeof options === 'object') ? options : {}

	return {
		maxmem: checkMaxmem(options.maxmem) || (32 * 1024 * 1024),
		cost:  checkN(options.cost) || Math.pow(2,14),
		blockSize:  checkNumber(options.blockSize) || 8,
		parallel:  checkNumber(options.parallel) || 1,
		size:  checkLength(options.size) || 64
	};
}

function cleanCallback(callback) {
	if (typeof callback === 'function') return callback;
	return null;
}

function checkMaxmem(mem) {
	var mb = 1024 * 1024;
	if (typeof mem !== 'number') return null;
	for (var m = 4; m <= 2048; m = m * 2) {
		var checkVal = m * mb;
		if (checkVal > mem) return null;
		if (checkVal == mem) return checkVal;
	}
	return null;
}

function checkN(input) {
	//console.log('checkN ',input);
	if (typeof input !== 'number') return null;
	for (var m = 8; m <= 64; m++) {
		var checkVal = Math.pow(2,m);
		//console.log('checkVal ',input);
		if (checkVal > input) return null;
		if (checkVal == input) return checkVal;
	}
	return null;
}


function checkNumber(input) {
	if (typeof input !== 'number') return null;
	input = Math.round(input);
	if (input < 1) return null;
	if (input > 256) return null;
	return input;
}

function checkLength(input) {
	if (typeof input !== 'number') return null;
	input = Math.round(input);
	if (input < 1) return null;
	if (input > 2048) return null;
	return input;
}

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = __webpack_require__(26);

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _api[key];
    }
  });
});

var _nep = __webpack_require__(144);

Object.keys(_nep).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _nep[key];
    }
  });
});

var _nep2 = __webpack_require__(153);

Object.keys(_nep2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _nep2[key];
    }
  });
});

var _wallet = __webpack_require__(9);

Object.keys(_wallet).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _wallet[key];
    }
  });
});

var _index = __webpack_require__(52);

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _index[key];
    }
  });
});

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(58);

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);
var bind = __webpack_require__(27);
var Axios = __webpack_require__(60);
var defaults = __webpack_require__(18);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(39);
axios.CancelToken = __webpack_require__(82);
axios.isCancel = __webpack_require__(38);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(83);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 59 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(18);
var utils = __webpack_require__(2);
var InterceptorManager = __webpack_require__(77);
var dispatchRequest = __webpack_require__(78);
var isAbsoluteURL = __webpack_require__(80);
var combineURLs = __webpack_require__(81);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
  config.method = config.method.toLowerCase();

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);
var settle = __webpack_require__(28);
var buildURL = __webpack_require__(30);
var parseHeaders = __webpack_require__(63);
var isURLSameOrigin = __webpack_require__(64);
var createError = __webpack_require__(19);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(65);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if (process.env.NODE_ENV !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(66);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);
var settle = __webpack_require__(28);
var buildURL = __webpack_require__(30);
var http = __webpack_require__(31);
var https = __webpack_require__(32);
var httpFollow = __webpack_require__(33).http;
var httpsFollow = __webpack_require__(33).https;
var url = __webpack_require__(34);
var zlib = __webpack_require__(75);
var pkg = __webpack_require__(76);
var createError = __webpack_require__(19);
var enhanceError = __webpack_require__(29);

/*eslint consistent-return:0*/
module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolve, reject) {
    var data = config.data;
    var headers = config.headers;
    var timer;
    var aborted = false;

    // Set User-Agent (required by some servers)
    // Only set header if it hasn't been set in config
    // See https://github.com/mzabriskie/axios/issues/69
    if (!headers['User-Agent'] && !headers['user-agent']) {
      headers['User-Agent'] = 'axios/' + pkg.version;
    }

    if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {
        // Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = new Buffer(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = new Buffer(data, 'utf-8');
      } else {
        return reject(createError(
          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
          config
        ));
      }

      // Add Content-Length header if data exists
      headers['Content-Length'] = data.length;
    }

    // HTTP basic authentication
    var auth = undefined;
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    }

    // Parse url
    var parsed = url.parse(config.url);
    var protocol = parsed.protocol || 'http:';

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth) {
      delete headers.Authorization;
    }

    var isHttps = protocol === 'https:';
    var agent = isHttps ? config.httpsAgent : config.httpAgent;

    var options = {
      hostname: parsed.hostname,
      port: parsed.port,
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method,
      headers: headers,
      agent: agent,
      auth: auth
    };

    var proxy = config.proxy;
    if (!proxy) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        proxy = {
          host: parsedProxyUrl.hostname,
          port: parsedProxyUrl.port
        };

        if (parsedProxyUrl.auth) {
          var proxyUrlAuth = parsedProxyUrl.auth.split(':');
          proxy.auth = {
            username: proxyUrlAuth[0],
            password: proxyUrlAuth[1]
          };
        }
      }
    }

    if (proxy) {
      options.hostname = proxy.host;
      options.host = proxy.host;
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      options.port = proxy.port;
      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;

      // Basic proxy authorization
      if (proxy.auth) {
        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
        options.headers['Proxy-Authorization'] = 'Basic ' + base64;
      }
    }

    var transport;
    if (config.maxRedirects === 0) {
      transport = isHttps ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }
      transport = isHttps ? httpsFollow : httpFollow;
    }

    // Create the request
    var req = transport.request(options, function handleResponse(res) {
      if (aborted) return;

      // Response has been received so kill timer that handles request timeout
      clearTimeout(timer);
      timer = null;

      // uncompress the response body transparently if required
      var stream = res;
      switch (res.headers['content-encoding']) {
      /*eslint default-case:0*/
      case 'gzip':
      case 'compress':
      case 'deflate':
        // add the unzipper to the body stream processing pipeline
        stream = stream.pipe(zlib.createUnzip());

        // remove the content-encoding in order to not confuse downstream operations
        delete res.headers['content-encoding'];
        break;
      }

      // return the last request in case of redirects
      var lastRequest = res.req || req;

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);

          // make sure the content length is not over the maxContentLength if specified
          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {
            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',
              config, null, lastRequest));
          }
        });

        stream.on('error', function handleStreamError(err) {
          if (aborted) return;
          reject(enhanceError(err, config, null, lastRequest));
        });

        stream.on('end', function handleStreamEnd() {
          var responseData = Buffer.concat(responseBuffer);
          if (config.responseType !== 'arraybuffer') {
            responseData = responseData.toString('utf8');
          }

          response.data = responseData;
          settle(resolve, reject, response);
        });
      }
    });

    // Handle errors
    req.on('error', function handleRequestError(err) {
      if (aborted) return;
      reject(enhanceError(err, config, null, req));
    });

    // Handle request timeout
    if (config.timeout && !timer) {
      timer = setTimeout(function handleRequestTimeout() {
        req.abort();
        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));
        aborted = true;
      }, config.timeout);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (aborted) {
          return;
        }

        req.abort();
        reject(cancel);
        aborted = true;
      });
    }

    // Send the request
    if (utils.isStream(data)) {
      data.pipe(req);
    } else {
      req.end(data);
    }
  });
};


/***/ }),
/* 68 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Detect Electron renderer process, which is node, but we should
 * treat as a browser.
 */

if (typeof process !== 'undefined' && process.type === 'renderer') {
  module.exports = __webpack_require__(70);
} else {
  module.exports = __webpack_require__(72);
}


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(35);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  'lightseagreen',
  'forestgreen',
  'goldenrod',
  'dodgerblue',
  'darkorchid',
  'crimson'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}


/***/ }),
/* 71 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var tty = __webpack_require__(73);
var util = __webpack_require__(36);

/**
 * This is the Node.js implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(35);
exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // camel-case
  var prop = key
    .substring(6)
    .toLowerCase()
    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });

  // coerce string value into JS value
  var val = process.env[key];
  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
  else if (val === 'null') val = null;
  else val = Number(val);

  obj[prop] = val;
  return obj;
}, {});

/**
 * The file descriptor to write the `debug()` calls to.
 * Set the `DEBUG_FD` env variable to override with another value. i.e.:
 *
 *   $ DEBUG_FD=3 node script.js 3>debug.log
 */

var fd = parseInt(process.env.DEBUG_FD, 10) || 2;

if (1 !== fd && 2 !== fd) {
  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()
}

var stream = 1 === fd ? process.stdout :
             2 === fd ? process.stderr :
             createWritableStdioStream(fd);

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
  return 'colors' in exports.inspectOpts
    ? Boolean(exports.inspectOpts.colors)
    : tty.isatty(fd);
}

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

exports.formatters.o = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts)
    .split('\n').map(function(str) {
      return str.trim()
    }).join(' ');
};

/**
 * Map %o to `util.inspect()`, allowing multiple lines if needed.
 */

exports.formatters.O = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var name = this.namespace;
  var useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var prefix = '  \u001b[3' + c + ';1m' + name + ' ' + '\u001b[0m';

    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push('\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\u001b[0m');
  } else {
    args[0] = new Date().toUTCString()
      + ' ' + name + ' ' + args[0];
  }
}

/**
 * Invokes `util.format()` with the specified arguments and writes to `stream`.
 */

function log() {
  return stream.write(util.format.apply(util, arguments) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  if (null == namespaces) {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  } else {
    process.env.DEBUG = namespaces;
  }
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  return process.env.DEBUG;
}

/**
 * Copied from `node/src/node.js`.
 *
 * XXX: It's lame that node doesn't expose this API out-of-the-box. It also
 * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.
 */

function createWritableStdioStream (fd) {
  var stream;
  var tty_wrap = process.binding('tty_wrap');

  // Note stream._type is used for test-module-load-list.js

  switch (tty_wrap.guessHandleType(fd)) {
    case 'TTY':
      stream = new tty.WriteStream(fd);
      stream._type = 'tty';

      // Hack to have stream not keep the event loop alive.
      // See https://github.com/joyent/node/issues/1726
      if (stream._handle && stream._handle.unref) {
        stream._handle.unref();
      }
      break;

    case 'FILE':
      var fs = __webpack_require__(37);
      stream = new fs.SyncWriteStream(fd, { autoClose: false });
      stream._type = 'fs';
      break;

    case 'PIPE':
    case 'TCP':
      var net = __webpack_require__(74);
      stream = new net.Socket({
        fd: fd,
        readable: false,
        writable: true
      });

      // FIXME Should probably have an option in net.Socket to create a
      // stream from an existing fd which is writable only. But for now
      // we'll just add this hack and set the `readable` member to false.
      // Test: ./node test/fixtures/echo.js < /etc/passwd
      stream.readable = false;
      stream.read = null;
      stream._type = 'pipe';

      // FIXME Hack to have stream not keep the event loop alive.
      // See https://github.com/joyent/node/issues/1726
      if (stream._handle && stream._handle.unref) {
        stream._handle.unref();
      }
      break;

    default:
      // Probably an error on in uv_guess_handle()
      throw new Error('Implement me. Unknown stream file type!');
  }

  // For supporting legacy API we put the FD here.
  stream.fd = fd;

  stream._isStdio = true;

  return stream;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init (debug) {
  debug.inspectOpts = {};

  var keys = Object.keys(exports.inspectOpts);
  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

/**
 * Enable namespaces listed in `process.env.DEBUG` initially.
 */

exports.enable(load());


/***/ }),
/* 73 */
/***/ (function(module, exports) {

module.exports = require("tty");

/***/ }),
/* 74 */
/***/ (function(module, exports) {

module.exports = require("net");

/***/ }),
/* 75 */
/***/ (function(module, exports) {

module.exports = require("zlib");

/***/ }),
/* 76 */
/***/ (function(module, exports) {

module.exports = {"_args":[[{"raw":"axios@^0.16.2","scope":null,"escapedName":"axios","name":"axios","rawSpec":"^0.16.2","spec":">=0.16.2 <0.17.0","type":"range"},"/Users/ethanfast/Desktop/Code/NEO/neon-js"]],"_from":"axios@>=0.16.2 <0.17.0","_id":"axios@0.16.2","_inCache":true,"_location":"/axios","_nodeVersion":"6.10.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/axios-0.16.2.tgz_1496518163672_0.8309127793181688"},"_npmUser":{"name":"nickuraltsev","email":"nick.uraltsev@gmail.com"},"_npmVersion":"3.10.10","_phantomChildren":{},"_requested":{"raw":"axios@^0.16.2","scope":null,"escapedName":"axios","name":"axios","rawSpec":"^0.16.2","spec":">=0.16.2 <0.17.0","type":"range"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.16.2.tgz","_shasum":"ba4f92f17167dfbab40983785454b9ac149c3c6d","_shrinkwrap":null,"_spec":"axios@^0.16.2","_where":"/Users/ethanfast/Desktop/Code/NEO/neon-js","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/mzabriskie/axios/issues"},"dependencies":{"follow-redirects":"^1.2.3","is-buffer":"^1.1.5"},"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"coveralls":"^2.11.9","es6-promise":"^4.0.5","grunt":"^1.0.1","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.0.0","grunt-contrib-nodeunit":"^1.0.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^19.0.0","grunt-karma":"^2.0.0","grunt-ts":"^6.0.0-beta.3","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.0.0","karma-firefox-launcher":"^1.0.0","karma-jasmine":"^1.0.2","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-phantomjs-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.1.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","phantomjs-prebuilt":"^2.1.7","sinon":"^1.17.4","typescript":"^2.0.3","url-search-params":"^0.6.1","webpack":"^1.13.1","webpack-dev-server":"^1.14.1"},"directories":{},"dist":{"shasum":"ba4f92f17167dfbab40983785454b9ac149c3c6d","tarball":"https://registry.npmjs.org/axios/-/axios-0.16.2.tgz"},"gitHead":"46e275c407f81c44dd9aad419b6e861d8a936580","homepage":"https://github.com/mzabriskie/axios","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","maintainers":[{"name":"mzabriskie","email":"mzabriskie@gmail.com"},{"name":"nickuraltsev","email":"nick.uraltsev@gmail.com"}],"name":"axios","optionalDependencies":{},"readme":"ERROR: No README data found!","repository":{"type":"git","url":"git+https://github.com/mzabriskie/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","version":"0.16.2"}

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);
var transformData = __webpack_require__(79);
var isCancel = __webpack_require__(38);
var defaults = __webpack_require__(18);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(2);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(39);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var Point = __webpack_require__(40)
var Curve = __webpack_require__(42)

var getCurveByName = __webpack_require__(87)

module.exports = {
  Curve: Curve,
  Point: Point,
  getCurveByName: getCurveByName
}


/***/ }),
/* 85 */
/***/ (function(module, exports) {

module.exports = {"_args":[[{"raw":"bigi@^1.4.2","scope":null,"escapedName":"bigi","name":"bigi","rawSpec":"^1.4.2","spec":">=1.4.2 <2.0.0","type":"range"},"/Users/ethanfast/Desktop/Code/NEO/neon-js"]],"_from":"bigi@>=1.4.2 <2.0.0","_id":"bigi@1.4.2","_inCache":true,"_location":"/bigi","_nodeVersion":"6.1.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bigi-1.4.2.tgz_1469584192413_0.6801238611806184"},"_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"_npmVersion":"3.8.6","_phantomChildren":{},"_requested":{"raw":"bigi@^1.4.2","scope":null,"escapedName":"bigi","name":"bigi","rawSpec":"^1.4.2","spec":">=1.4.2 <2.0.0","type":"range"},"_requiredBy":["/","/ecurve"],"_resolved":"https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz","_shasum":"9c665a95f88b8b08fc05cfd731f561859d725825","_shrinkwrap":null,"_spec":"bigi@^1.4.2","_where":"/Users/ethanfast/Desktop/Code/NEO/neon-js","bugs":{"url":"https://github.com/cryptocoinjs/bigi/issues"},"dependencies":{},"description":"Big integers.","devDependencies":{"coveralls":"^2.11.2","istanbul":"^0.3.5","jshint":"^2.5.1","mocha":"^2.1.0","mochify":"^2.1.0"},"directories":{},"dist":{"shasum":"9c665a95f88b8b08fc05cfd731f561859d725825","tarball":"https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz"},"gitHead":"c25308081c896ff84702303722bf5ecd8b3f78e3","homepage":"https://github.com/cryptocoinjs/bigi#readme","keywords":["cryptography","math","bitcoin","arbitrary","precision","arithmetic","big","integer","int","number","biginteger","bigint","bignumber","decimal","float"],"main":"./lib/index.js","maintainers":[{"name":"midnightlightning","email":"boydb@midnightdesign.ws"},{"name":"sidazhang","email":"sidazhang89@gmail.com"},{"name":"nadav","email":"npm@shesek.info"},{"name":"jprichardson","email":"jprichardson@gmail.com"}],"name":"bigi","optionalDependencies":{},"readme":"ERROR: No README data found!","repository":{"url":"git+https://github.com/cryptocoinjs/bigi.git","type":"git"},"scripts":{"browser-test":"mochify --wd -R spec","coverage":"istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js","coveralls":"npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info","jshint":"jshint --config jshint.json lib/*.js ; true","test":"_mocha -- test/*.js","unit":"mocha"},"testling":{"files":"test/*.js","harness":"mocha","browsers":["ie/9..latest","firefox/latest","chrome/latest","safari/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"version":"1.4.2"}

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

// FIXME: Kind of a weird way to throw exceptions, consider removing
var assert = __webpack_require__(13)
var BigInteger = __webpack_require__(41)

/**
 * Turns a byte array into a big integer.
 *
 * This function will interpret a byte array as a big integer in big
 * endian notation.
 */
BigInteger.fromByteArrayUnsigned = function(byteArray) {
  // BigInteger expects a DER integer conformant byte array
  if (byteArray[0] & 0x80) {
    return new BigInteger([0].concat(byteArray))
  }

  return new BigInteger(byteArray)
}

/**
 * Returns a byte array representation of the big integer.
 *
 * This returns the absolute of the contained value in big endian
 * form. A value of zero results in an empty array.
 */
BigInteger.prototype.toByteArrayUnsigned = function() {
  var byteArray = this.toByteArray()
  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray
}

BigInteger.fromDERInteger = function(byteArray) {
  return new BigInteger(byteArray)
}

/*
 * Converts BigInteger to a DER integer representation.
 *
 * The format for this value uses the most significant bit as a sign
 * bit.  If the most significant bit is already set and the integer is
 * positive, a 0x00 is prepended.
 *
 * Examples:
 *
 *      0 =>     0x00
 *      1 =>     0x01
 *     -1 =>     0xff
 *    127 =>     0x7f
 *   -127 =>     0x81
 *    128 =>   0x0080
 *   -128 =>     0x80
 *    255 =>   0x00ff
 *   -255 =>   0xff01
 *  16300 =>   0x3fac
 * -16300 =>   0xc054
 *  62300 => 0x00f35c
 * -62300 => 0xff0ca4
*/
BigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray

BigInteger.fromBuffer = function(buffer) {
  // BigInteger expects a DER integer conformant byte array
  if (buffer[0] & 0x80) {
    var byteArray = Array.prototype.slice.call(buffer)

    return new BigInteger([0].concat(byteArray))
  }

  return new BigInteger(buffer)
}

BigInteger.fromHex = function(hex) {
  if (hex === '') return BigInteger.ZERO

  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string')
  assert.equal(hex.length % 2, 0, 'Incomplete hex')
  return new BigInteger(hex, 16)
}

BigInteger.prototype.toBuffer = function(size) {
  var byteArray = this.toByteArrayUnsigned()
  var zeros = []

  var padding = size - byteArray.length
  while (zeros.length < padding) zeros.push(0)

  return new Buffer(zeros.concat(byteArray))
}

BigInteger.prototype.toHex = function(size) {
  return this.toBuffer(size).toString('hex')
}


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var BigInteger = __webpack_require__(14)

var curves = __webpack_require__(88)
var Curve = __webpack_require__(42)

function getCurveByName (name) {
  var curve = curves[name]
  if (!curve) return null

  var p = new BigInteger(curve.p, 16)
  var a = new BigInteger(curve.a, 16)
  var b = new BigInteger(curve.b, 16)
  var n = new BigInteger(curve.n, 16)
  var h = new BigInteger(curve.h, 16)
  var Gx = new BigInteger(curve.Gx, 16)
  var Gy = new BigInteger(curve.Gy, 16)

  return new Curve(p, a, b, Gx, Gy, n, h)
}

module.exports = getCurveByName


/***/ }),
/* 88 */
/***/ (function(module, exports) {

module.exports = {"secp128r1":{"p":"fffffffdffffffffffffffffffffffff","a":"fffffffdfffffffffffffffffffffffc","b":"e87579c11079f43dd824993c2cee5ed3","n":"fffffffe0000000075a30d1b9038a115","h":"01","Gx":"161ff7528b899b2d0c28607ca52c5b86","Gy":"cf5ac8395bafeb13c02da292dded7a83"},"secp160k1":{"p":"fffffffffffffffffffffffffffffffeffffac73","a":"00","b":"07","n":"0100000000000000000001b8fa16dfab9aca16b6b3","h":"01","Gx":"3b4c382ce37aa192a4019e763036f4f5dd4d7ebb","Gy":"938cf935318fdced6bc28286531733c3f03c4fee"},"secp160r1":{"p":"ffffffffffffffffffffffffffffffff7fffffff","a":"ffffffffffffffffffffffffffffffff7ffffffc","b":"1c97befc54bd7a8b65acf89f81d4d4adc565fa45","n":"0100000000000000000001f4c8f927aed3ca752257","h":"01","Gx":"4a96b5688ef573284664698968c38bb913cbfc82","Gy":"23a628553168947d59dcc912042351377ac5fb32"},"secp192k1":{"p":"fffffffffffffffffffffffffffffffffffffffeffffee37","a":"00","b":"03","n":"fffffffffffffffffffffffe26f2fc170f69466a74defd8d","h":"01","Gx":"db4ff10ec057e9ae26b07d0280b7f4341da5d1b1eae06c7d","Gy":"9b2f2f6d9c5628a7844163d015be86344082aa88d95e2f9d"},"secp192r1":{"p":"fffffffffffffffffffffffffffffffeffffffffffffffff","a":"fffffffffffffffffffffffffffffffefffffffffffffffc","b":"64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1","n":"ffffffffffffffffffffffff99def836146bc9b1b4d22831","h":"01","Gx":"188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012","Gy":"07192b95ffc8da78631011ed6b24cdd573f977a11e794811"},"secp256k1":{"p":"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f","a":"00","b":"07","n":"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141","h":"01","Gx":"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","Gy":"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"},"secp256r1":{"p":"ffffffff00000001000000000000000000000000ffffffffffffffffffffffff","a":"ffffffff00000001000000000000000000000000fffffffffffffffffffffffc","b":"5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b","n":"ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551","h":"01","Gx":"6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296","Gy":"4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"}}

/***/ }),
/* 89 */
/***/ (function(module, exports) {

module.exports = {"_args":[[{"raw":"elliptic@^6.4.0","scope":null,"escapedName":"elliptic","name":"elliptic","rawSpec":"^6.4.0","spec":">=6.4.0 <7.0.0","type":"range"},"/Users/ethanfast/Desktop/Code/NEO/neon-js"]],"_from":"elliptic@>=6.4.0 <7.0.0","_id":"elliptic@6.4.0","_inCache":true,"_location":"/elliptic","_nodeVersion":"7.0.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/elliptic-6.4.0.tgz_1487798866428_0.30510620190761983"},"_npmUser":{"name":"indutny","email":"fedor@indutny.com"},"_npmVersion":"3.10.8","_phantomChildren":{},"_requested":{"raw":"elliptic@^6.4.0","scope":null,"escapedName":"elliptic","name":"elliptic","rawSpec":"^6.4.0","spec":">=6.4.0 <7.0.0","type":"range"},"_requiredBy":["/","/browserify-sign","/create-ecdh"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz","_shasum":"cac9af8762c85836187003c8dfe193e5e2eae5df","_shrinkwrap":null,"_spec":"elliptic@^6.4.0","_where":"/Users/ethanfast/Desktop/Code/NEO/neon-js","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"description":"EC cryptography","devDependencies":{"brfs":"^1.4.3","coveralls":"^2.11.3","grunt":"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2","istanbul":"^0.4.2","jscs":"^2.9.0","jshint":"^2.6.0","mocha":"^2.1.0"},"directories":{},"dist":{"shasum":"cac9af8762c85836187003c8dfe193e5e2eae5df","tarball":"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz"},"files":["lib"],"gitHead":"6b0d2b76caae91471649c8e21f0b1d3ba0f96090","homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","maintainers":[{"name":"indutny","email":"fedor@indutny.com"}],"name":"elliptic","optionalDependencies":{},"readme":"ERROR: No README data found!","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.4.0"}

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;
var BN = __webpack_require__(5);
var minAssert = __webpack_require__(7);
var minUtils = __webpack_require__(44);

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(21);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(5);
var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(15);
var elliptic = __webpack_require__(3);
var BN = __webpack_require__(5);
var inherits = __webpack_require__(16);
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),
/* 94 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(15);
var BN = __webpack_require__(5);
var inherits = __webpack_require__(16);
var Base = curve.base;

var elliptic = __webpack_require__(3);
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(15);
var elliptic = __webpack_require__(3);
var BN = __webpack_require__(5);
var inherits = __webpack_require__(16);
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curves = exports;

var hash = __webpack_require__(22);
var elliptic = __webpack_require__(3);

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = __webpack_require__(104);
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.sha1 = __webpack_require__(99);
exports.sha224 = __webpack_require__(100);
exports.sha256 = __webpack_require__(46);
exports.sha384 = __webpack_require__(101);
exports.sha512 = __webpack_require__(47);


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var common = __webpack_require__(12);
var shaCommon = __webpack_require__(45);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var SHA256 = __webpack_require__(46);

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);

var SHA512 = __webpack_require__(47);

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var common = __webpack_require__(12);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(4);
var assert = __webpack_require__(7);

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),
/* 104 */
/***/ (function(module, exports) {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(5);
var HmacDRBG = __webpack_require__(106);
var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = __webpack_require__(107);
var Signature = __webpack_require__(108);

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(22);
var utils = __webpack_require__(44);
var assert = __webpack_require__(7);

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(5);
var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(5);

var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(22);
var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(110);
var Signature = __webpack_require__(111);

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(5);
var elliptic = __webpack_require__(3);
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Check if typed arrays are supported
	    if (typeof ArrayBuffer != 'function') {
	        return;
	    }

	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;

	    // Reference original init
	    var superInit = WordArray.init;

	    // Augment WordArray.init to handle typed arrays
	    var subInit = WordArray.init = function (typedArray) {
	        // Convert buffers to uint8
	        if (typedArray instanceof ArrayBuffer) {
	            typedArray = new Uint8Array(typedArray);
	        }

	        // Convert other array views to uint8
	        if (
	            typedArray instanceof Int8Array ||
	            (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||
	            typedArray instanceof Int16Array ||
	            typedArray instanceof Uint16Array ||
	            typedArray instanceof Int32Array ||
	            typedArray instanceof Uint32Array ||
	            typedArray instanceof Float32Array ||
	            typedArray instanceof Float64Array
	        ) {
	            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
	        }

	        // Handle Uint8Array
	        if (typedArray instanceof Uint8Array) {
	            // Shortcut
	            var typedArrayByteLength = typedArray.byteLength;

	            // Extract bytes
	            var words = [];
	            for (var i = 0; i < typedArrayByteLength; i++) {
	                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);
	            }

	            // Initialize this word array
	            superInit.call(this, words, typedArrayByteLength);
	        } else {
	            // Else call normal init
	            superInit.apply(this, arguments);
	        }
	    };

	    subInit.prototype = WordArray;
	}());


	return CryptoJS.lib.WordArray;

}));

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * UTF-16 BE encoding strategy.
	     */
	    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
	        /**
	         * Converts a word array to a UTF-16 BE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 BE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 BE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 BE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    /**
	     * UTF-16 LE encoding strategy.
	     */
	    C_enc.Utf16LE = {
	        /**
	         * Converts a word array to a UTF-16 LE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 LE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 LE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 LE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    function swapEndian(word) {
	        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);
	    }
	}());


	return CryptoJS.enc.Utf16;

}));

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(48));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./sha256"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA256 = C_algo.SHA256;

	    /**
	     * SHA-224 hash algorithm.
	     */
	    var SHA224 = C_algo.SHA224 = SHA256.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
	                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA256._doFinalize.call(this);

	            hash.sigBytes -= 4;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA224('message');
	     *     var hash = CryptoJS.SHA224(wordArray);
	     */
	    C.SHA224 = SHA256._createHelper(SHA224);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA224(message, key);
	     */
	    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
	}());


	return CryptoJS.SHA224;

}));

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(17), __webpack_require__(49));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core", "./sha512"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;
	    var SHA512 = C_algo.SHA512;

	    /**
	     * SHA-384 hash algorithm.
	     */
	    var SHA384 = C_algo.SHA384 = SHA512.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
	                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
	                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
	                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA512._doFinalize.call(this);

	            hash.sigBytes -= 16;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA384('message');
	     *     var hash = CryptoJS.SHA384(wordArray);
	     */
	    C.SHA384 = SHA512._createHelper(SHA384);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA384(message, key);
	     */
	    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
	}());


	return CryptoJS.SHA384;

}));

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0), __webpack_require__(17));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var C_algo = C.algo;

	    // Constants tables
	    var RHO_OFFSETS = [];
	    var PI_INDEXES  = [];
	    var ROUND_CONSTANTS = [];

	    // Compute Constants
	    (function () {
	        // Compute rho offset constants
	        var x = 1, y = 0;
	        for (var t = 0; t < 24; t++) {
	            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;

	            var newX = y % 5;
	            var newY = (2 * x + 3 * y) % 5;
	            x = newX;
	            y = newY;
	        }

	        // Compute pi index constants
	        for (var x = 0; x < 5; x++) {
	            for (var y = 0; y < 5; y++) {
	                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;
	            }
	        }

	        // Compute round constants
	        var LFSR = 0x01;
	        for (var i = 0; i < 24; i++) {
	            var roundConstantMsw = 0;
	            var roundConstantLsw = 0;

	            for (var j = 0; j < 7; j++) {
	                if (LFSR & 0x01) {
	                    var bitPosition = (1 << j) - 1;
	                    if (bitPosition < 32) {
	                        roundConstantLsw ^= 1 << bitPosition;
	                    } else /* if (bitPosition >= 32) */ {
	                        roundConstantMsw ^= 1 << (bitPosition - 32);
	                    }
	                }

	                // Compute next LFSR
	                if (LFSR & 0x80) {
	                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
	                    LFSR = (LFSR << 1) ^ 0x71;
	                } else {
	                    LFSR <<= 1;
	                }
	            }

	            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
	        }
	    }());

	    // Reusable objects for temporary values
	    var T = [];
	    (function () {
	        for (var i = 0; i < 25; i++) {
	            T[i] = X64Word.create();
	        }
	    }());

	    /**
	     * SHA-3 hash algorithm.
	     */
	    var SHA3 = C_algo.SHA3 = Hasher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} outputLength
	         *   The desired number of bits in the output hash.
	         *   Only values permitted are: 224, 256, 384, 512.
	         *   Default: 512
	         */
	        cfg: Hasher.cfg.extend({
	            outputLength: 512
	        }),

	        _doReset: function () {
	            var state = this._state = []
	            for (var i = 0; i < 25; i++) {
	                state[i] = new X64Word.init();
	            }

	            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var state = this._state;
	            var nBlockSizeLanes = this.blockSize / 2;

	            // Absorb
	            for (var i = 0; i < nBlockSizeLanes; i++) {
	                // Shortcuts
	                var M2i  = M[offset + 2 * i];
	                var M2i1 = M[offset + 2 * i + 1];

	                // Swap endian
	                M2i = (
	                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |
	                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)
	                );
	                M2i1 = (
	                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |
	                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)
	                );

	                // Absorb message into state
	                var lane = state[i];
	                lane.high ^= M2i1;
	                lane.low  ^= M2i;
	            }

	            // Rounds
	            for (var round = 0; round < 24; round++) {
	                // Theta
	                for (var x = 0; x < 5; x++) {
	                    // Mix column lanes
	                    var tMsw = 0, tLsw = 0;
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        tMsw ^= lane.high;
	                        tLsw ^= lane.low;
	                    }

	                    // Temporary values
	                    var Tx = T[x];
	                    Tx.high = tMsw;
	                    Tx.low  = tLsw;
	                }
	                for (var x = 0; x < 5; x++) {
	                    // Shortcuts
	                    var Tx4 = T[(x + 4) % 5];
	                    var Tx1 = T[(x + 1) % 5];
	                    var Tx1Msw = Tx1.high;
	                    var Tx1Lsw = Tx1.low;

	                    // Mix surrounding columns
	                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));
	                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        lane.high ^= tMsw;
	                        lane.low  ^= tLsw;
	                    }
	                }

	                // Rho Pi
	                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
	                    // Shortcuts
	                    var lane = state[laneIndex];
	                    var laneMsw = lane.high;
	                    var laneLsw = lane.low;
	                    var rhoOffset = RHO_OFFSETS[laneIndex];

	                    // Rotate lanes
	                    if (rhoOffset < 32) {
	                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));
	                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));
	                    } else /* if (rhoOffset >= 32) */ {
	                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));
	                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));
	                    }

	                    // Transpose lanes
	                    var TPiLane = T[PI_INDEXES[laneIndex]];
	                    TPiLane.high = tMsw;
	                    TPiLane.low  = tLsw;
	                }

	                // Rho pi at x = y = 0
	                var T0 = T[0];
	                var state0 = state[0];
	                T0.high = state0.high;
	                T0.low  = state0.low;

	                // Chi
	                for (var x = 0; x < 5; x++) {
	                    for (var y = 0; y < 5; y++) {
	                        // Shortcuts
	                        var laneIndex = x + 5 * y;
	                        var lane = state[laneIndex];
	                        var TLane = T[laneIndex];
	                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];
	                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];

	                        // Mix rows
	                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);
	                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);
	                    }
	                }

	                // Iota
	                var lane = state[0];
	                var roundConstant = ROUND_CONSTANTS[round];
	                lane.high ^= roundConstant.high;
	                lane.low  ^= roundConstant.low;;
	            }
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;
	            var blockSizeBits = this.blockSize * 32;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);
	            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var state = this._state;
	            var outputLengthBytes = this.cfg.outputLength / 8;
	            var outputLengthLanes = outputLengthBytes / 8;

	            // Squeeze
	            var hashWords = [];
	            for (var i = 0; i < outputLengthLanes; i++) {
	                // Shortcuts
	                var lane = state[i];
	                var laneMsw = lane.high;
	                var laneLsw = lane.low;

	                // Swap endian
	                laneMsw = (
	                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |
	                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)
	                );
	                laneLsw = (
	                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |
	                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)
	                );

	                // Squeeze state to retrieve hash
	                hashWords.push(laneLsw);
	                hashWords.push(laneMsw);
	            }

	            // Return final computed hash
	            return new WordArray.init(hashWords, outputLengthBytes);
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);

	            var state = clone._state = this._state.slice(0);
	            for (var i = 0; i < 25; i++) {
	                state[i] = state[i].clone();
	            }

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA3('message');
	     *     var hash = CryptoJS.SHA3(wordArray);
	     */
	    C.SHA3 = Hasher._createHelper(SHA3);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA3(message, key);
	     */
	    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
	}(Math));


	return CryptoJS.SHA3;

}));

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(0));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
return function(t){function r(e,t,r){return e^t^r}function n(e,t,r){return e&t|~e&r}function i(e,t,r){return(e|~t)^r}function a(e,t,r){return e&r|t&~r}function o(e,t,r){return e^(t|~r)}function f(e,t){return e<<t|e>>>32-t}var s=e,u=s.lib,c=u.WordArray,h=u.Hasher,d=s.algo,l=c.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),p=c.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),b=c.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),v=c.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),m=c.create([0,1518500249,1859775393,2400959708,2840853838]),g=c.create([1352829926,1548603684,1836072691,2053994217,0]),y=d.RIPEMD160=h.extend({_doReset:function(){this._hash=c.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,t){for(var s=0;s<16;s++){var u=t+s,c=e[u];e[u]=16711935&(c<<8|c>>>24)|4278255360&(c<<24|c>>>8)}var h,d,y,_,w,x,k,S,M,A,E=this._hash.words,I=m.words,T=g.words,B=l.words,R=p.words,P=b.words,O=v.words;x=h=E[0],k=d=E[1],S=y=E[2],M=_=E[3],A=w=E[4];for(var C,s=0;s<80;s+=1)C=h+e[t+B[s]]|0,C+=s<16?r(d,y,_)+I[0]:s<32?n(d,y,_)+I[1]:s<48?i(d,y,_)+I[2]:s<64?a(d,y,_)+I[3]:o(d,y,_)+I[4],C|=0,C=f(C,P[s]),C=C+w|0,h=w,w=_,_=f(y,10),y=d,d=C,C=x+e[t+R[s]]|0,C+=s<16?o(k,S,M)+T[0]:s<32?a(k,S,M)+T[1]:s<48?i(k,S,M)+T[2]:s<64?n(k,S,M)+T[3]:r(k,S,M)+T[4],C|=0,C=f(C,O[s]),C=C+A|0,x=A,A=M,M=f(S,10),S=k,k=C;C=E[1]+y+M|0,E[1]=E[2]+_+A|0,E[2]=E[3]+w+x|0,E[3]=E[4]+h+k|0,E[4]=E[0]+d+S|0,E[0]=C},_doFinalize:function(){var e=this._data,t=e.words,r=8*this._nDataBytes,n=8*e.sigBytes;t[n>>>5]|=128<<24-n%32,t[14+(n+64>>>9<<4)]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8),e.sigBytes=4*(t.length+1),this._process();for(var i=this._hash,a=i.words,o=0;o<5;o++){var f=a[o];a[o]=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8)}return i},clone:function(){var e=h.clone.call(this);return e._hash=this._hash.clone(),e}});s.RIPEMD160=h._createHelper(y),s.HmacRIPEMD160=h._createHmacHelper(y)}(Math),e.RIPEMD160})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(27),r(28))}(0,function(e){return function(){var t=e,r=t.lib,n=r.Base,i=r.WordArray,a=t.algo,o=a.SHA1,f=a.HMAC,s=a.PBKDF2=n.extend({cfg:n.extend({keySize:4,hasher:o,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var r=this.cfg,n=f.create(r.hasher,e),a=i.create(),o=i.create([1]),s=a.words,u=o.words,c=r.keySize,h=r.iterations;s.length<c;){var d=n.update(t).finalize(o);n.reset();for(var l=d.words,p=l.length,b=d,v=1;v<h;v++){b=n.finalize(b),n.reset();for(var m=b.words,g=0;g<p;g++)l[g]^=m[g]}a.concat(d),u[0]++}return a.sigBytes=4*c,a}});t.PBKDF2=function(e,t,r){return s.create(r).compute(e,t)}}(),e.PBKDF2})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.mode.CFB=function(){function t(e,t,r,n){var i=this._iv;if(i){var a=i.slice(0);this._iv=void 0}else var a=this._prevBlock;n.encryptBlock(a,0);for(var o=0;o<r;o++)e[t+o]^=a[o]}var r=e.lib.BlockCipherMode.extend();return r.Encryptor=r.extend({processBlock:function(e,r){var n=this._cipher,i=n.blockSize;t.call(this,e,r,i,n),this._prevBlock=e.slice(r,r+i)}}),r.Decryptor=r.extend({processBlock:function(e,r){var n=this._cipher,i=n.blockSize,a=e.slice(r,r+i);t.call(this,e,r,i,n),this._prevBlock=a}}),r}(),e.mode.CFB})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.mode.CTR=function(){var t=e.lib.BlockCipherMode.extend(),r=t.Encryptor=t.extend({processBlock:function(e,t){var r=this._cipher,n=r.blockSize,i=this._iv,a=this._counter;i&&(a=this._counter=i.slice(0),this._iv=void 0);var o=a.slice(0);r.encryptBlock(o,0),a[n-1]=a[n-1]+1|0;for(var f=0;f<n;f++)e[t+f]^=o[f]}});return t.Decryptor=r,t}(),e.mode.CTR})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
return e.mode.CTRGladman=function(){function t(e){if(255==(e>>24&255)){var t=e>>16&255,r=e>>8&255,n=255&e;255===t?(t=0,255===r?(r=0,255===n?n=0:++n):++r):++t,e=0,e+=t<<16,e+=r<<8,e+=n}else e+=1<<24;return e}function r(e){return 0===(e[0]=t(e[0]))&&(e[1]=t(e[1])),e}var n=e.lib.BlockCipherMode.extend(),i=n.Encryptor=n.extend({processBlock:function(e,t){var n=this._cipher,i=n.blockSize,a=this._iv,o=this._counter;a&&(o=this._counter=a.slice(0),this._iv=void 0),r(o);var f=o.slice(0);n.encryptBlock(f,0);for(var s=0;s<i;s++)e[t+s]^=f[s]}});return n.Decryptor=i,n}(),e.mode.CTRGladman})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.mode.OFB=function(){var t=e.lib.BlockCipherMode.extend(),r=t.Encryptor=t.extend({processBlock:function(e,t){var r=this._cipher,n=r.blockSize,i=this._iv,a=this._keystream;i&&(a=this._keystream=i.slice(0),this._iv=void 0),r.encryptBlock(a,0);for(var o=0;o<n;o++)e[t+o]^=a[o]}});return t.Decryptor=r,t}(),e.mode.OFB})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.mode.ECB=function(){var t=e.lib.BlockCipherMode.extend();return t.Encryptor=t.extend({processBlock:function(e,t){this._cipher.encryptBlock(e,t)}}),t.Decryptor=t.extend({processBlock:function(e,t){this._cipher.decryptBlock(e,t)}}),t}(),e.mode.ECB})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.pad.AnsiX923={pad:function(e,t){var r=e.sigBytes,n=4*t,i=n-r%n,a=r+i-1;e.clamp(),e.words[a>>>2]|=i<<24-a%4*8,e.sigBytes+=i},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},e.pad.Ansix923})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.pad.Iso10126={pad:function(t,r){var n=4*r,i=n-t.sigBytes%n;t.concat(e.lib.WordArray.random(i-1)).concat(e.lib.WordArray.create([i<<24],1))},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},e.pad.Iso10126})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.pad.Iso97971={pad:function(t,r){t.concat(e.lib.WordArray.create([2147483648],1)),e.pad.ZeroPadding.pad(t,r)},unpad:function(t){e.pad.ZeroPadding.unpad(t),t.sigBytes--}},e.pad.Iso97971})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.pad.ZeroPadding={pad:function(e,t){var r=4*t;e.clamp(),e.sigBytes+=r-(e.sigBytes%r||r)},unpad:function(e){for(var t=e.words,r=e.sigBytes-1;!(t[r>>>2]>>>24-r%4*8&255);)r--;e.sigBytes=r+1}},e.pad.ZeroPadding})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return e.pad.NoPadding={pad:function(){},unpad:function(){}},e.pad.NoPadding})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(1))}(0,function(e){return function(t){var r=e,n=r.lib,i=n.CipherParams,a=r.enc,o=a.Hex,f=r.format;f.Hex={stringify:function(e){return e.ciphertext.toString(o)},parse:function(e){var t=o.parse(e);return i.create({ciphertext:t})}}}(),e.format.Hex})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(10),r(11),r(8),r(1))}(0,function(e){return function(){var t=e,r=t.lib,n=r.BlockCipher,i=t.algo,a=[],o=[],f=[],s=[],u=[],c=[],h=[],d=[],l=[],p=[];!function(){for(var e=[],t=0;t<256;t++)e[t]=t<128?t<<1:t<<1^283;for(var r=0,n=0,t=0;t<256;t++){var i=n^n<<1^n<<2^n<<3^n<<4;i=i>>>8^255&i^99,a[r]=i,o[i]=r;var b=e[r],v=e[b],m=e[v],g=257*e[i]^16843008*i;f[r]=g<<24|g>>>8,s[r]=g<<16|g>>>16,u[r]=g<<8|g>>>24,c[r]=g;var g=16843009*m^65537*v^257*b^16843008*r;h[i]=g<<24|g>>>8,d[i]=g<<16|g>>>16,l[i]=g<<8|g>>>24,p[i]=g,r?(r=b^e[e[e[m^b]]],n^=e[e[n]]):r=n=1}}();var b=[0,1,2,4,8,16,32,64,128,27,54],v=i.AES=n.extend({_doReset:function(){if(!this._nRounds||this._keyPriorReset!==this._key){for(var e=this._keyPriorReset=this._key,t=e.words,r=e.sigBytes/4,n=this._nRounds=r+6,i=4*(n+1),o=this._keySchedule=[],f=0;f<i;f++)if(f<r)o[f]=t[f];else{var s=o[f-1];f%r?r>6&&f%r==4&&(s=a[s>>>24]<<24|a[s>>>16&255]<<16|a[s>>>8&255]<<8|a[255&s]):(s=s<<8|s>>>24,s=a[s>>>24]<<24|a[s>>>16&255]<<16|a[s>>>8&255]<<8|a[255&s],s^=b[f/r|0]<<24),o[f]=o[f-r]^s}for(var u=this._invKeySchedule=[],c=0;c<i;c++){var f=i-c;if(c%4)var s=o[f];else var s=o[f-4];u[c]=c<4||f<=4?s:h[a[s>>>24]]^d[a[s>>>16&255]]^l[a[s>>>8&255]]^p[a[255&s]]}}},encryptBlock:function(e,t){this._doCryptBlock(e,t,this._keySchedule,f,s,u,c,a)},decryptBlock:function(e,t){var r=e[t+1];e[t+1]=e[t+3],e[t+3]=r,this._doCryptBlock(e,t,this._invKeySchedule,h,d,l,p,o);var r=e[t+1];e[t+1]=e[t+3],e[t+3]=r},_doCryptBlock:function(e,t,r,n,i,a,o,f){for(var s=this._nRounds,u=e[t]^r[0],c=e[t+1]^r[1],h=e[t+2]^r[2],d=e[t+3]^r[3],l=4,p=1;p<s;p++){var b=n[u>>>24]^i[c>>>16&255]^a[h>>>8&255]^o[255&d]^r[l++],v=n[c>>>24]^i[h>>>16&255]^a[d>>>8&255]^o[255&u]^r[l++],m=n[h>>>24]^i[d>>>16&255]^a[u>>>8&255]^o[255&c]^r[l++],g=n[d>>>24]^i[u>>>16&255]^a[c>>>8&255]^o[255&h]^r[l++];u=b,c=v,h=m,d=g}var b=(f[u>>>24]<<24|f[c>>>16&255]<<16|f[h>>>8&255]<<8|f[255&d])^r[l++],v=(f[c>>>24]<<24|f[h>>>16&255]<<16|f[d>>>8&255]<<8|f[255&u])^r[l++],m=(f[h>>>24]<<24|f[d>>>16&255]<<16|f[u>>>8&255]<<8|f[255&c])^r[l++],g=(f[d>>>24]<<24|f[u>>>16&255]<<16|f[c>>>8&255]<<8|f[255&h])^r[l++];e[t]=b,e[t+1]=v,e[t+2]=m,e[t+3]=g},keySize:8});t.AES=n._createHelper(v)}(),e.AES})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(10),r(11),r(8),r(1))}(0,function(e){return function(){function t(e,t){var r=(this._lBlock>>>e^this._rBlock)&t;this._rBlock^=r,this._lBlock^=r<<e}function r(e,t){var r=(this._rBlock>>>e^this._lBlock)&t;this._lBlock^=r,this._rBlock^=r<<e}var n=e,i=n.lib,a=i.WordArray,o=i.BlockCipher,f=n.algo,s=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],u=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],c=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],h=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],d=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],l=f.DES=o.extend({_doReset:function(){for(var e=this._key,t=e.words,r=[],n=0;n<56;n++){var i=s[n]-1;r[n]=t[i>>>5]>>>31-i%32&1}for(var a=this._subKeys=[],o=0;o<16;o++){for(var f=a[o]=[],h=c[o],n=0;n<24;n++)f[n/6|0]|=r[(u[n]-1+h)%28]<<31-n%6,f[4+(n/6|0)]|=r[28+(u[n+24]-1+h)%28]<<31-n%6;f[0]=f[0]<<1|f[0]>>>31;for(var n=1;n<7;n++)f[n]=f[n]>>>4*(n-1)+3;f[7]=f[7]<<5|f[7]>>>27}for(var d=this._invSubKeys=[],n=0;n<16;n++)d[n]=a[15-n]},encryptBlock:function(e,t){this._doCryptBlock(e,t,this._subKeys)},decryptBlock:function(e,t){this._doCryptBlock(e,t,this._invSubKeys)},_doCryptBlock:function(e,n,i){this._lBlock=e[n],this._rBlock=e[n+1],t.call(this,4,252645135),t.call(this,16,65535),r.call(this,2,858993459),r.call(this,8,16711935),t.call(this,1,1431655765);for(var a=0;a<16;a++){for(var o=i[a],f=this._lBlock,s=this._rBlock,u=0,c=0;c<8;c++)u|=h[c][((s^o[c])&d[c])>>>0];this._lBlock=s,this._rBlock=f^u}var l=this._lBlock;this._lBlock=this._rBlock,this._rBlock=l,t.call(this,1,1431655765),r.call(this,8,16711935),r.call(this,2,858993459),t.call(this,16,65535),t.call(this,4,252645135),e[n]=this._lBlock,e[n+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});n.DES=o._createHelper(l);var p=f.TripleDES=o.extend({_doReset:function(){var e=this._key,t=e.words;this._des1=l.createEncryptor(a.create(t.slice(0,2))),this._des2=l.createEncryptor(a.create(t.slice(2,4))),this._des3=l.createEncryptor(a.create(t.slice(4,6)))},encryptBlock:function(e,t){this._des1.encryptBlock(e,t),this._des2.decryptBlock(e,t),this._des3.encryptBlock(e,t)},decryptBlock:function(e,t){this._des3.decryptBlock(e,t),this._des2.encryptBlock(e,t),this._des1.decryptBlock(e,t)},keySize:6,ivSize:2,blockSize:2});n.TripleDES=o._createHelper(p)}(),e.TripleDES})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(10),r(11),r(8),r(1))}(0,function(e){return function(){function t(){for(var e=this._S,t=this._i,r=this._j,n=0,i=0;i<4;i++){t=(t+1)%256,r=(r+e[t])%256;var a=e[t];e[t]=e[r],e[r]=a,n|=e[(e[t]+e[r])%256]<<24-8*i}return this._i=t,this._j=r,n}var r=e,n=r.lib,i=n.StreamCipher,a=r.algo,o=a.RC4=i.extend({_doReset:function(){for(var e=this._key,t=e.words,r=e.sigBytes,n=this._S=[],i=0;i<256;i++)n[i]=i;for(var i=0,a=0;i<256;i++){var o=i%r,f=t[o>>>2]>>>24-o%4*8&255;a=(a+n[i]+f)%256;var s=n[i];n[i]=n[a],n[a]=s}this._i=this._j=0},_doProcessBlock:function(e,r){e[r]^=t.call(this)},keySize:8,ivSize:0});r.RC4=i._createHelper(o);var f=a.RC4Drop=o.extend({cfg:o.cfg.extend({drop:192}),_doReset:function(){o._doReset.call(this);for(var e=this.cfg.drop;e>0;e--)t.call(this)}});r.RC4Drop=i._createHelper(f)}(),e.RC4})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(10),r(11),r(8),r(1))}(0,function(e){return function(){function t(){for(var e=this._X,t=this._C,r=0;r<8;r++)f[r]=t[r];t[0]=t[0]+1295307597+this._b|0,t[1]=t[1]+3545052371+(t[0]>>>0<f[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<f[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<f[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<f[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<f[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<f[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<f[6]>>>0?1:0)|0,this._b=t[7]>>>0<f[7]>>>0?1:0;for(var r=0;r<8;r++){var n=e[r]+t[r],i=65535&n,a=n>>>16,o=((i*i>>>17)+i*a>>>15)+a*a,u=((4294901760&n)*n|0)+((65535&n)*n|0);s[r]=o^u}e[0]=s[0]+(s[7]<<16|s[7]>>>16)+(s[6]<<16|s[6]>>>16)|0,e[1]=s[1]+(s[0]<<8|s[0]>>>24)+s[7]|0,e[2]=s[2]+(s[1]<<16|s[1]>>>16)+(s[0]<<16|s[0]>>>16)|0,e[3]=s[3]+(s[2]<<8|s[2]>>>24)+s[1]|0,e[4]=s[4]+(s[3]<<16|s[3]>>>16)+(s[2]<<16|s[2]>>>16)|0,e[5]=s[5]+(s[4]<<8|s[4]>>>24)+s[3]|0,e[6]=s[6]+(s[5]<<16|s[5]>>>16)+(s[4]<<16|s[4]>>>16)|0,e[7]=s[7]+(s[6]<<8|s[6]>>>24)+s[5]|0}var r=e,n=r.lib,i=n.StreamCipher,a=r.algo,o=[],f=[],s=[],u=a.Rabbit=i.extend({_doReset:function(){for(var e=this._key.words,r=this.cfg.iv,n=0;n<4;n++)e[n]=16711935&(e[n]<<8|e[n]>>>24)|4278255360&(e[n]<<24|e[n]>>>8);var i=this._X=[e[0],e[3]<<16|e[2]>>>16,e[1],e[0]<<16|e[3]>>>16,e[2],e[1]<<16|e[0]>>>16,e[3],e[2]<<16|e[1]>>>16],a=this._C=[e[2]<<16|e[2]>>>16,4294901760&e[0]|65535&e[1],e[3]<<16|e[3]>>>16,4294901760&e[1]|65535&e[2],e[0]<<16|e[0]>>>16,4294901760&e[2]|65535&e[3],e[1]<<16|e[1]>>>16,4294901760&e[3]|65535&e[0]];this._b=0;for(var n=0;n<4;n++)t.call(this);for(var n=0;n<8;n++)a[n]^=i[n+4&7];if(r){var o=r.words,f=o[0],s=o[1],u=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8),c=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),h=u>>>16|4294901760&c,d=c<<16|65535&u;a[0]^=u,a[1]^=h,a[2]^=c,a[3]^=d,a[4]^=u,a[5]^=h,a[6]^=c,a[7]^=d;for(var n=0;n<4;n++)t.call(this)}},_doProcessBlock:function(e,r){var n=this._X;t.call(this),o[0]=n[0]^n[5]>>>16^n[3]<<16,o[1]=n[2]^n[7]>>>16^n[5]<<16,o[2]=n[4]^n[1]>>>16^n[7]<<16,o[3]=n[6]^n[3]>>>16^n[1]<<16;for(var i=0;i<4;i++)o[i]=16711935&(o[i]<<8|o[i]>>>24)|4278255360&(o[i]<<24|o[i]>>>8),e[r+i]^=o[i]},blockSize:4,ivSize:2});r.Rabbit=i._createHelper(u)}(),e.Rabbit})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(10),r(11),r(8),r(1))}(0,function(e){return function(){function t(){for(var e=this._X,t=this._C,r=0;r<8;r++)f[r]=t[r];t[0]=t[0]+1295307597+this._b|0,t[1]=t[1]+3545052371+(t[0]>>>0<f[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<f[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<f[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<f[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<f[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<f[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<f[6]>>>0?1:0)|0,this._b=t[7]>>>0<f[7]>>>0?1:0;for(var r=0;r<8;r++){var n=e[r]+t[r],i=65535&n,a=n>>>16,o=((i*i>>>17)+i*a>>>15)+a*a,u=((4294901760&n)*n|0)+((65535&n)*n|0);s[r]=o^u}e[0]=s[0]+(s[7]<<16|s[7]>>>16)+(s[6]<<16|s[6]>>>16)|0,e[1]=s[1]+(s[0]<<8|s[0]>>>24)+s[7]|0,e[2]=s[2]+(s[1]<<16|s[1]>>>16)+(s[0]<<16|s[0]>>>16)|0,e[3]=s[3]+(s[2]<<8|s[2]>>>24)+s[1]|0,e[4]=s[4]+(s[3]<<16|s[3]>>>16)+(s[2]<<16|s[2]>>>16)|0,e[5]=s[5]+(s[4]<<8|s[4]>>>24)+s[3]|0,e[6]=s[6]+(s[5]<<16|s[5]>>>16)+(s[4]<<16|s[4]>>>16)|0,e[7]=s[7]+(s[6]<<8|s[6]>>>24)+s[5]|0}var r=e,n=r.lib,i=n.StreamCipher,a=r.algo,o=[],f=[],s=[],u=a.RabbitLegacy=i.extend({_doReset:function(){var e=this._key.words,r=this.cfg.iv,n=this._X=[e[0],e[3]<<16|e[2]>>>16,e[1],e[0]<<16|e[3]>>>16,e[2],e[1]<<16|e[0]>>>16,e[3],e[2]<<16|e[1]>>>16],i=this._C=[e[2]<<16|e[2]>>>16,4294901760&e[0]|65535&e[1],e[3]<<16|e[3]>>>16,4294901760&e[1]|65535&e[2],e[0]<<16|e[0]>>>16,4294901760&e[2]|65535&e[3],e[1]<<16|e[1]>>>16,4294901760&e[3]|65535&e[0]];this._b=0;for(var a=0;a<4;a++)t.call(this);for(var a=0;a<8;a++)i[a]^=n[a+4&7];if(r){var o=r.words,f=o[0],s=o[1],u=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8),c=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),h=u>>>16|4294901760&c,d=c<<16|65535&u;i[0]^=u,i[1]^=h,i[2]^=c,i[3]^=d,i[4]^=u,i[5]^=h,i[6]^=c,i[7]^=d;for(var a=0;a<4;a++)t.call(this)}},_doProcessBlock:function(e,r){var n=this._X;t.call(this),o[0]=n[0]^n[5]>>>16^n[3]<<16,o[1]=n[2]^n[7]>>>16^n[5]<<16,o[2]=n[4]^n[1]>>>16^n[7]<<16,o[3]=n[6]^n[3]>>>16^n[1]<<16;for(var i=0;i<4;i++)o[i]=16711935&(o[i]<<8|o[i]>>>24)|4278255360&(o[i]<<24|o[i]>>>8),e[r+i]^=o[i]},blockSize:4,ivSize:2});r.RabbitLegacy=i._createHelper(u)}(),e.RabbitLegacy})},function(e,t,r){var n,i;!function(a){"use strict";function o(e,t){if(t=t||{type:"Array"},"undefined"!=typeof process&&"number"==typeof process.pid)return f(e,t);if(!window.crypto&&!window.msCrypto)throw new Error("Your browser does not support window.crypto.");return s(e,t)}function f(e,t){var n=r(25),i=n.randomBytes(e);switch(t.type){case"Array":return[].slice.call(i);case"Buffer":return i;case"Uint8Array":for(var a=new Uint8Array(e),o=0;o<e;++o)a[o]=i.readUInt8(o);return a;default:throw new Error(t.type+" is unsupported.")}}function s(e,t){var r=new Uint8Array(e);switch((window.crypto||window.msCrypto).getRandomValues(r),t.type){case"Array":return[].slice.call(r);case"Buffer":try{new Buffer(1)}catch(e){throw new Error("Buffer not supported in this environment. Use Node.js or Browserify for browser support.")}return new Buffer(r);case"Uint8Array":return r;default:throw new Error(t.type+" is unsupported.")}}n=[],void 0!==(i=function(){return o}.apply(t,n))&&(e.exports=i),o.randomArray=function(e){return o(e,{type:"Array"})},o.randomUint8Array=function(e){return o(e,{type:"Uint8Array"})},o.randomBuffer=function(e){return o(e,{type:"Buffer"})}}()},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.decryptWIF=t.encryptWIF=t.decrypt=t.encrypt=t.generateEncryptedWif=t.encryptWifAccount=void 0;var i=r(45),a=n(i),o=r(55),f=n(o),s=r(150),u=n(s),c=r(15),h=r(60),d=n(h),l=r(4),p={cost:16384,blockSize:8,parallel:8,size:64},b=t.encryptWifAccount=function(e,t){return g(e,t).then(function(r){var n=new d.default(e);return n.encryptedWif=r,n.passphrase=t,n})},v=(t.generateEncryptedWif=function(e){var t=(0,c.generatePrivateKey)();return b(t,e)},t.encrypt=function(e,t){var r=new d.default(e),n=(0,o.SHA256)((0,o.SHA256)(o.enc.Latin1.parse(r.address))).toString().slice(0,8),i=u.default.hashSync(Buffer.from(t,"utf8"),Buffer.from(n,"hex"),p).toString("hex"),s=i.slice(0,64),c=i.slice(64),h=(0,l.hexXor)(r.privateKey,s),b=o.AES.encrypt(o.enc.Hex.parse(h),o.enc.Hex.parse(c),{mode:f.default.mode.ECB,padding:f.default.pad.NoPadding}),v="0142e0"+n+b.ciphertext.toString();return a.default.encode(Buffer.from(v,"hex"))}),m=t.decrypt=function(e,t){var r=(0,l.ab2hexstring)(a.default.decode(e)),n=r.substr(6,8),i=r.substr(-64),s=u.default.hashSync(Buffer.from(t,"utf8"),Buffer.from(n,"hex"),p).toString("hex"),c=s.slice(0,64),h=s.slice(64),b={ciphertext:o.enc.Hex.parse(i),salt:""},v=o.AES.decrypt(b,o.enc.Hex.parse(h),{mode:f.default.mode.ECB,padding:f.default.pad.NoPadding}),m=(0,l.hexXor)(v.toString(),c),g=new d.default(m);if(n!==(0,o.SHA256)((0,o.SHA256)(o.enc.Latin1.parse(g.address))).toString().slice(0,8))throw new Error("Wrong Password!");return g.WIF},g=t.encryptWIF=function(e,t){return Promise.resolve(v(e,t))};t.decryptWIF=function(e,t){return Promise.resolve(m(e,t))}},function(e,t,r){e.exports={hash:r(151),hashSync:r(155)}},function(e,t,r){(function(t){var n=r(59),i=r(152).fork,a=r(153),o=r(154).cpus().length,f=f=new a.Pool({name:"scrypt-worker",create:function(e){var r=i(t+"/scrypt-async-worker.js");r.controlledExit=!1,r.on("exit",function(){r.controlledExit||setImmediate(f.destroy.bind(f,r))}),e(r)},destroy:function(e){try{e.controlledExit=!0,e.disconnect()}catch(e){}},max:Math.max(2,o-1),min:0,idleTimeoutMillis:15e3,log:!1});e.exports=function(e,t,r,i){var a=n.apply(null,arguments),o=a.callback||function(){};delete a.callback,a.password=a.password.toString("base64"),a.salt=a.salt.toString("base64");new Date;f.acquire(function(e,t){if(e)return f.release(t),o(e);t.once("message",function(e){new Date;f.release(t),e.error&&o(e.error),o(null,new Buffer(e.data,"base64"))}),t.send(a)})}}).call(t,"/")},function(e,t){e.exports=require("child_process")},function(e,t){var r=function(e){var t,r,n={},i=null;for(e=Math.max(0|+e,1),t=[],r=0;r<e;r+=1)t.push([]);return n.size=function(){var r;if(null===i)for(i=0,r=0;r<e;r+=1)i+=t[r].length;return i},n.enqueue=function(r,n){var a;n=n&&0|+n||0,i=null,n&&(a=n,(n<0||n>=e)&&(n=e-1,console.error("invalid priority: "+a+" must be between 0 and "+n))),t[n].push(r)},n.dequeue=function(e){var r,n=null,a=t.length;for(i=null,r=0;r<a;r+=1)if(t[r].length){n=t[r].shift();break}return n},n};t.Pool=function(e){function t(){var t,r,i,a,o=[],s=(new Date).getTime();for(p=!1,t=0,r=h.length;t<r&&(c||l-e.min>o.length);t+=1)a=h[t].timeout,s>=a&&(m("removeIdle() destroying obj - now:"+s+" timeout:"+a,"verbose"),o.push(h[t].obj));for(t=0,i=o.length;t<i;t+=1)f.destroy(o[t]);r=h.length,r>0?(m("availableObjects.length="+r,"verbose"),n()):m("removeIdle() all objects removed","verbose")}function n(){p||(p=!0,b=setTimeout(t,u))}function i(){var t=null,r=d.size();if(m("dispense() clients="+r+" available="+h.length,"info"),r>0){for(;h.length>0;){if(m("dispense() - reusing obj","verbose"),t=h[0],e.validate(t.obj))return h.shift(),d.dequeue()(null,t.obj);f.destroy(t.obj)}l<e.max&&a()}}function a(){l+=1,m("createResource() - creating obj - count="+l+" min="+e.min+" max="+e.max,"verbose"),e.create(function(){var e,t,r=d.dequeue();arguments.length>1?(e=arguments[0],t=arguments[1]):(e=arguments[0]instanceof Error?arguments[0]:null,t=arguments[0]instanceof Error?null:arguments[0]),e?(l-=1,r&&r(e,t),process.nextTick(function(){i()})):r?r(e,t):f.release(t)})}function o(){var t,r;if(!v&&l<e.min)for(r=e.min-l,t=0;t<r;t++)a()}var f={},s=e.idleTimeoutMillis||3e4,u=e.reapIntervalMillis||1e3,c=!("refreshIdle"in e)||e.refreshIdle,h=[],d=new r(e.priorityRange||1),l=0,p=!1,b=null,v=!1,m=e.log?function(t,r){"function"==typeof e.log?e.log(t,r):console.log(r.toUpperCase()+" pool "+e.name+" - "+t)}:function(){};return e.validate=e.validate||function(){return!0},e.max=parseInt(e.max,10),e.min=parseInt(e.min,10),e.max=Math.max(isNaN(e.max)?1:e.max,1),e.min=Math.min(isNaN(e.min)?0:e.min,e.max-1),f.destroy=function(t){l-=1,h=h.filter(function(e){return e.obj!==t}),e.destroy(t),o()},f.acquire=function(t,r){if(v)throw new Error("pool is draining and cannot accept work");return d.enqueue(t,r),i(),l<e.max},f.borrow=function(e,t){m("borrow() is deprecated. use acquire() instead","warn"),f.acquire(e,t)},f.release=function(e){if(h.some(function(t){return t.obj===e}))return void m("release called twice for the same resource: "+(new Error).stack,"error");var t={obj:e,timeout:(new Date).getTime()+s};h.push(t),m("timeout: "+t.timeout,"verbose"),i(),n()},f.returnToPool=function(e){m("returnToPool() is deprecated. use release() instead","warn"),f.release(e)},f.drain=function(e){m("draining","info"),v=!0;var t=function(){d.size()>0?setTimeout(t,100):h.length!=l?setTimeout(t,100):e&&e()};t()},f.destroyAllNow=function(e){m("force destroying all objects","info");var t=h;h=[];for(var r=t.shift();null!==r&&void 0!==r;)f.destroy(r.obj),r=t.shift();p=!1,clearTimeout(b),e&&e()},f.pooled=function(e,t){return function(){var r=arguments,n=r[r.length-1],i="function"==typeof n;f.acquire(function(t,a){if(t)return void(i&&n(t));var o=[a].concat(Array.prototype.slice.call(r,0,i?-1:void 0));o.push(function(){f.release(a),i&&n.apply(null,arguments)}),e.apply(null,o)},t)}},f.getPoolSize=function(){return l},f.getName=function(){return e.name},f.availableObjectsCount=function(){return h.length},f.waitingClientsCount=function(){return d.size()},o(),f}},function(e,t){e.exports=require("os")},function(e,t,r){var n=r(156),i=r(59);e.exports=function(e,t,r){for(var a=i.apply(null,arguments),o=n(a.options.maxmem),f=Array.prototype.slice.apply(a.password),t=Array.prototype.slice.apply(a.salt),s=o.crypto_scrypt(f,t,a.options.cost,a.options.blockSize,a.options.parallel,a.options.size),u=new Buffer(s.length),c=0;c<s.length;c++)u[c]=s[c];return u}},function(module,exports,__webpack_require__){(function(__dirname,module){module.exports=function(requested_total_memory){function g(e){throw e}function aa(){return function(){}}function ia(e){eval.call(m,e)}function ja(){return u}function ka(e){u=e}function la(e){if(1==ma)return 1;var t={"%i1":1,"%i8":1,"%i16":2,"%i32":4,"%i64":8,"%float":4,"%double":8}["%"+e];return t||("*"==e.charAt(e.length-1)?t=ma:"i"==e[0]&&(e=parseInt(e.substr(1)),w(0==e%8),t=e/8)),t}function na(e,t,r){r&&r.length?(r.splice||(r=Array.prototype.slice.call(r)),r.splice(0,0,t),s["dynCall_"+e].apply(m,r)):s["dynCall_"+e].call(m,t)}function pa(){var e=[],t=0;this.oa=function(r){if(r&=255,t&&(e.push(r),t--),0==e.length)return 128>r?String.fromCharCode(r):(e.push(r),t=191<r&&224>r?1:2,"");if(0<t)return"";var r=e[0],n=e[1],i=e[2],r=191<r&&224>r?String.fromCharCode((31&r)<<6|63&n):String.fromCharCode((15&r)<<12|(63&n)<<6|63&i);return e.length=0,r},this.yb=function(e){for(var e=unescape(encodeURIComponent(e)),t=[],r=0;r<e.length;r++)t.push(e.charCodeAt(r));return t}}function qa(e){var t=u;return u=u+e|0,u=u+7>>3<<3,t}function ra(e){var t=sa;return sa=sa+e|0,sa=sa+7>>3<<3,t}function ua(e){var t=z;return z=z+e|0,z=z+7>>3<<3,z>=va&&wa("Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, or (2) set Module.TOTAL_MEMORY before the program runs."),t}function xa(e,t){return Math.ceil(e/(t||8))*(t||8)}function w(e,t){e||wa("Assertion failed: "+t)}function Ca(a){try{var b=s["_"+a];b||(b=eval("_"+a))}catch(e){}return w(b,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)"),b}function Ba(e,t,r,n){function i(e,t){if("string"==t){if(e===m||e===k||0===e)return 0;a||(a=ja());var r=qa(e.length+1);return Da(e,r),r}return"array"==t?(a||(a=ja()),r=qa(e.length),Ea(e,r),r):e}var a=0,o=0,n=n?n.map(function(e){return i(e,r[o++])}):[];return e=e.apply(m,n),"string"==t?t=Fa(e):(w("array"!=t),t=e),a&&ka(a),t}function Ga(e,t,r){switch(r=r||"i8","*"===r.charAt(r.length-1)&&(r="i32"),r){case"i1":case"i8":A[e]=t;break;case"i16":Ha[e>>1]=t;break;case"i32":B[e>>2]=t;break;case"i64":Aa=[t>>>0,(0|Math.min(+Math.floor(t/4294967296),4294967295))>>>0],B[e>>2]=Aa[0],B[e+4>>2]=Aa[1];break;case"float":Ia[e>>2]=t;break;case"double":Ja[e>>3]=t;break;default:wa("invalid type for setValue: "+r)}}function F(e,t,r,n){var i,a;"number"==typeof e?(i=l,a=e):(i=p,a=e.length);var o="string"==typeof t?t:m,r=r==Na?n:[Oa,qa,ra,ua][r===k?E:r](Math.max(a,o?1:t.length));if(i){for(n=r,w(0==(3&r)),e=r+(-4&a);n<e;n+=4)B[n>>2]=0;for(e=r+a;n<e;)A[0|n++]=0;return r}if("i8"===o)return e.subarray||e.slice?G.set(e,r):G.set(new Uint8Array(e),r),r;for(var f,s,n=0;n<a;){var u=e[n];"function"==typeof u&&(u=ya.fe(u)),i=o||t[n],0===i?n++:("i64"==i&&(i="i32"),Ga(r+n,u,i),s!==i&&(f=la(i),s=i),n+=f)}return r}function Fa(e,t){for(var r,n=p,i=0;;){if(128<=(r=G[e+i|0]))n=l;else if(0==r&&!t)break;if(i++,t&&i==t)break}t||(t=i);var a="";if(!n){for(;0<t;)r=String.fromCharCode.apply(String,G.subarray(e,e+Math.min(t,1024))),a=a?a+r:r,e+=1024,t-=1024;return a}for(n=new pa,i=0;i<t;i++)r=G[e+i|0],a+=n.oa(r);return a}function Va(e){for(;0<e.length;){var t=e.shift();if("function"==typeof t)t();else{var r=t.V;"number"==typeof r?t.ha===k?na("v",r):na("vi",r,[t.ha]):r(t.ha===k?m:t.ha)}}}function bb(e){Wa.unshift(e)}function cb(e){$a.unshift(e)}function J(e,t,r){return e=(new pa).yb(e),r&&(e.length=r),t||e.push(0),e}function Da(e,t,r){for(e=J(e,r),r=0;r<e.length;)A[t+r|0]=e[r],r+=1}function Ea(e,t){for(var r=0;r<e.length;r++)A[t+r|0]=e[r]}function db(e,t){return 0<=e?e:32>=t?2*Math.abs(1<<t-1)+e:Math.pow(2,t)+e}function eb(e,t){if(0>=e)return e;var r=32>=t?Math.abs(1<<t-1):Math.pow(2,t-1);return e>=r&&(32>=t||e>r)&&(e=-2*r+e),e}function ib(e){L++,s.monitorRunDependencies&&s.monitorRunDependencies(L),e?(w(!fb[e]),fb[e]=1):s.P("warning: run dependency added without ID")}function jb(e){L--,s.monitorRunDependencies&&s.monitorRunDependencies(L),e?(w(fb[e]),delete fb[e]):s.P("warning: run dependency removed without ID"),0==L&&(hb!==m&&(clearInterval(hb),hb=m),!gb&&kb&&lb())}function M(e){return B[rb>>2]=e}function vb(e,t,r){var n=O(e,{parent:l}).d,e="/"===e?"/":wb(e)[2],i=xb(n,e);return i&&g(new Q(i)),n.l.Ta||g(new Q(N.L)),n.l.Ta(n,e,t,r)}function yb(e,t){return t=4095&t|32768,vb(e,t,0)}function zb(e,t){return t=1023&t|16384,vb(e,t,0)}function Ab(e,t,r){return vb(e,8192|t,r)}function Bb(e,t){var r=O(t,{parent:l}).d,n="/"===t?"/":wb(t)[2],i=xb(r,n);return i&&g(new Q(i)),r.l.Wa||g(new Q(N.L)),r.l.Wa(r,n,e)}function Cb(e,t){var r;r="string"==typeof e?O(e,{N:l}).d:e,r.l.Y||g(new Q(N.L)),r.l.Y(r,{mode:4095&t|-4096&r.mode,timestamp:Date.now()})}function Db(e,t){var r,n,e=Eb(e);"string"==typeof t?void 0===(n=Fb[t])&&g(Error("Unknown file open mode: "+t)):n=t,t=n,r=512&t?4095&r|32768:0;var i;try{var a=O(e,{N:!(65536&t)});i=a.d,e=a.path}catch(e){}512&t&&(i?2048&t&&g(new Q(N.va)):i=vb(e,r,0)),i||g(new Q(N.ca)),8192==(61440&i.mode)&&(t&=-1025),i?40960==(61440&i.mode)?r=N.ba:16384==(61440&i.mode)&&(0!=(3&t)||1024&t)?r=N.aa:(r=["r","w","rw"][3&t],1024&t&&(r+="w"),r=Gb(i,r)):r=N.ca,r&&g(new Q(r)),1024&t&&(r=i,r="string"==typeof r?O(r,{N:l}).d:r,r.l.Y||g(new Q(N.L)),16384==(61440&r.mode)&&g(new Q(N.aa)),32768!=(61440&r.mode)&&g(new Q(N.A)),(a=Gb(r,"w"))&&g(new Q(a)),r.l.Y(r,{size:0,timestamp:Date.now()}));var o,f={path:e,d:i,M:t,seekable:l,position:0,e:i.e,Gb:[],error:p};e:{for(i=k||4096,r=k||1;r<=i;r++)if(!R[r]){o=r;break e}g(new Q(N.Za))}return f.s=o,Object.defineProperty(f,"object",{get:function(){return f.d},set:function(e){f.d=e}}),Object.defineProperty(f,"isRead",{get:function(){return 1!=(3&f.M)}}),Object.defineProperty(f,"isWrite",{get:function(){return 0!=(3&f.M)}}),Object.defineProperty(f,"isAppend",{get:function(){return 8&f.M}}),R[o]=f,f.e.open&&f.e.open(f),f}function Hb(e){try{e.e.close&&e.e.close(e)}catch(e){g(e)}finally{R[e.s]=m}}function Ib(e,t,r,n,i){(0>n||0>i)&&g(new Q(N.A)),0==(3&e.M)&&g(new Q(N.$)),16384==(61440&e.d.mode)&&g(new Q(N.aa)),e.e.write||g(new Q(N.A));var a=l;return void 0===i?(i=e.position,a=p):e.seekable||g(new Q(N.da)),8&e.M&&((!e.seekable||!e.e.na)&&g(new Q(N.da)),e.e.na(e,0,2)),t=e.e.write(e,t,r,n,i),a||(e.position+=t),t}function wb(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)}function Jb(e,t){for(var r=0,n=e.length-1;0<=n;n--){var i=e[n];"."===i?e.splice(n,1):".."===i?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}if(t)for(;r--;r)e.unshift("..");return e}function Eb(e){var t="/"===e.charAt(0),r="/"===e.substr(-1),e=Jb(e.split("/").filter(function(e){return!!e}),!t).join("/");return!e&&!t&&(e="."),e&&r&&(e+="/"),(t?"/":"")+e}function S(){return Eb(Array.prototype.slice.call(arguments,0).filter(function(e){return"string"!=typeof e&&g(new TypeError("Arguments to path.join must be strings")),e}).join("/"))}function Kb(){for(var e="",t=p,r=arguments.length-1;-1<=r&&!t;r--){var n=0<=r?arguments[r]:"/";"string"!=typeof n&&g(new TypeError("Arguments to path.resolve must be strings")),n&&(e=n+"/"+e,t="/"===n.charAt(0))}return e=Jb(e.split("/").filter(function(e){return!!e}),!t).join("/"),(t?"/":"")+e||"."}function Mb(e,t){Lb[e]={input:[],H:[],O:t},Nb[e]={e:Ob}}function Q(e){this.mb=e;for(var t in N)if(N[t]===e){this.code=t;break}this.message=ub[e]}function Zb(e){e instanceof Q||g(e+" : "+Error().stack),M(e.mb)}function $b(e,t){for(var r=0,n=0;n<t.length;n++)r=(r<<5)-r+t.charCodeAt(n)|0;return(e+r)%Xb.length}function Sb(e,t){var r=Gb(e,"x");for(r&&g(new Q(r)),r=Xb[$b(e.id,t)];r;r=r.wb)if(r.parent.id===e.id&&r.name===t)return r;return e.l.tb(e,t)}function Qb(e,t,r,n){var i={id:Wb++,name:t,mode:r,l:{},e:{},X:n,parent:m,z:m};return e||(e=i),i.parent=e,i.z=e.z,Object.defineProperty(i,"read",{get:function(){return 365==(365&i.mode)},set:function(e){e?i.mode|=365:i.mode&=-366}}),Object.defineProperty(i,"write",{get:function(){return 146==(146&i.mode)},set:function(e){e?i.mode|=146:i.mode&=-147}}),e=$b(i.parent.id,i.name),i.wb=Xb[e],Xb[e]=i}function O(e,t){e=Kb("/",e),t=t||{pa:0},8<t.pa&&g(new Q(N.ba));for(var r=Jb(e.split("/").filter(function(e){return!!e}),p),n=Vb,i="/",a=0;a<r.length;a++){var o=a===r.length-1;if(o&&t.parent)break;if(n=Sb(n,r[a]),i=S(i,r[a]),n.ub&&(n=n.z.root),!o||t.N)for(o=0;40960==(61440&n.mode);){n=O(i,{N:p}).d,n.l.Va||g(new Q(N.A));var n=n.l.Va(n),f=Kb,s=wb(i),i=s[0],s=s[1];i||s?(s&&(s=s.substr(0,s.length-1)),i+=s):i=".",i=f(i,n),n=O(i,{pa:t.pa}).d,40<o++&&g(new Q(N.ba))}}return{path:i,d:n}}function ac(e){for(var t;;){if(e===e.parent)return t?S(e.z.Ua,t):e.z.Ua;t=t?S(e.name,t):e.name,e=e.parent}}function Gb(e,t){return Yb?0:(-1===t.indexOf("r")||292&e.mode)&&(-1===t.indexOf("w")||146&e.mode)&&(-1===t.indexOf("x")||73&e.mode)?0:N.Ya}function xb(e,t){try{return Sb(e,t),N.va}catch(e){}return Gb(e,"wx")}function cc(e,t){var r=0;return e&&(r|=365),t&&(r|=146),r}function dc(e,t,r,n,i){if(e=S("string"==typeof e?e:ac(e),t),n=cc(n,i),i=yb(e,n),r){if("string"==typeof r){for(var t=Array(r.length),a=0,o=r.length;a<o;++a)t[a]=r.charCodeAt(a);r=t}Cb(e,146|n),t=Db(e,"w"),Ib(t,r,0,r.length,0),Hb(t),Cb(e,n)}return i}function ec(e,t,r,n){return e=S("string"==typeof e?e:ac(e),t),ec.Sa||(ec.Sa=64),t=ec.Sa++<<8|0,Nb[t]={e:{open:function(e){e.seekable=p},close:function(){n&&n.buffer&&n.buffer.length&&n(10)},Q:function(e,t,n,i){for(var a=0,o=0;o<i;o++){var f;try{f=r()}catch(e){g(new Q(N.I))}if(f===k&&0===a&&g(new Q(N.ua)),f===m||f===k)break;a++,t[n+o]=f}return a&&(e.d.timestamp=Date.now()),a},write:function(e,t,r,i){for(var a=0;a<i;a++)try{n(t[r+a])}catch(e){g(new Q(N.I))}return i&&(e.d.timestamp=Date.now()),a}}},Ab(e,r&&n?511:r?219:365,t)}function fc(e,t,r){return(e=R[e])?(e.sender(G.subarray(t,t+r)),r):-1}function gc(e,t,r){var n=R[e];if(!n)return M(N.$),-1;if(n&&"socket"in n)return fc(e,t,r);try{return Ib(n,A,t,r)}catch(e){return Zb(e),-1}}function hc(e,t,r,n){return 0==(r*=t)?0:(e=gc(n,e,r),-1==e?((t=R[n])&&(t.error=l),0):Math.floor(e/t))}function jc(e){return 0>e||0===e&&-1/0==1/e}function kc(e,t){function r(e){var r;return"double"===e?r=Ja[t+o>>3]:"i64"==e?(r=[B[t+o>>2],B[t+(o+8)>>2]],o+=8):(e="i32",r=B[t+o>>2]),o+=Math.max(Math.max(la(e),ma),8),r}for(var n,i,a=e,o=0,f=[];;){var s=a;if(0===(n=A[a]))break;if(i=A[a+1|0],37==n){var u=p,c=p,h=p,d=p;e:for(;;){switch(i){case 43:u=l;break;case 45:c=l;break;case 35:h=l;break;case 48:if(d)break e;d=l;break;default:break e}a++,i=A[a+1|0]}var b=0;if(42==i)b=r("i32"),a++,i=A[a+1|0];else for(;48<=i&&57>=i;)b=10*b+(i-48),a++,i=A[a+1|0];var v=p;if(46==i){var g=0,v=l;if(a++,42==(i=A[a+1|0]))g=r("i32"),a++;else for(;!(48>(i=A[a+1|0])||57<i);)g=10*g+(i-48),a++;i=A[a+1|0]}else g=6;var y;switch(String.fromCharCode(i)){case"h":i=A[a+2|0],104==i?(a++,y=1):y=2;break;case"l":i=A[a+2|0],108==i?(a++,y=8):y=4;break;case"L":case"q":case"j":y=8;break;case"z":case"t":case"I":y=4;break;default:y=m}switch(y&&a++,i=A[a+1|0],String.fromCharCode(i)){case"d":case"i":case"u":case"o":case"x":case"X":case"p":s=100==i||105==i,y=y||4;var _,w=n=r("i"+8*y);8==y&&(n=117==i?+(n[0]>>>0)+4294967296*+(n[1]>>>0):+(n[0]>>>0)+4294967296*+(0|n[1])),4>=y&&(n=(s?eb:db)(n&Math.pow(256,y)-1,8*y));var x=Math.abs(n),s="";if(100==i||105==i)_=8==y&&lc?lc.stringify(w[0],w[1],m):eb(n,8*y).toString(10);else if(117==i)_=8==y&&lc?lc.stringify(w[0],w[1],l):db(n,8*y).toString(10),n=Math.abs(n);else if(111==i)_=(h?"0":"")+x.toString(8);else if(120==i||88==i){if(s=h&&0!=n?"0x":"",8==y&&lc)if(w[1]){for(_=(w[1]>>>0).toString(16),h=(w[0]>>>0).toString(16);8>h.length;)h="0"+h;_+=h}else _=(w[0]>>>0).toString(16);else if(0>n){for(n=-n,_=(x-1).toString(16),w=[],h=0;h<_.length;h++)w.push((15-parseInt(_[h],16)).toString(16));for(_=w.join("");_.length<2*y;)_="f"+_}else _=x.toString(16);88==i&&(s=s.toUpperCase(),_=_.toUpperCase())}else 112==i&&(0===x?_="(nil)":(s="0x",_=x.toString(16)));if(v)for(;_.length<g;)_="0"+_;for(u&&(s=0>n?"-"+s:"+"+s);s.length+_.length<b;)c?_+=" ":d?_="0"+_:s=" "+s;_=s+_,_.split("").forEach(function(e){f.push(e.charCodeAt(0))});break;case"f":case"F":case"e":case"E":case"g":case"G":if(n=r("double"),isNaN(n))_="nan",d=p;else if(isFinite(n)){if(v=p,y=Math.min(g,20),103!=i&&71!=i||(v=l,g=g||1,y=parseInt(n.toExponential(y).split("e")[1],10),g>y&&-4<=y?(i=(103==i?"f":"F").charCodeAt(0),g-=y+1):(i=(103==i?"e":"E").charCodeAt(0),g--),y=Math.min(g,20)),101==i||69==i?(_=n.toExponential(y),/[eE][-+]\d$/.test(_)&&(_=_.slice(0,-1)+"0"+_.slice(-1))):102!=i&&70!=i||(_=n.toFixed(y),0===n&&jc(n)&&(_="-"+_)),s=_.split("e"),v&&!h)for(;1<s[0].length&&-1!=s[0].indexOf(".")&&("0"==s[0].slice(-1)||"."==s[0].slice(-1));)s[0]=s[0].slice(0,-1);else for(h&&-1==_.indexOf(".")&&(s[0]+=".");g>y++;)s[0]+="0";_=s[0]+(1<s.length?"e"+s[1]:""),69==i&&(_=_.toUpperCase()),u&&0<=n&&(_="+"+_)}else _=(0>n?"-":"")+"inf",d=p;for(;_.length<b;)_=c?_+" ":!d||"-"!=_[0]&&"+"!=_[0]?(d?"0":" ")+_:_[0]+"0"+_.slice(1);97>i&&(_=_.toUpperCase()),_.split("").forEach(function(e){f.push(e.charCodeAt(0))});break;case"s":if(d=(u=r("i8*"))?ic(u):6,v&&(d=Math.min(d,g)),!c)for(;d<b--;)f.push(32);if(u)for(h=0;h<d;h++)f.push(G[0|u++]);else f=f.concat(J("(null)".substr(0,d),l));if(c)for(;d<b--;)f.push(32);break;case"c":for(c&&f.push(r("i8"));0<--b;)f.push(32);c||f.push(r("i8"));break;case"n":c=r("i32*"),B[c>>2]=f.length;break;case"%":f.push(n);break;default:for(h=s;h<a+2;h++)f.push(A[h])}a+=2}else f.push(n),a+=1}return f}function mc(e,t,r){return r=kc(t,r),t=ja(),e=hc(F(r,"i8",La),1,r.length,e),ka(t),e}function nc(e){nc.ia||(z=z+4095>>12<<12,nc.ia=l,w(ua),nc.hb=ua,ua=function(){wa("cannot dynamically allocate, sbrk now has control")});var t=z;return 0!=e&&nc.hb(e),t}function U(){return B[U.m>>2]}function oc(){return!!oc.ta}function pc(e){var t=p;try{e==__ZTIi&&(t=l)}catch(e){}try{e==__ZTIj&&(t=l)}catch(e){}try{e==__ZTIl&&(t=l)}catch(e){}try{e==__ZTIm&&(t=l)}catch(e){}try{e==__ZTIx&&(t=l)}catch(e){}try{e==__ZTIy&&(t=l)}catch(e){}try{e==__ZTIf&&(t=l)}catch(e){}try{e==__ZTId&&(t=l)}catch(e){}try{e==__ZTIe&&(t=l)}catch(e){}try{e==__ZTIc&&(t=l)}catch(e){}try{e==__ZTIa&&(t=l)}catch(e){}try{e==__ZTIh&&(t=l)}catch(e){}try{e==__ZTIs&&(t=l)}catch(e){}try{e==__ZTIt&&(t=l)}catch(e){}return t}function qc(e,t,r){if(0==r)return p;if(0==t||t==e)return l;switch(pc(t)?t:B[B[t>>2]-8>>2]){case 0:return 0==B[B[e>>2]-8>>2]?qc(B[e+8>>2],B[t+8>>2],r):p;case 1:return p;case 2:return qc(e,B[t+8>>2],r);default:return p}}function rc(e,t,r){if(!rc.sb){try{B[__ZTVN10__cxxabiv119__pointer_type_infoE>>2]=0}catch(e){}try{B[pb>>2]=1}catch(e){}try{B[ob>>2]=2}catch(e){}rc.sb=l}B[U.m>>2]=e,B[U.m+4>>2]=t,B[U.m+8>>2]=r,"uncaught_exception"in oc?oc.ta++:oc.ta=1,g(e+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")}function sc(e){try{return tc(e)}catch(e){}}function uc(){if(uc.Bb)uc.Bb=p;else{V.setThrew(0),B[U.m+4>>2]=0;var e=B[U.m>>2],t=B[U.m+8>>2];t&&(na("vi",t,[e]),B[U.m+8>>2]=0),e&&(sc(e),B[U.m>>2]=0)}}function wc(e){var t,r;wc.ia?(r=B[vc>>2],t=B[r>>2]):(wc.ia=l,W.USER="root",W.PATH="/",W.PWD="/",W.HOME="/home/emscripten",W.LANG="en_US.UTF-8",W._="./this.program",t=F(1024,"i8",E),r=F(256,"i8*",E),B[r>>2]=t,B[vc>>2]=r);var n,i=[],a=0;for(n in e)if("string"==typeof e[n]){var o=n+"="+e[n];i.push(o),a+=o.length}for(1024<a&&g(Error("Environment size exceeded TOTAL_ENV_SIZE!")),e=0;e<i.length;e++){for(o=i[e],a=0;a<o.length;a++)A[t+a|0]=o.charCodeAt(a);A[t+a|0]=0,B[r+4*e>>2]=t,t+=o.length+1}B[r+4*i.length>>2]=0}function xc(e){return 0===e?0:(e=Fa(e),W.hasOwnProperty(e)?(xc.J&&tc(xc.J),xc.J=F(J(W[e]),"i8",Ka),xc.J):0)}function yc(e,t,r){if(e in ub){if(ub[e].length>r-1)return M(N.ab);for(e=ub[e],r=0;r<e.length;r++)A[t+r|0]=e.charCodeAt(r);return A[t+r|0]=0}return M(N.A)}function zc(e){return zc.buffer||(zc.buffer=Oa(256)),yc(e,zc.buffer,256),zc.buffer}function Ac(e){s.exit(e)}function Bc(e,t){var r=db(255&e);return A[0|Bc.J]=r,-1==gc(t,Bc.J,1)?((r=R[t])&&(r.error=l),-1):r}function Ic(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[e.substr(e.lastIndexOf(".")+1)]}function Kc(){var e=s.canvas;Jc.forEach(function(t){t(e.width,e.height)})}function Lc(){var e=s.canvas;this.Ib=e.width,this.Hb=e.height,e.width=screen.width,e.height=screen.height,"undefined"!=typeof SDL&&(e=Qa[SDL.screen+0*ma>>2],B[SDL.screen+0*ma>>2]=8388608|e),Kc()}function Mc(){var e=s.canvas;e.width=this.Ib,e.height=this.Hb,"undefined"!=typeof SDL&&(e=Qa[SDL.screen+0*ma>>2],B[SDL.screen+0*ma>>2]=-8388609&e),Kc()}function X(e,t){e!=m&&("number"==typeof e?this.p(e):t==m&&"string"!=typeof e?this.k(e,256):this.k(e,t))}function Yc(){return new X(m)}function Zc(e,t){var r=$c[e.charCodeAt(t)];return r==m?-1:r}function ad(e){var t=Yc();return t.D(e),t}function Y(e,t){this.h=0|e,this.j=0|t}function lb(e){function t(){if(ab||(ab=l,Va(Xa)),Va(Ya),gb=l,s._main&&kb&&s.callMain(e),s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)cb(s.postRun.shift());Va($a)}if(e=e||s.arguments,0<L)s.P("run() called, but dependencies remain, so not running");else{if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)bb(s.preRun.shift());Va(Wa),0<L||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),za||t()},1)):t())}}function ed(e){za=l,u=cd,Va(Za),dd&&g({type:"ExitStatus",value:e})}function wa(e){e&&s.print(e),za=l,g("abort() at "+Error().stack)}var Module={TOTAL_MEMORY:requested_total_memory||33554432},scrypt_raw=Module,k=void 0,l=!0,m=null,p=!1,q,s;s||(s=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var ba={},t;for(t in s)s.hasOwnProperty(t)&&(ba[t]=s[t]);var ca="object"==typeof process&&!0,da="object"==typeof window,ea="function"==typeof importScripts,fa=!da&&!ca&&!ea;if(ca){s.print=function(e){process.stdout.write(e+"\n")},s.printErr=function(e){process.stderr.write(e+"\n")};var ga=__webpack_require__(42),ha=__webpack_require__(157);s.read=function(e,t){var e=ha.normalize(e),r=ga.readFileSync(e);return!r&&e!=ha.resolve(e)&&(e=path.join(__dirname,"..","src",e),r=ga.readFileSync(e)),r&&!t&&(r=r.toString()),r},s.readBinary=function(e){return s.read(e,l)},s.load=function(e){ia(read(e))},s.arguments=process.argv.slice(2),module.ee=s}else fa?(s.print=print,"undefined"!=typeof printErr&&(s.printErr=printErr),s.read=read,s.readBinary=function(e){return read(e,"binary")},"undefined"!=typeof scriptArgs?s.arguments=scriptArgs:void 0!==arguments&&(s.arguments=arguments),this.Module=s):da||ea?(s.read=function(e){var t=new XMLHttpRequest;return t.open("GET",e,p),t.send(m),t.responseText},void 0!==arguments&&(s.arguments=arguments),da?(s.print=function(e){console.log(e)},s.printErr=function(e){console.log(e)},this.Module=s):ea&&(s.print=aa(),s.load=importScripts)):g("Unknown runtime environment. Where are we?");"undefined"==!s.load&&s.read&&(s.load=function(e){ia(s.read(e))}),s.print||(s.print=aa()),s.printErr||(s.printErr=s.print),s.arguments||(s.arguments=[]),s.print=s.print,s.P=s.printErr,s.preRun=[],s.postRun=[];for(t in ba)ba.hasOwnProperty(t)&&(s[t]=ba[t]);var oa,ma=4,ya={},za=p,Aa;s.ccall=function(e,t,r,n){return Ba(Ca(e),t,r,n)},s.cwrap=function(e,t,r){var n=Ca(e);return function(){return Ba(n,t,r,Array.prototype.slice.call(arguments))}},s.setValue=Ga,s.getValue=function(e,t){switch(t=t||"i8","*"===t.charAt(t.length-1)&&(t="i32"),t){case"i1":case"i8":return A[e];case"i16":return Ha[e>>1];case"i32":case"i64":return B[e>>2];case"float":return Ia[e>>2];case"double":return Ja[e>>3];default:wa("invalid type for setValue: "+t)}return m};var Ka=0,La=1,E=2,Na=4;s.ALLOC_NORMAL=Ka,s.ALLOC_STACK=La,s.ALLOC_STATIC=E,s.ALLOC_DYNAMIC=3,s.ALLOC_NONE=Na,s.allocate=F,s.Pointer_stringify=Fa;var A,G,Ha,Pa,B,Qa,Ia,Ja,Ra=0,sa=0,Sa=0,u=0,Ta=0,Ua=0,z=0,va=s.TOTAL_MEMORY||33554432;w(!!(Int32Array&&Float64Array&&new Int32Array(1).subarray&&new Int32Array(1).set),"Cannot fallback to non-typed array case: Code is too specialized");var I=new ArrayBuffer(va);A=new Int8Array(I),Ha=new Int16Array(I),B=new Int32Array(I),G=new Uint8Array(I),Pa=new Uint16Array(I),Qa=new Uint32Array(I),Ia=new Float32Array(I),Ja=new Float64Array(I),B[0]=255,w(255===G[0]&&0===G[3],"Typed arrays 2 must be run on a little-endian system"),s.HEAP=k,s.HEAP8=A,s.HEAP16=Ha,s.HEAP32=B,s.HEAPU8=G,s.HEAPU16=Pa,s.HEAPU32=Qa,s.HEAPF32=Ia,s.HEAPF64=Ja;var Wa=[],Xa=[],Ya=[],Za=[],$a=[],ab=p;s.addOnPreRun=s.Vd=bb,s.addOnInit=s.Sd=function(e){Xa.unshift(e)},s.addOnPreMain=s.Ud=function(e){Ya.unshift(e)},s.addOnExit=s.Rd=function(e){Za.unshift(e)},s.addOnPostRun=s.Td=cb,s.intArrayFromString=J,s.intArrayToString=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];255<n&&(n&=255),t.push(String.fromCharCode(n))}return t.join("")},s.writeStringToMemory=Da,s.writeArrayToMemory=Ea,Math.imul||(Math.imul=function(e,t){var r=65535&e,n=65535&t;return r*n+((e>>>16)*n+r*(t>>>16)<<16)|0}),Math.ie=Math.imul;var L=0,fb={},gb=p,hb=m;s.addRunDependency=ib,s.removeRunDependency=jb,s.preloadedImages={},s.preloadedAudios={},Ra=8,sa=Ra+1312,Xa.push({V:function(){mb()}});var nb,ob,pb;nb=nb=F([0,0,0,0,0,0,0,0],"i8",E),ob=ob=F([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",E),pb=pb=F([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",E),F([111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,115,0,0,0,0,0,0,0,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,99,0,0,0,0,0,0,0,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,56,3,0,0,0,0,0,0,63,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,0,0,0,0,111,112,116,105,111,110,32,100,111,101,115,110,39,116,32,116,97,107,101,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,46,42,115,0,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,45,45,32,37,115,0,0,0,0,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,45,45,32,37,99,0,0,0,0,255,255,255,255,0,0,0,0,97,109,98,105,103,117,111,117,115,32,111,112,116,105,111,110,32,45,45,32,37,46,42,115,0,0,0,0,0,0,0,0,37,115,58,32,0,0,0,0,80,79,83,73,88,76,89,95,67,79,82,82,69,67,84,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,37,115,58,32,0,0,0,0,37,115,10,0,0,0,0,0,37,115,10,0,0,0,0,0,105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0,0,0,0,0,0,0,37,115,58,32,0,0,0,0,37,115,58,32,0,0,0,0,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0,0,0,0,58,32,0,0,0,0,0,0,58,32,0,0,0,0,0,0,115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0,0,0,0,0,0,0,109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0,0,0,0,0,0,0,0,0,0,0,176,2,0,0,6,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,2,0,0,6,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0,0,0,0,0,0,0,0,0,0,0,0,104,2,0,0,0,0,0,0,120,2,0,0,168,2,0,0,0,0,0,0,0,0,0,0,136,2,0,0,176,2,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",Na,8);var qb=xa(F(12,"i8",E),8);w(0==qb%8);var rb=0;s._memcpy=sb,s._memset=tb;var N={L:1,ca:2,Bd:3,sc:4,I:5,za:6,Jb:7,Sc:8,$:9,Zb:10,ua:11,Ld:11,$a:12,Ya:13,kc:14,ed:15,Wb:16,va:17,Md:18,wa:19,gd:20,aa:21,A:22,Mc:23,Za:24,ld:25,Id:26,lc:27,ad:28,da:29,yd:30,Fc:31,rd:32,hc:33,ab:34,Wc:35,pc:36,$b:37,vc:38,wc:39,xc:40,Ec:41,Jd:42,Qc:43,uc:44,ec:45,Tc:46,Pb:50,Sb:51,Nd:52,Oc:53,Tb:54,Ub:55,fc:56,Vb:57,cd:60,Rc:61,Fd:62,bd:63,Xc:64,Yc:65,xd:66,Uc:67,Mb:68,Cd:69,ac:70,td:71,Hc:74,yc:75,ic:76,Rb:77,mc:79,md:80,Qb:81,wd:82,zc:83,Ac:84,Dc:85,Cc:86,Bc:87,dd:88,Nc:89,ya:90,Ic:91,ba:92,nd:95,qd:96,dc:104,Pc:105,Nb:106,vd:107,jd:108,Zc:109,zd:110,cc:111,Kb:112,bc:113,Lc:114,Jc:115,Gd:116,nc:117,oc:118,rc:119,Ob:120,gc:121,Gc:122,ud:123,Ad:124,Lb:125,Kc:126,tc:127,fd:128,Hd:129,sd:130,Kd:131,jc:132,Dd:133,kd:134,Vc:135,$c:136,Yb:137,qc:138,od:139,Xb:140,hd:141,pd:142,Ed:143},ub={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"No message of desired type",36:"Identifier removed",37:"Channel number out of range",38:"Level 2 not synchronized",39:"Level 3 halted",40:"Level 3 reset",41:"Link number out of range",42:"Protocol driver not attached",43:"No CSI structure available",44:"Level 2 halted",45:"Deadlock condition",46:"No record locks available",50:"Invalid exchange",51:"Invalid request descriptor",52:"Exchange full",53:"No anode",54:"Invalid request code",55:"Invalid slot",56:"File locking deadlock error",57:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",74:"Multihop attempted",75:"Inode is remote (not really error)",76:"Cross mount point (not really error)",77:"Trying to read unreadable message",79:"Inappropriate file type or format",80:"Given log. name not unique",81:"f.d. invalid for this operation",82:"Remote address changed",83:"Can\t access a needed shared lib",84:"Accessing a corrupted shared lib",85:".lib section in a.out corrupted",86:"Attempting to link in too many libs",87:"Attempting to exec a shared library",88:"Function not implemented",89:"No more files",90:"Directory not empty",91:"File or path name too long",92:"Too many symbolic links",95:"Operation not supported on transport endpoint",96:"Protocol family not supported",104:"Connection reset by peer",105:"No buffer space available",106:"Address family not supported by protocol family",107:"Protocol wrong type for socket",108:"Socket operation on non-socket",109:"Protocol not available",110:"Can't send after socket shutdown",111:"Connection refused",112:"Address already in use",113:"Connection aborted",114:"Network is unreachable",115:"Network interface is not configured",116:"Connection timed out",117:"Host is down",118:"Host is unreachable",119:"Connection already in progress",120:"Socket already connected",121:"Destination address required",122:"Message too long",123:"Unknown protocol",124:"Socket type not supported",125:"Address not available",126:"ENETRESET",127:"Socket is already connected",128:"Socket is not connected",129:"TOOMANYREFS",130:"EPROCLIM",131:"EUSERS",132:"EDQUOT",133:"ESTALE",134:"Not supported",135:"No medium (in tape drive)",136:"No such host or network path",137:"Filename exists with different case",138:"EILSEQ",139:"Value too large for defined data type",140:"Operation canceled",141:"State not recoverable",142:"Previous owner died",143:"Streams pipe error"},Lb=[],Ob={open:function(e){Pb||(Pb=new pa);var t=Lb[e.d.X];t||g(new Q(N.wa)),e.q=t,e.seekable=p},close:function(e){e.q.H.length&&e.q.O.W(e.q,10)},Q:function(e,t,r,n){(!e.q||!e.q.O.Na)&&g(new Q(N.za));for(var i=0,a=0;a<n;a++){var o;try{o=e.q.O.Na(e.q)}catch(e){g(new Q(N.I))}if(o===k&&0===i&&g(new Q(N.ua)),o===m||o===k)break;i++,t[r+a]=o}return i&&(e.d.timestamp=Date.now()),i},write:function(e,t,r,n){(!e.q||!e.q.O.W)&&g(new Q(N.za));for(var i=0;i<n;i++)try{e.q.O.W(e.q,t[r+i])}catch(e){g(new Q(N.I))}return n&&(e.d.timestamp=Date.now()),i}},Pb,T={z:function(){return T.ka(m,"/",16895,0)},ka:function(e,t,r,n){return(24576==(61440&r)||4096==(61440&r))&&g(new Q(N.L)),r=Qb(e,t,r,n),r.l=T.l,16384==(61440&r.mode)?(r.e=T.e,r.g={}):32768==(61440&r.mode)?(r.e=T.e,r.g=[]):40960==(61440&r.mode)?r.e=T.e:8192==(61440&r.mode)&&(r.e=Rb),r.timestamp=Date.now(),e&&(e.g[t]=r),r},l:{ge:function(e){var t={};return t.ce=8192==(61440&e.mode)?e.id:1,t.je=e.id,t.mode=e.mode,t.pe=1,t.uid=0,t.he=0,t.X=e.X,t.size=16384==(61440&e.mode)?4096:32768==(61440&e.mode)?e.g.length:40960==(61440&e.mode)?e.link.length:0,t.Yd=new Date(e.timestamp),t.oe=new Date(e.timestamp),t.ae=new Date(e.timestamp),t.ib=4096,t.Zd=Math.ceil(t.size/t.ib),t},Y:function(e,t){if(t.mode!==k&&(e.mode=t.mode),t.timestamp!==k&&(e.timestamp=t.timestamp),t.size!==k){var r=e.g;if(t.size<r.length)r.length=t.size;else for(;t.size>r.length;)r.push(0)}},tb:function(){g(new Q(N.ca))},Ta:function(e,t,r,n){return T.ka(e,t,r,n)},rename:function(e,t,r){if(16384==(61440&e.mode)){var n;try{n=Sb(t,r)}catch(e){}if(n)for(var i in n.g)g(new Q(N.ya))}delete e.parent.g[e.name],e.name=r,t.g[r]=e},ze:function(e,t){delete e.g[t]},ve:function(e,t){var r,n=Sb(e,t);for(r in n.g)g(new Q(N.ya));delete e.g[t]},Wa:function(e,t,r){return e=T.ka(e,t,41471,0),e.link=r,e},Va:function(e){return 40960!=(61440&e.mode)&&g(new Q(N.A)),e.link}},e:{open:function(e){if(16384==(61440&e.d.mode)){var t,r=[".",".."];for(t in e.d.g)e.d.g.hasOwnProperty(t)&&r.push(t);e.lb=r}},Q:function(e,t,r,n,i){if(e=e.d.g,n=Math.min(e.length-i,n),e.subarray)t.set(e.subarray(i,i+n),r);else for(var a=0;a<n;a++)t[r+a]=e[i+a];return n},write:function(e,t,r,n,i){for(var a=e.d.g;a.length<i;)a.push(0);for(var o=0;o<n;o++)a[i+o]=t[r+o];return e.d.timestamp=Date.now(),n},na:function(e,t,r){return 1===r?t+=e.position:2===r&&32768==(61440&e.d.mode)&&(t+=e.d.g.length),0>t&&g(new Q(N.A)),e.Gb=[],e.position=t},ue:function(e){return e.lb},Wd:function(e,t,r){for(e=e.d.g,t+=r;t>e.length;)e.push(0)},ne:function(e,t,r,n,i,a,o){return 32768!=(61440&e.d.mode)&&g(new Q(N.wa)),e=e.d.g,2&o?((0<i||i+n<e.length)&&(e=e.subarray?e.subarray(i,i+n):Array.prototype.slice.call(e,i,i+n)),i=l,(n=Oa(n))||g(new Q(N.$a)),t.set(e,n)):(w(e.buffer===t||e.buffer===t.buffer),i=p,n=e.byteOffset),{te:n,Xd:i}}}},Tb=F(1,"i32*",E),Ub=F(1,"i32*",E);nb=F(1,"i32*",E);var Vb=m,Nb=[m],R=[m],Wb=1,Xbb=l,Fb={r:0,rs:8192,"r+":2,w:1537,wx:3585,xw:3585,"w+":1538,"wx+":3586,"xw+":3586,a:521,ax:2569,xa:2569,"a+":522,"ax+":2570,"xa+":2570},Rb={open:function(e){e.e=Nb[e.d.X].e,e.e.open&&e.e.open(e)},na:function(){g(new Q(N.da))}},bc;s._strlen=ic;var vc=F(1,"i32*",E),W={},Cc=p,Dc=p,Ec=p,Fc=p,Gc=k,Hc=k,Jc=[],Nc,Oc,Pc,Qc,rb=ra(4);B[rb>>2]=0;var Vb=Qb(m,"/",16895,0),Rc=T,Sc={type:Rc,se:{},Ua:"/",root:m},Tc;Tc=O("/",{N:p});var Uc=Rc.z(Sc);Uc.z=Sc,Sc.root=Uc,Tc&&(Tc.d.z=Sc,Tc.d.ub=l,Vb=Sc.root),zb("/tmp",511),zb("/dev",511),Nb[259]={e:{Q:function(){return 0},write:function(){return 0}}},Ab("/dev/null",438,259),Mb(1280,{Na:function(e){if(!e.input.length){var t=m;if(ca){if(process.Eb.be)return;t=process.Eb.Q()}else"undefined"!=typeof window&&"function"==typeof window.prompt?(t=window.prompt("Input: "))!==m&&(t+="\n"):"function"==typeof readline&&(t=readline())!==m&&(t+="\n");if(!t)return m;e.input=J(t,l)}return e.input.shift()},W:function(e,t){t===m||10===t?(s.print(e.H.join("")),e.H=[]):e.H.push(Pb.oa(t))}}),Mb(1536,{W:function(e,t){t===m||10===t?(s.printErr(e.H.join("")),e.H=[]):e.H.push(Pb.oa(t))}}),Ab("/dev/tty",438,1280),Ab("/dev/tty1",438,1536),zb("/dev/shm",511),zb("/dev/shm/tmp",511),Xa.unshift({V:function(){if(!s.noFSInit&&!bc){w(!bc,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),bc=l,s.stdin=s.stdin,s.stdout=s.stdout,s.stderr=s.stderr,s.stdin?ec("/dev","stdin",s.stdin):Bb("/dev/tty","/dev/stdin"),s.stdout?ec("/dev","stdout",m,s.stdout):Bb("/dev/tty","/dev/stdout"),s.stderr?ec("/dev","stderr",m,s.stderr):Bb("/dev/tty1","/dev/stderr");var e=Db("/dev/stdin","r");B[Tb>>2]=e.s,w(1===e.s,"invalid handle for stdin ("+e.s+")"),e=Db("/dev/stdout","w"),B[Ub>>2]=e.s,w(2===e.s,"invalid handle for stdout ("+e.s+")"),e=Db("/dev/stderr","w"),B[nb>>2]=e.s,w(3===e.s,"invalid handle for stderr ("+e.s+")")}}}),Ya.push({V:function(){Yb=p}}),Za.push({V:function(){bc=p;for(var e=0;e<R.length;e++){var t=R[e];t&&Hb(t)}}}),s.FS_createFolder=function(e,t,r,n){return e=S("string"==typeof e?e:ac(e),t),zb(e,cc(r,n))},s.FS_createPath=function(e,t){for(var e="string"==typeof e?e:ac(e),r=t.split("/").reverse();r.length;){var n=r.pop();if(n){var i=S(e,n);try{zb(i,511)}catch(e){}e=i}}return i},s.FS_createDataFile=dc,s.FS_createPreloadedFile=function(e,t,r,n,i,a,o,f){function u(){Ec=document.pointerLockElement===h||document.mozPointerLockElement===h||document.webkitPointerLockElement===h}function c(r){function u(r){f||dc(e,t,r,n,i),a&&a(),jb("cp "+d)}var c=p;s.preloadPlugins.forEach(function(e){!c&&e.canHandle(d)&&(e.handle(r,d,u,function(){o&&o(),jb("cp "+d)}),c=l)}),c||u(r)}if(s.preloadPlugins||(s.preloadPlugins=[]),!Nc&&!ea){Nc=l;try{new Blob,Oc=l}catch(e){Oc=p,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Pc="undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:Oc?m:console.log("warning: no BlobBuilder"),Qc="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:console.log("warning: cannot create object URLs"),s.preloadPlugins.push({canHandle:function(e){return!s.re&&/\.(jpg|jpeg|png|bmp)$/i.test(e)},handle:function(e,t,r,n){var i=m;if(Oc)try{i=new Blob([e],{type:Ic(t)}),i.size!==e.length&&(i=new Blob([new Uint8Array(e).buffer],{type:Ic(t)}))}catch(e){var a="Blob constructor present but fails: "+e+"; falling back to blob builder";oa||(oa={}),oa[a]||(oa[a]=1,s.P(a))}i||(i=new Pc,i.append(new Uint8Array(e).buffer),i=i.getBlob());var o=Qc.createObjectURL(i),f=new Image;f.onload=function(){w(f.complete,"Image "+t+" could not be decoded");var n=document.createElement("canvas");n.width=f.width,n.height=f.height,n.getContext("2d").drawImage(f,0,0),s.preloadedImages[t]=n,Qc.revokeObjectURL(o),r&&r(e)},f.onerror=function(){console.log("Image "+o+" could not be decoded"),n&&n()},f.src=o}}),s.preloadPlugins.push({canHandle:function(e){return!s.qe&&e.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(e,t,r,n){function i(n){o||(o=l,s.preloadedAudios[t]=n,r&&r(e))}function a(){o||(o=l,s.preloadedAudios[t]=new Audio,n&&n())}var o=p;if(!Oc)return a();try{var f=new Blob([e],{type:Ic(t)})}catch(e){return a()}var f=Qc.createObjectURL(f),u=new Audio;u.addEventListener("canplaythrough",function(){i(u)},p),u.onerror=function(){if(!o){console.log("warning: browser could not fully decode audio "+t+", trying slower base64 approach");for(var r="",n=0,a=0,f=0;f<e.length;f++)for(n=n<<8|e[f],a+=8;6<=a;)var s=n>>a-6&63,a=a-6,r=r+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[s];2==a?(r+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(3&n)<<4],r+="=="):4==a&&(r+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(15&n)<<2],r+="="),u.src="data:audio/x-"+t.substr(-3)+";base64,"+r,i(u)}},u.src=f,setTimeout(function(){za||i(u)},1e4)}});var h=s.canvas;h.qa=h.requestPointerLock||h.mozRequestPointerLock||h.webkitRequestPointerLock,h.La=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||aa(),h.La=h.La.bind(document),document.addEventListener("pointerlockchange",u,p),document.addEventListener("mozpointerlockchange",u,p),document.addEventListener("webkitpointerlockchange",u,p),s.elementPointerLock&&h.addEventListener("click",function(e){!Ec&&h.qa&&(h.qa(),e.preventDefault())},p)}var d,b=S.apply(m,[e,t]);if("/"==b[0]&&(b=b.substr(1)),d=b,ib("cp "+d),"string"==typeof r){var v=o,y=function(){v?v():g('Loading data file "'+r+'" failed.')},_=new XMLHttpRequest;_.open("GET",r,l),_.responseType="arraybuffer",_.onload=function(){if(200==_.status||0==_.status&&_.response){var e=_.response;w(e,'Loading data file "'+r+'" failed (no arrayBuffer).'),e=new Uint8Array(e),c(e),jb("al "+r)}else y()},_.onerror=y,_.send(m),ib("al "+r)}else c(r)},s.FS_createLazyFile=function(e,t,r,n,i){var a,o;"undefined"!=typeof XMLHttpRequest?(ea||g("Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc"),a=function(){this.ma=p,this.T=[]},a.prototype.get=function(e){if(!(e>this.length-1||0>e)){var t=e%this.S;return this.pb(Math.floor(e/this.S))[t]}},a.prototype.Cb=function(e){this.pb=e},a.prototype.Fa=function(){var e=new XMLHttpRequest;e.open("HEAD",r,p),e.send(m),200<=e.status&&300>e.status||304===e.status||g(Error("Couldn't load "+r+". Status: "+e.status));var t,n=Number(e.getResponseHeader("Content-length")),i=1048576;(t=e.getResponseHeader("Accept-Ranges"))&&"bytes"===t||(i=n);var a=this;a.Cb(function(e){var t=e*i,o=(e+1)*i-1,o=Math.min(o,n-1);if(void 0===a.T[e]){var f=a.T;t>o&&g(Error("invalid range ("+t+", "+o+") or no bytes requested!")),o>n-1&&g(Error("only "+n+" bytes available! programmer error!"));var s=new XMLHttpRequest;s.open("GET",r,p),n!==i&&s.setRequestHeader("Range","bytes="+t+"-"+o),"undefined"!=typeof Uint8Array&&(s.responseType="arraybuffer"),s.overrideMimeType&&s.overrideMimeType("text/plain; charset=x-user-defined"),s.send(m),200<=s.status&&300>s.status||304===s.status||g(Error("Couldn't load "+r+". Status: "+s.status)),t=s.response!==k?new Uint8Array(s.response||[]):J(s.responseText||"",l),f[e]=t}return void 0===a.T[e]&&g(Error("doXHR failed!")),a.T[e]}),this.gb=n,this.fb=i,this.ma=l},a=new a,Object.defineProperty(a,"length",{get:function(){return this.ma||this.Fa(),this.gb}}),Object.defineProperty(a,"chunkSize",{get:function(){return this.ma||this.Fa(),this.fb}}),o=k):(o=r,a=k);var f,e=S("string"==typeof e?e:ac(e),t);f=yb(e,cc(n,i)),a?f.g=a:o&&(f.g=m,f.url=o);var u={};return Object.keys(f.e).forEach(function(e){var t=f.e[e];u[e]=function(){var e;if(f.ke||f.le||f.link||f.g)e=l;else{if(e=l,"undefined"!=typeof XMLHttpRequest&&g(Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")),s.read)try{f.g=J(s.read(f.url),l)}catch(t){e=p}else g(Error("Cannot load without read() or XMLHttpRequest."));e||M(N.I)}return e||g(new Q(N.I)),t.apply(m,arguments)}}),u.Q=function(e,t,r,n,i){if(e=e.d.g,n=Math.min(e.length-i,n),e.slice)for(var a=0;a<n;a++)t[r+a]=e[i+a];else for(a=0;a<n;a++)t[r+a]=e.get(i+a);return n},f.e=u,f},s.FS_createLink=function(e,t,r){return e=S("string"==typeof e?e:ac(e),t),Bb(r,e)},s.FS_createDevice=ec,U.m=F(12,"void*",E),wc(W),Bc.J=F([0],"i8",E),s.requestFullScreen=function(e,t){function r(){Dc=p,(document.webkitFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement)===n?(n.Ga=document.cancelFullScreen||document.mozCancelFullScreen||document.webkitCancelFullScreen,n.Ga=n.Ga.bind(document),Gc&&n.qa(),Dc=l,Hc&&Lc()):Hc&&Mc(),s.onFullScreen&&s.onFullScreen(Dc)}Gc=e,Hc=t,void 0===Gc&&(Gc=l),void 0===Hc&&(Hc=p);var n=s.canvas;Fc||(Fc=l,document.addEventListener("fullscreenchange",r,p),document.addEventListener("mozfullscreenchange",r,p),document.addEventListener("webkitfullscreenchange",r,p)),n.Ab=n.requestFullScreen||n.mozRequestFullScreen||(n.webkitRequestFullScreen?function(){n.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:m),n.Ab()},s.requestAnimationFrame=function(e){window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||window.setTimeout),window.requestAnimationFrame(e)},s.pauseMainLoop=aa(),s.resumeMainLoop=function(){Cc&&(Cc=p,m())},s.getUserMedia=function(){window.Ma||(window.Ma=navigator.getUserMedia||navigator.mozGetUserMedia),window.Ma(k)},Sa=u=xa(sa),Ta=Sa+5242880,Ua=z=xa(Ta),w(Ua<va);var Vc=F([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",3),Wc=F([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",3),Xc=Math.min,V=function(e,t,r){"use asm";var n=new e.Int8Array(r);var i=new e.Int16Array(r);var a=new e.Int32Array(r);var o=new e.Uint8Array(r);var f=new e.Uint16Array(r);var s=new e.Uint32Array(r);var u=new e.Float32Array(r);var c=new e.Float64Array(r);var h=t.STACKTOP|0;var d=t.STACK_MAX|0;var l=t.tempDoublePtr|0;var p=t.ABORT|0;var b=t.cttz_i8|0;var v=t.ctlz_i8|0;var m=t._stderr|0;var g=t.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var y=t.__ZTVN10__cxxabiv117__class_type_infoE|0;var _=t.___progname|0;var w=+t.NaN;var x=+t.Infinity;var k=0;var S=0;var M=0;var A=0;var E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0;var j=0;var N=0;var q=0;var L=0;var D=0;var H=0;var F=0;var U=0;var V=0;var W=0;var K=e.Math.floor;var Y=e.Math.abs;var X=e.Math.sqrt;var Z=e.Math.pow;var G=e.Math.cos;var $=e.Math.sin;var Q=e.Math.tan;var J=e.Math.acos;var ee=e.Math.asin;var te=e.Math.atan;var re=e.Math.atan2;var ne=e.Math.exp;var ie=e.Math.log;var ae=e.Math.ceil;var oe=e.Math.imul;var fe=t.abort;var se=t.assert;var ue=t.asmPrintInt;var ce=t.asmPrintFloat;var he=t.min;var de=t.invoke_vi;var le=t.invoke_vii;var pe=t.invoke_ii;var be=t.invoke_viii;var ve=t.invoke_v;var me=t.invoke_iii;var ge=t._strncmp;var ye=t._llvm_va_end;var _e=t._sysconf;var we=t.___cxa_throw;var xe=t._strerror;var ke=t._abort;var Se=t._fprintf;var Me=t._llvm_eh_exception;var Ae=t.___cxa_free_exception;var Ee=t._fflush;var Ie=t.___buildEnvironment;var Te=t.__reallyNegative;var Be=t._strchr;var Re=t._fputc;var Pe=t.___setErrNo;var Oe=t._fwrite;var Ce=t._send;var ze=t._write;var je=t._exit;var Ne=t.___cxa_find_matching_catch;var qe=t.___cxa_allocate_exception;var Le=t._isspace;var De=t.__formatString;var He=t.___resumeException;var Fe=t._llvm_uadd_with_overflow_i32;var Ue=t.___cxa_does_inherit;var Ve=t._getenv;var We=t._vfprintf;var Ke=t.___cxa_begin_catch;var Ye=t.__ZSt18uncaught_exceptionv;var Xe=t._pwrite;var Ze=t.___cxa_call_unexpected;var Ge=t._sbrk;var $e=t._strerror_r;var Qe=t.___errno_location;var Je=t.___gxx_personality_v0;var et=t.___cxa_is_number_type;var tt=t._time;var rt=t.__exit;var nt=t.___cxa_end_catch;function it(e){e=e|0;var t=0;t=h;h=h+e|0;h=h+7>>3<<3;return t|0}function at(){return h|0}function ot(e){e=e|0;h=e}function ft(e,t){e=e|0;t=t|0;if((k|0)==0){k=e;S=t}}function st(e){e=e|0;n[l]=n[e];n[l+1|0]=n[e+1|0];n[l+2|0]=n[e+2|0];n[l+3|0]=n[e+3|0]}function ut(e){e=e|0;n[l]=n[e];n[l+1|0]=n[e+1|0];n[l+2|0]=n[e+2|0];n[l+3|0]=n[e+3|0];n[l+4|0]=n[e+4|0];n[l+5|0]=n[e+5|0];n[l+6|0]=n[e+6|0];n[l+7|0]=n[e+7|0]}function ct(e){e=e|0;j=e}function ht(e){e=e|0;N=e}function dt(e){e=e|0;q=e}function lt(e){e=e|0;L=e}function pt(e){e=e|0;D=e}function bt(e){e=e|0;H=e}function vt(e){e=e|0;F=e}function mt(e){e=e|0;U=e}function gt(e){e=e|0;V=e}function yt(e){e=e|0;W=e}function _t(){a[170]=y+8;a[172]=g+8;a[176]=g+8}function wt(e,t,r){e=e|0;t=t|0;r=r|0;var i=0;if((r|0)==0){return}else{i=0}do{n[e+i|0]=n[t+i|0]|0;i=i+1|0}while(i>>>0<r>>>0);return}function xt(e,t,r){e=e|0;t=t|0;r=r|0;var i=0,a=0;if((r|0)==0){return}else{i=0}do{a=e+i|0;n[a]=n[a]^n[t+i|0];i=i+1|0}while(i>>>0<r>>>0);return}function kt(e){e=e|0;var t=0,r=0,n=0,i=0;t=o[e+1|0]|0;r=o[e+2|0]|0;n=o[e+3|0]|0;i=rn(t<<8|0>>>24|(o[e]|0)|(r<<16|0>>>16)|(n<<24|0>>>8)|(0<<8|0>>>24),0<<8|t>>>24|(0<<16|r>>>16)|(0<<24|n>>>8)|(o[e+4|0]|0)|((o[e+5|0]|0)<<8|0>>>24),0<<16|0>>>16,(o[e+6|0]|0)<<16|0>>>16)|0;n=rn(i,j,0<<24|0>>>8,(o[e+7|0]|0)<<24|0>>>8)|0;return(j=j,n)|0}function St(e){e=e|0;return(o[e+1|0]|0)<<8|(o[e]|0)|(o[e+2|0]|0)<<16|(o[e+3|0]|0)<<24|0}function Mt(e,t){e=e|0;t=t|0;n[e]=t&255;n[e+1|0]=t>>>8&255;n[e+2|0]=t>>>16&255;n[e+3|0]=t>>>24&255;return}function At(e){e=e|0;a[e+36>>2]=0;a[e+32>>2]=0;a[e>>2]=1779033703;a[e+4>>2]=-1150833019;a[e+8>>2]=1013904242;a[e+12>>2]=-1521486534;a[e+16>>2]=1359893119;a[e+20>>2]=-1694144372;a[e+24>>2]=528734635;a[e+28>>2]=1541459225;return}function Et(e,t,r,n,i,o,f,s,u,c){e=e|0;t=t|0;r=r|0;n=n|0;i=i|0;o=o|0;f=f|0;s=s|0;u=u|0;c=c|0;var h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0;h=ln(s,0,f,0)|0;d=j;l=0;if(d>>>0>l>>>0|d>>>0==l>>>0&h>>>0>1073741823>>>0){a[(Qe()|0)>>2]=27;p=-1;return p|0}h=rn(i,o,-1,-1)|0;if((h&i|0)!=0|(j&o|0)!=0|(i|0)==0&(o|0)==0){a[(Qe()|0)>>2]=22;p=-1;return p|0}do{if(!((33554431/(s>>>0)|0)>>>0<f>>>0|f>>>0>16777215)){h=0;if(h>>>0<o>>>0|h>>>0==o>>>0&(33554431/(f>>>0)|0)>>>0<i>>>0){break}h=f<<7;l=Vt(oe(h,s)|0)|0;if((l|0)==0){p=-1;return p|0}d=Vt(f<<8)|0;do{if((d|0)!=0){b=ln(h,0,i,o)|0;v=Vt(b)|0;if((v|0)==0){Wt(d);break}b=oe(s<<7,f)|0;Ft(e,t,r,n,1,0,l,b);if((s|0)!=0){m=f<<7;g=0;do{It(l+(oe(m,g)|0)|0,f,i,o,v,d);g=g+1|0}while(g>>>0<s>>>0)}Ft(e,t,l,b,1,0,u,c);Wt(v);Wt(d);Wt(l);p=0;return p|0}}while(0);Wt(l);p=-1;return p|0}}while(0);a[(Qe()|0)>>2]=12;p=-1;return p|0}function It(e,t,r,n,i,a){e=e|0;t=t|0;r=r|0;n=n|0;i=i|0;a=a|0;var o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0;o=t<<7;f=a+o|0;wt(a,e,o);if((r|0)==0&(n|0)==0){wt(e,a,o);return}s=o;u=0;c=0;h=0;do{d=ln(h,c,s,u)|0;wt(i+d|0,a,o);Tt(a,f,t);h=rn(h,c,1,0)|0;c=j}while(c>>>0<n>>>0|c>>>0==n>>>0&h>>>0<r>>>0);if((r|0)==0&(n|0)==0){wt(e,a,o);return}h=rn(r,n,-1,-1)|0;c=j;u=o;s=0;d=0;l=0;do{p=Bt(a,t)|0;b=ln(p&h,j&c,u,s)|0;xt(a,i+b|0,o);Tt(a,f,t);l=rn(l,d,1,0)|0;d=j}while(d>>>0<n>>>0|d>>>0==n>>>0&l>>>0<r>>>0);wt(e,a,o);return}function Tt(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0,a=0,o=0,f=0,s=0,u=0;n=h;h=h+64|0;i=n|0;a=r<<1;wt(i,e+((r<<7)-64)|0,64);if((a|0)!=0){o=0;do{f=o<<6;xt(i,e+f|0,64);Rt(i);wt(t+f|0,i,64);o=o+1|0}while(o>>>0<a>>>0)}if((r|0)==0){h=n;return}else{s=0}do{wt(e+(s<<6)|0,t+(s<<7)|0,64);s=s+1|0}while(s>>>0<r>>>0);if((r|0)==0){h=n;return}else{u=0}do{wt(e+(u+r<<6)|0,t+(u<<7|64)|0,64);u=u+1|0}while(u>>>0<r>>>0);h=n;return}function Bt(e,t){e=e|0;t=t|0;var r=0;r=kt(e+((t<<7)-64)|0)|0;return(j=j,r)|0}function Rt(e){e=e|0;var t=0,r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,j=0,N=0,q=0,L=0,D=0,H=0,F=0,U=0,V=0,W=0,K=0,Y=0,X=0,Z=0,G=0,$=0,Q=0,J=0,ee=0,te=0;t=h;h=h+128|0;r=t|0;n=t+64|0;i=0;do{a[r+(i<<2)>>2]=St(e+(i<<2)|0)|0;i=i+1|0}while(i>>>0<16);i=r;o=n;Jr(o|0,i|0,64)|0;i=n|0;o=n+48|0;f=n+16|0;s=n+32|0;u=n+20|0;c=n+4|0;d=n+36|0;l=n+52|0;p=n+40|0;b=n+24|0;v=n+56|0;m=n+8|0;g=n+60|0;y=n+44|0;_=n+12|0;w=n+28|0;x=0;k=a[i>>2]|0;S=a[o>>2]|0;M=a[f>>2]|0;A=a[s>>2]|0;E=a[u>>2]|0;I=a[c>>2]|0;T=a[d>>2]|0;B=a[l>>2]|0;R=a[p>>2]|0;P=a[b>>2]|0;O=a[v>>2]|0;C=a[m>>2]|0;z=a[g>>2]|0;j=a[y>>2]|0;N=a[_>>2]|0;q=a[w>>2]|0;do{L=S+k|0;D=(L<<7|L>>>25)^M;L=D+k|0;H=(L<<9|L>>>23)^A;L=H+D|0;F=(L<<13|L>>>19)^S;L=F+H|0;U=(L<<18|L>>>14)^k;L=I+E|0;V=(L<<7|L>>>25)^T;L=V+E|0;W=(L<<9|L>>>23)^B;L=W+V|0;K=(L<<13|L>>>19)^I;L=K+W|0;Y=(L<<18|L>>>14)^E;L=P+R|0;X=(L<<7|L>>>25)^O;L=X+R|0;Z=(L<<9|L>>>23)^C;L=Z+X|0;G=(L<<13|L>>>19)^P;L=G+Z|0;$=(L<<18|L>>>14)^R;L=j+z|0;Q=(L<<7|L>>>25)^N;L=Q+z|0;J=(L<<9|L>>>23)^q;L=J+Q|0;ee=(L<<13|L>>>19)^j;L=ee+J|0;te=(L<<18|L>>>14)^z;L=Q+U|0;I=(L<<7|L>>>25)^K;K=I+U|0;C=(K<<9|K>>>23)^Z;Z=C+I|0;N=(Z<<13|Z>>>19)^Q;Q=N+C|0;k=(Q<<18|Q>>>14)^U;U=D+Y|0;P=(U<<7|U>>>25)^G;G=P+Y|0;q=(G<<9|G>>>23)^J;J=q+P|0;M=(J<<13|J>>>19)^D;D=M+q|0;E=(D<<18|D>>>14)^Y;Y=V+$|0;j=(Y<<7|Y>>>25)^ee;ee=j+$|0;A=(ee<<9|ee>>>23)^H;H=A+j|0;T=(H<<13|H>>>19)^V;V=T+A|0;R=(V<<18|V>>>14)^$;$=X+te|0;S=($<<7|$>>>25)^F;F=S+te|0;B=(F<<9|F>>>23)^W;W=B+S|0;O=(W<<13|W>>>19)^X;X=O+B|0;z=(X<<18|X>>>14)^te;x=x+2|0}while(x>>>0<8);a[i>>2]=k;a[o>>2]=S;a[f>>2]=M;a[s>>2]=A;a[u>>2]=E;a[c>>2]=I;a[d>>2]=T;a[l>>2]=B;a[p>>2]=R;a[b>>2]=P;a[v>>2]=O;a[m>>2]=C;a[g>>2]=z;a[y>>2]=j;a[_>>2]=N;a[w>>2]=q;q=r|0;a[q>>2]=(a[q>>2]|0)+(a[n>>2]|0);q=r+4|0;a[q>>2]=(a[q>>2]|0)+(a[n+4>>2]|0);q=r+8|0;a[q>>2]=(a[q>>2]|0)+(a[n+8>>2]|0);q=r+12|0;a[q>>2]=(a[q>>2]|0)+(a[n+12>>2]|0);q=r+16|0;a[q>>2]=(a[q>>2]|0)+(a[n+16>>2]|0);q=r+20|0;a[q>>2]=(a[q>>2]|0)+(a[n+20>>2]|0);q=r+24|0;a[q>>2]=(a[q>>2]|0)+(a[n+24>>2]|0);q=r+28|0;a[q>>2]=(a[q>>2]|0)+(a[n+28>>2]|0);q=r+32|0;a[q>>2]=(a[q>>2]|0)+(a[n+32>>2]|0);q=r+36|0;a[q>>2]=(a[q>>2]|0)+(a[n+36>>2]|0);q=r+40|0;a[q>>2]=(a[q>>2]|0)+(a[n+40>>2]|0);q=r+44|0;a[q>>2]=(a[q>>2]|0)+(a[n+44>>2]|0);q=r+48|0;a[q>>2]=(a[q>>2]|0)+(a[n+48>>2]|0);q=r+52|0;a[q>>2]=(a[q>>2]|0)+(a[n+52>>2]|0);q=r+56|0;a[q>>2]=(a[q>>2]|0)+(a[n+56>>2]|0);q=r+60|0;a[q>>2]=(a[q>>2]|0)+(a[n+60>>2]|0);n=0;do{Mt(e+(n<<2)|0,a[r+(n<<2)>>2]|0);n=n+1|0}while(n>>>0<16);h=t;return}function Pt(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0,o=0,f=0,s=0,u=0,c=0;n=e+32|0;i=e+36|0;o=a[i>>2]|0;f=o>>>3&63;s=Fe(o|0,r<<3|0)|0;a[i>>2]=s;if(j){s=n|0;a[s>>2]=(a[s>>2]|0)+1}s=n|0;a[s>>2]=(a[s>>2]|0)+(r>>>29);s=64-f|0;n=e+40+f|0;if(s>>>0>r>>>0){Jr(n|0,t|0,r)|0;return}Jr(n|0,t|0,s)|0;n=e|0;f=e+40|0;Ot(n,f);e=t+s|0;t=r-s|0;if(t>>>0>63){s=t;r=e;while(1){Ot(n,r);i=r+64|0;o=s-64|0;if(o>>>0>63){s=o;r=i}else{u=o;c=i;break}}}else{u=t;c=e}Jr(f|0,c|0,u)|0;return}function Ot(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0;r=h;h=h+288|0;n=r|0;i=r+256|0;o=n|0;Ut(o,t);t=16;do{f=a[n+(t-2<<2)>>2]|0;s=a[n+(t-15<<2)>>2]|0;a[n+(t<<2)>>2]=(a[n+(t-16<<2)>>2]|0)+(a[n+(t-7<<2)>>2]|0)+((f>>>19|f<<13)^f>>>10^(f>>>17|f<<15))+((s>>>18|s<<14)^s>>>3^(s>>>7|s<<25));t=t+1|0}while((t|0)<64);t=i;s=e;Jr(t|0,s|0,32)|0;s=i+28|0;t=i+16|0;f=a[t>>2]|0;u=i+20|0;c=i+24|0;d=a[c>>2]|0;l=(a[s>>2]|0)+1116352408+(a[o>>2]|0)+((f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+((d^a[u>>2])&f^d)|0;d=i|0;f=a[d>>2]|0;o=i+4|0;p=a[o>>2]|0;b=i+8|0;v=a[b>>2]|0;m=i+12|0;a[m>>2]=(a[m>>2]|0)+l;g=((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+l+((v|p)&f|v&p)|0;a[s>>2]=g;p=a[m>>2]|0;v=a[u>>2]|0;f=(a[c>>2]|0)+1899447441+(a[n+4>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[c>>2]=l;v=a[b>>2]|0;p=a[t>>2]|0;g=(a[u>>2]|0)-1245643825+(a[n+8>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[u>>2]=f;p=a[o>>2]|0;v=a[m>>2]|0;l=(a[t>>2]|0)-373957723+(a[n+12>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[t>>2]=g;v=a[d>>2]|0;p=a[b>>2]|0;f=(a[m>>2]|0)+961987163+(a[n+16>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[m>>2]=l;p=a[s>>2]|0;v=a[o>>2]|0;g=(a[b>>2]|0)+1508970993+(a[n+20>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[b>>2]=f;v=a[c>>2]|0;p=a[d>>2]|0;l=(a[o>>2]|0)-1841331548+(a[n+24>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[o>>2]=g;p=a[u>>2]|0;v=a[s>>2]|0;f=(a[d>>2]|0)-1424204075+(a[n+28>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[d>>2]=l;v=a[t>>2]|0;p=a[c>>2]|0;g=(a[s>>2]|0)-670586216+(a[n+32>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[s>>2]=f;p=a[m>>2]|0;v=a[u>>2]|0;l=(a[c>>2]|0)+310598401+(a[n+36>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[c>>2]=g;v=a[b>>2]|0;p=a[t>>2]|0;f=(a[u>>2]|0)+607225278+(a[n+40>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[u>>2]=l;p=a[o>>2]|0;v=a[m>>2]|0;g=(a[t>>2]|0)+1426881987+(a[n+44>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[t>>2]=f;v=a[d>>2]|0;p=a[b>>2]|0;l=(a[m>>2]|0)+1925078388+(a[n+48>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[m>>2]=g;p=a[s>>2]|0;v=a[o>>2]|0;f=(a[b>>2]|0)-2132889090+(a[n+52>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[b>>2]=l;v=a[c>>2]|0;p=a[d>>2]|0;g=(a[o>>2]|0)-1680079193+(a[n+56>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[o>>2]=f;p=a[u>>2]|0;v=a[s>>2]|0;l=(a[d>>2]|0)-1046744716+(a[n+60>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[d>>2]=g;v=a[t>>2]|0;p=a[c>>2]|0;f=(a[s>>2]|0)-459576895+(a[n+64>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[s>>2]=l;p=a[m>>2]|0;v=a[u>>2]|0;g=(a[c>>2]|0)-272742522+(a[n+68>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[c>>2]=f;v=a[b>>2]|0;p=a[t>>2]|0;l=(a[u>>2]|0)+264347078+(a[n+72>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[u>>2]=g;p=a[o>>2]|0;v=a[m>>2]|0;f=(a[t>>2]|0)+604807628+(a[n+76>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[t>>2]=l;v=a[d>>2]|0;p=a[b>>2]|0;g=(a[m>>2]|0)+770255983+(a[n+80>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[m>>2]=f;p=a[s>>2]|0;v=a[o>>2]|0;l=(a[b>>2]|0)+1249150122+(a[n+84>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[b>>2]=g;v=a[c>>2]|0;p=a[d>>2]|0;f=(a[o>>2]|0)+1555081692+(a[n+88>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[o>>2]=l;p=a[u>>2]|0;v=a[s>>2]|0;g=(a[d>>2]|0)+1996064986+(a[n+92>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[d>>2]=f;v=a[t>>2]|0;p=a[c>>2]|0;l=(a[s>>2]|0)-1740746414+(a[n+96>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[s>>2]=g;p=a[m>>2]|0;v=a[u>>2]|0;f=(a[c>>2]|0)-1473132947+(a[n+100>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[c>>2]=l;v=a[b>>2]|0;p=a[t>>2]|0;g=(a[u>>2]|0)-1341970488+(a[n+104>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[u>>2]=f;p=a[o>>2]|0;v=a[m>>2]|0;l=(a[t>>2]|0)-1084653625+(a[n+108>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[t>>2]=g;v=a[d>>2]|0;p=a[b>>2]|0;f=(a[m>>2]|0)-958395405+(a[n+112>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[m>>2]=l;p=a[s>>2]|0;v=a[o>>2]|0;g=(a[b>>2]|0)-710438585+(a[n+116>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[b>>2]=f;v=a[c>>2]|0;p=a[d>>2]|0;l=(a[o>>2]|0)+113926993+(a[n+120>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[o>>2]=g;p=a[u>>2]|0;v=a[s>>2]|0;f=(a[d>>2]|0)+338241895+(a[n+124>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[d>>2]=l;v=a[t>>2]|0;p=a[c>>2]|0;g=(a[s>>2]|0)+666307205+(a[n+128>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[s>>2]=f;p=a[m>>2]|0;v=a[u>>2]|0;l=(a[c>>2]|0)+773529912+(a[n+132>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[c>>2]=g;v=a[b>>2]|0;p=a[t>>2]|0;f=(a[u>>2]|0)+1294757372+(a[n+136>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[u>>2]=l;p=a[o>>2]|0;v=a[m>>2]|0;g=(a[t>>2]|0)+1396182291+(a[n+140>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[t>>2]=f;v=a[d>>2]|0;p=a[b>>2]|0;l=(a[m>>2]|0)+1695183700+(a[n+144>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[m>>2]=g;p=a[s>>2]|0;v=a[o>>2]|0;f=(a[b>>2]|0)+1986661051+(a[n+148>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[b>>2]=l;v=a[c>>2]|0;p=a[d>>2]|0;g=(a[o>>2]|0)-2117940946+(a[n+152>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[o>>2]=f;p=a[u>>2]|0;v=a[s>>2]|0;l=(a[d>>2]|0)-1838011259+(a[n+156>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[d>>2]=g;v=a[t>>2]|0;p=a[c>>2]|0;f=(a[s>>2]|0)-1564481375+(a[n+160>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[s>>2]=l;p=a[m>>2]|0;v=a[u>>2]|0;g=(a[c>>2]|0)-1474664885+(a[n+164>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[c>>2]=f;v=a[b>>2]|0;p=a[t>>2]|0;l=(a[u>>2]|0)-1035236496+(a[n+168>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[u>>2]=g;p=a[o>>2]|0;v=a[m>>2]|0;f=(a[t>>2]|0)-949202525+(a[n+172>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[t>>2]=l;v=a[d>>2]|0;p=a[b>>2]|0;g=(a[m>>2]|0)-778901479+(a[n+176>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[m>>2]=f;p=a[s>>2]|0;v=a[o>>2]|0;l=(a[b>>2]|0)-694614492+(a[n+180>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[b>>2]=g;v=a[c>>2]|0;p=a[d>>2]|0;f=(a[o>>2]|0)-200395387+(a[n+184>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[o>>2]=l;p=a[u>>2]|0;v=a[s>>2]|0;g=(a[d>>2]|0)+275423344+(a[n+188>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[d>>2]=f;v=a[t>>2]|0;p=a[c>>2]|0;l=(a[s>>2]|0)+430227734+(a[n+192>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[s>>2]=g;p=a[m>>2]|0;v=a[u>>2]|0;f=(a[c>>2]|0)+506948616+(a[n+196>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[c>>2]=l;v=a[b>>2]|0;p=a[t>>2]|0;g=(a[u>>2]|0)+659060556+(a[n+200>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[u>>2]=f;p=a[o>>2]|0;v=a[m>>2]|0;l=(a[t>>2]|0)+883997877+(a[n+204>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[t>>2]=g;v=a[d>>2]|0;p=a[b>>2]|0;f=(a[m>>2]|0)+958139571+(a[n+208>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[m>>2]=l;p=a[s>>2]|0;v=a[o>>2]|0;g=(a[b>>2]|0)+1322822218+(a[n+212>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[b>>2]=f;v=a[c>>2]|0;p=a[d>>2]|0;l=(a[o>>2]|0)+1537002063+(a[n+216>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[o>>2]=g;p=a[u>>2]|0;v=a[s>>2]|0;f=(a[d>>2]|0)+1747873779+(a[n+220>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[c>>2])&p^v)|0;v=a[b>>2]|0;p=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[d>>2]=l;v=a[t>>2]|0;p=a[c>>2]|0;g=(a[s>>2]|0)+1955562222+(a[n+224>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[u>>2])&v^p)|0;p=a[o>>2]|0;v=a[b>>2]|0;a[m>>2]=(a[m>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[s>>2]=f;p=a[m>>2]|0;v=a[u>>2]|0;l=(a[c>>2]|0)+2024104815+(a[n+228>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[t>>2])&p^v)|0;v=a[d>>2]|0;p=a[o>>2]|0;a[b>>2]=(a[b>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((p|v)&f|p&v)|0;a[c>>2]=g;v=a[b>>2]|0;p=a[t>>2]|0;f=(a[u>>2]|0)-2067236844+(a[n+232>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[m>>2])&v^p)|0;p=a[s>>2]|0;v=a[d>>2]|0;a[o>>2]=(a[o>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((v|p)&g|v&p)|0;a[u>>2]=l;p=a[o>>2]|0;v=a[m>>2]|0;g=(a[t>>2]|0)-1933114872+(a[n+236>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[b>>2])&p^v)|0;v=a[c>>2]|0;p=a[s>>2]|0;a[d>>2]=(a[d>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((p|v)&l|p&v)|0;a[t>>2]=f;v=a[d>>2]|0;p=a[b>>2]|0;l=(a[m>>2]|0)-1866530822+(a[n+240>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[o>>2])&v^p)|0;p=a[u>>2]|0;v=a[c>>2]|0;a[s>>2]=(a[s>>2]|0)+l;g=l+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((v|p)&f|v&p)|0;a[m>>2]=g;p=a[s>>2]|0;v=a[o>>2]|0;f=(a[b>>2]|0)-1538233109+(a[n+244>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((v^a[d>>2])&p^v)|0;v=a[t>>2]|0;p=a[u>>2]|0;a[c>>2]=(a[c>>2]|0)+f;l=f+((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+((p|v)&g|p&v)|0;a[b>>2]=l;v=a[c>>2]|0;p=a[d>>2]|0;g=(a[o>>2]|0)-1090935817+(a[n+248>>2]|0)+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((p^a[s>>2])&v^p)|0;p=a[m>>2]|0;v=a[t>>2]|0;a[u>>2]=(a[u>>2]|0)+g;f=g+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((v|p)&l|v&p)|0;a[o>>2]=f;o=a[u>>2]|0;u=a[s>>2]|0;s=(a[d>>2]|0)-965641998+(a[n+252>>2]|0)+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+((u^a[c>>2])&o^u)|0;u=a[b>>2]|0;b=a[m>>2]|0;a[t>>2]=(a[t>>2]|0)+s;t=s+((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+((b|u)&f|b&u)|0;a[d>>2]=t;a[e>>2]=(a[e>>2]|0)+t;t=e+4|0;a[t>>2]=(a[t>>2]|0)+(a[i+4>>2]|0);t=e+8|0;a[t>>2]=(a[t>>2]|0)+(a[i+8>>2]|0);t=e+12|0;a[t>>2]=(a[t>>2]|0)+(a[i+12>>2]|0);t=e+16|0;a[t>>2]=(a[t>>2]|0)+(a[i+16>>2]|0);t=e+20|0;a[t>>2]=(a[t>>2]|0)+(a[i+20>>2]|0);t=e+24|0;a[t>>2]=(a[t>>2]|0)+(a[i+24>>2]|0);t=e+28|0;a[t>>2]=(a[t>>2]|0)+(a[i+28>>2]|0);h=r;return}function Ct(e,t){e=e|0;t=t|0;n[e+3|0]=t&255;n[e+2|0]=t>>>8&255;n[e+1|0]=t>>>16&255;n[e]=t>>>24&255;return}function zt(e){e=e|0;return(o[e+2|0]|0)<<8|(o[e+3|0]|0)|(o[e+1|0]|0)<<16|(o[e]|0)<<24|0}function jt(e,t){e=e|0;t=t|0;Nt(t);qt(e,t|0,32);en(t|0,0,104);return}function Nt(e){e=e|0;var t=0,r=0,n=0;t=h;h=h+8|0;r=t|0;qt(r,e+32|0,8);n=(a[e+36>>2]|0)>>>3&63;Pt(e,720,(n>>>0<56?56:120)-n|0);Pt(e,r,8);h=t;return}function qt(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0;n=r>>>2;if((n|0)==0){return}else{i=0}do{Ct(e+(i<<2)|0,a[t+(i<<2)>>2]|0);i=i+1|0}while(i>>>0<n>>>0);return}function Lt(e,t,r){e=e|0;t=t|0;r=r|0;var i=0,a=0,o=0,f=0,s=0,u=0,c=0;i=h;h=h+96|0;a=i|0;if(r>>>0>64){o=e|0;At(o);Pt(o,t,r);f=i+64|0;jt(f,o);s=f;u=32}else{s=t;u=r}r=e|0;At(r);t=a|0;en(t|0,54,64);if((u|0)!=0){f=0;do{o=a+f|0;n[o]=n[o]^n[s+f|0];f=f+1|0}while(f>>>0<u>>>0)}Pt(r,t,64);r=e+104|0;At(r);en(t|0,92,64);if((u|0)==0){Pt(r,t,64);h=i;return}else{c=0}do{e=a+c|0;n[e]=n[e]^n[s+c|0];c=c+1|0}while(c>>>0<u>>>0);Pt(r,t,64);h=i;return}function Dt(e,t,r){e=e|0;t=t|0;r=r|0;Pt(e|0,t,r);return}function Ht(e,t){e=e|0;t=t|0;var r=0,n=0,i=0;r=h;h=h+32|0;n=r|0;jt(n,t|0);i=t+104|0;Pt(i,n,32);jt(e,i);h=r;return}function Ft(e,t,r,i,a,o,f,s){e=e|0;t=t|0;r=r|0;i=i|0;a=a|0;o=o|0;f=f|0;s=s|0;var u=0,c=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0;u=h;h=h+488|0;c=u|0;d=u+208|0;l=u+424|0;p=u+456|0;Lt(c,e,t);Dt(c,r,i);if((s|0)==0){h=u;return}i=u+416|0;r=d;b=c;c=l|0;v=p|0;m=0;g=o>>>0<m>>>0|o>>>0==m>>>0&a>>>0<2>>>0;m=0;y=0;do{m=m+1|0;Ct(i,m);Jr(r|0,b|0,208)|0;Dt(d,i,4);Ht(c,d);Jr(v|0,c|0,32)|0;if(!g){_=0;w=2;do{Lt(d,e,t);Dt(d,c,32);Ht(c,d);x=0;do{k=p+x|0;n[k]=n[k]^n[l+x|0];x=x+1|0}while((x|0)<32);w=rn(w,_,1,0)|0;_=j}while(!(_>>>0>o>>>0|_>>>0==o>>>0&w>>>0>a>>>0))}w=s-y|0;_=w>>>0>32?32:w;w=f+y|0;Jr(w|0,v|0,_)|0;y=m<<5}while(y>>>0<s>>>0);h=u;return}function Ut(e,t){e=e|0;t=t|0;var r=0;r=0;do{a[e+(r<<2)>>2]=zt(t+(r<<2)|0)|0;r=r+1|0}while(r>>>0<16);return}function Vt(e){e=e|0;var t=0,r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,j=0,N=0,q=0,L=0,D=0,H=0,F=0,U=0,V=0,W=0,K=0,Y=0,X=0,Z=0,G=0,$=0,Q=0,J=0,ee=0,te=0,re=0,ne=0,ie=0,ae=0,oe=0,fe=0,se=0,ue=0,ce=0,he=0,de=0,le=0,pe=0,be=0,ve=0,me=0,ge=0,ye=0,we=0,xe=0,Se=0,Me=0,Ae=0,Ee=0,Ie=0,Te=0,Be=0,Re=0,Pe=0,Oe=0,Ce=0;do{if(e>>>0<245){if(e>>>0<11){t=16}else{t=e+11&-8}r=t>>>3;n=a[208]|0;i=n>>>(r>>>0);if((i&3|0)!=0){o=(i&1^1)+r|0;f=o<<1;s=872+(f<<2)|0;u=872+(f+2<<2)|0;f=a[u>>2]|0;c=f+8|0;h=a[c>>2]|0;do{if((s|0)==(h|0)){a[208]=n&~(1<<o)}else{if(h>>>0<(a[212]|0)>>>0){ke();return 0}d=h+12|0;if((a[d>>2]|0)==(f|0)){a[d>>2]=s;a[u>>2]=h;break}else{ke();return 0}}}while(0);h=o<<3;a[f+4>>2]=h|3;u=f+(h|4)|0;a[u>>2]=a[u>>2]|1;l=c;return l|0}if(t>>>0<=(a[210]|0)>>>0){p=t;break}if((i|0)!=0){u=2<<r;h=i<<r&(u|-u);u=(h&-h)-1|0;h=u>>>12&16;s=u>>>(h>>>0);u=s>>>5&8;d=s>>>(u>>>0);s=d>>>2&4;b=d>>>(s>>>0);d=b>>>1&2;v=b>>>(d>>>0);b=v>>>1&1;m=(u|h|s|d|b)+(v>>>(b>>>0))|0;b=m<<1;v=872+(b<<2)|0;d=872+(b+2<<2)|0;b=a[d>>2]|0;s=b+8|0;h=a[s>>2]|0;do{if((v|0)==(h|0)){a[208]=n&~(1<<m)}else{if(h>>>0<(a[212]|0)>>>0){ke();return 0}u=h+12|0;if((a[u>>2]|0)==(b|0)){a[u>>2]=v;a[d>>2]=h;break}else{ke();return 0}}}while(0);h=m<<3;d=h-t|0;a[b+4>>2]=t|3;v=b;n=v+t|0;a[v+(t|4)>>2]=d|1;a[v+h>>2]=d;h=a[210]|0;if((h|0)!=0){v=a[213]|0;r=h>>>3;h=r<<1;i=872+(h<<2)|0;c=a[208]|0;f=1<<r;do{if((c&f|0)==0){a[208]=c|f;g=i;y=872+(h+2<<2)|0}else{r=872+(h+2<<2)|0;o=a[r>>2]|0;if(o>>>0>=(a[212]|0)>>>0){g=o;y=r;break}ke();return 0}}while(0);a[y>>2]=v;a[g+12>>2]=v;a[v+8>>2]=g;a[v+12>>2]=i}a[210]=d;a[213]=n;l=s;return l|0}h=a[209]|0;if((h|0)==0){p=t;break}f=(h&-h)-1|0;h=f>>>12&16;c=f>>>(h>>>0);f=c>>>5&8;b=c>>>(f>>>0);c=b>>>2&4;m=b>>>(c>>>0);b=m>>>1&2;r=m>>>(b>>>0);m=r>>>1&1;o=a[1136+((f|h|c|b|m)+(r>>>(m>>>0))<<2)>>2]|0;m=o;r=o;b=(a[o+4>>2]&-8)-t|0;while(1){o=a[m+16>>2]|0;if((o|0)==0){c=a[m+20>>2]|0;if((c|0)==0){break}else{_=c}}else{_=o}o=(a[_+4>>2]&-8)-t|0;c=o>>>0<b>>>0;m=_;r=c?_:r;b=c?o:b}m=r;s=a[212]|0;if(m>>>0<s>>>0){ke();return 0}n=m+t|0;d=n;if(m>>>0>=n>>>0){ke();return 0}n=a[r+24>>2]|0;i=a[r+12>>2]|0;do{if((i|0)==(r|0)){v=r+20|0;o=a[v>>2]|0;if((o|0)==0){c=r+16|0;h=a[c>>2]|0;if((h|0)==0){w=0;break}else{x=h;k=c}}else{x=o;k=v}while(1){v=x+20|0;o=a[v>>2]|0;if((o|0)!=0){x=o;k=v;continue}v=x+16|0;o=a[v>>2]|0;if((o|0)==0){break}else{x=o;k=v}}if(k>>>0<s>>>0){ke();return 0}else{a[k>>2]=0;w=x;break}}else{v=a[r+8>>2]|0;if(v>>>0<s>>>0){ke();return 0}o=v+12|0;if((a[o>>2]|0)!=(r|0)){ke();return 0}c=i+8|0;if((a[c>>2]|0)==(r|0)){a[o>>2]=i;a[c>>2]=v;w=i;break}else{ke();return 0}}}while(0);e:do{if((n|0)!=0){i=r+28|0;s=1136+(a[i>>2]<<2)|0;do{if((r|0)==(a[s>>2]|0)){a[s>>2]=w;if((w|0)!=0){break}a[209]=a[209]&~(1<<a[i>>2]);break e}else{if(n>>>0<(a[212]|0)>>>0){ke();return 0}v=n+16|0;if((a[v>>2]|0)==(r|0)){a[v>>2]=w}else{a[n+20>>2]=w}if((w|0)==0){break e}}}while(0);if(w>>>0<(a[212]|0)>>>0){ke();return 0}a[w+24>>2]=n;i=a[r+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(a[212]|0)>>>0){ke();return 0}else{a[w+16>>2]=i;a[i+24>>2]=w;break}}}while(0);i=a[r+20>>2]|0;if((i|0)==0){break}if(i>>>0<(a[212]|0)>>>0){ke();return 0}else{a[w+20>>2]=i;a[i+24>>2]=w;break}}}while(0);if(b>>>0<16){n=b+t|0;a[r+4>>2]=n|3;i=m+(n+4)|0;a[i>>2]=a[i>>2]|1}else{a[r+4>>2]=t|3;a[m+(t|4)>>2]=b|1;a[m+(b+t)>>2]=b;i=a[210]|0;if((i|0)!=0){n=a[213]|0;s=i>>>3;i=s<<1;v=872+(i<<2)|0;c=a[208]|0;o=1<<s;do{if((c&o|0)==0){a[208]=c|o;S=v;M=872+(i+2<<2)|0}else{s=872+(i+2<<2)|0;h=a[s>>2]|0;if(h>>>0>=(a[212]|0)>>>0){S=h;M=s;break}ke();return 0}}while(0);a[M>>2]=n;a[S+12>>2]=n;a[n+8>>2]=S;a[n+12>>2]=v}a[210]=b;a[213]=d}i=r+8|0;if((i|0)==0){p=t;break}else{l=i}return l|0}else{if(e>>>0>4294967231){p=-1;break}i=e+11|0;o=i&-8;c=a[209]|0;if((c|0)==0){p=o;break}m=-o|0;s=i>>>8;do{if((s|0)==0){A=0}else{if(o>>>0>16777215){A=31;break}i=(s+1048320|0)>>>16&8;h=s<<i;f=(h+520192|0)>>>16&4;u=h<<f;h=(u+245760|0)>>>16&2;E=14-(f|i|h)+(u<<h>>>15)|0;A=o>>>((E+7|0)>>>0)&1|E<<1}}while(0);s=a[1136+(A<<2)>>2]|0;e:do{if((s|0)==0){I=0;T=m;B=0}else{if((A|0)==31){R=0}else{R=25-(A>>>1)|0}r=0;d=m;b=s;v=o<<R;n=0;while(1){E=a[b+4>>2]&-8;h=E-o|0;if(h>>>0<d>>>0){if((E|0)==(o|0)){I=b;T=h;B=b;break e}else{P=b;O=h}}else{P=r;O=d}h=a[b+20>>2]|0;E=a[b+16+(v>>>31<<2)>>2]|0;u=(h|0)==0|(h|0)==(E|0)?n:h;if((E|0)==0){I=P;T=O;B=u;break}else{r=P;d=O;b=E;v=v<<1;n=u}}}}while(0);if((B|0)==0&(I|0)==0){s=2<<A;m=c&(s|-s);if((m|0)==0){p=o;break}s=(m&-m)-1|0;m=s>>>12&16;n=s>>>(m>>>0);s=n>>>5&8;v=n>>>(s>>>0);n=v>>>2&4;b=v>>>(n>>>0);v=b>>>1&2;d=b>>>(v>>>0);b=d>>>1&1;C=a[1136+((s|m|n|v|b)+(d>>>(b>>>0))<<2)>>2]|0}else{C=B}if((C|0)==0){z=T;j=I}else{b=C;d=T;v=I;while(1){n=(a[b+4>>2]&-8)-o|0;m=n>>>0<d>>>0;s=m?n:d;n=m?b:v;m=a[b+16>>2]|0;if((m|0)!=0){b=m;d=s;v=n;continue}m=a[b+20>>2]|0;if((m|0)==0){z=s;j=n;break}else{b=m;d=s;v=n}}}if((j|0)==0){p=o;break}if(z>>>0>=((a[210]|0)-o|0)>>>0){p=o;break}v=j;d=a[212]|0;if(v>>>0<d>>>0){ke();return 0}b=v+o|0;c=b;if(v>>>0>=b>>>0){ke();return 0}n=a[j+24>>2]|0;s=a[j+12>>2]|0;do{if((s|0)==(j|0)){m=j+20|0;r=a[m>>2]|0;if((r|0)==0){u=j+16|0;E=a[u>>2]|0;if((E|0)==0){N=0;break}else{q=E;L=u}}else{q=r;L=m}while(1){m=q+20|0;r=a[m>>2]|0;if((r|0)!=0){q=r;L=m;continue}m=q+16|0;r=a[m>>2]|0;if((r|0)==0){break}else{q=r;L=m}}if(L>>>0<d>>>0){ke();return 0}else{a[L>>2]=0;N=q;break}}else{m=a[j+8>>2]|0;if(m>>>0<d>>>0){ke();return 0}r=m+12|0;if((a[r>>2]|0)!=(j|0)){ke();return 0}u=s+8|0;if((a[u>>2]|0)==(j|0)){a[r>>2]=s;a[u>>2]=m;N=s;break}else{ke();return 0}}}while(0);e:do{if((n|0)!=0){s=j+28|0;d=1136+(a[s>>2]<<2)|0;do{if((j|0)==(a[d>>2]|0)){a[d>>2]=N;if((N|0)!=0){break}a[209]=a[209]&~(1<<a[s>>2]);break e}else{if(n>>>0<(a[212]|0)>>>0){ke();return 0}m=n+16|0;if((a[m>>2]|0)==(j|0)){a[m>>2]=N}else{a[n+20>>2]=N}if((N|0)==0){break e}}}while(0);if(N>>>0<(a[212]|0)>>>0){ke();return 0}a[N+24>>2]=n;s=a[j+16>>2]|0;do{if((s|0)!=0){if(s>>>0<(a[212]|0)>>>0){ke();return 0}else{a[N+16>>2]=s;a[s+24>>2]=N;break}}}while(0);s=a[j+20>>2]|0;if((s|0)==0){break}if(s>>>0<(a[212]|0)>>>0){ke();return 0}else{a[N+20>>2]=s;a[s+24>>2]=N;break}}}while(0);do{if(z>>>0<16){n=z+o|0;a[j+4>>2]=n|3;s=v+(n+4)|0;a[s>>2]=a[s>>2]|1}else{a[j+4>>2]=o|3;a[v+(o|4)>>2]=z|1;a[v+(z+o)>>2]=z;s=z>>>3;if(z>>>0<256){n=s<<1;d=872+(n<<2)|0;m=a[208]|0;u=1<<s;do{if((m&u|0)==0){a[208]=m|u;D=d;H=872+(n+2<<2)|0}else{s=872+(n+2<<2)|0;r=a[s>>2]|0;if(r>>>0>=(a[212]|0)>>>0){D=r;H=s;break}ke();return 0}}while(0);a[H>>2]=c;a[D+12>>2]=c;a[v+(o+8)>>2]=D;a[v+(o+12)>>2]=d;break}n=b;u=z>>>8;do{if((u|0)==0){F=0}else{if(z>>>0>16777215){F=31;break}m=(u+1048320|0)>>>16&8;s=u<<m;r=(s+520192|0)>>>16&4;E=s<<r;s=(E+245760|0)>>>16&2;h=14-(r|m|s)+(E<<s>>>15)|0;F=z>>>((h+7|0)>>>0)&1|h<<1}}while(0);u=1136+(F<<2)|0;a[v+(o+28)>>2]=F;a[v+(o+20)>>2]=0;a[v+(o+16)>>2]=0;d=a[209]|0;h=1<<F;if((d&h|0)==0){a[209]=d|h;a[u>>2]=n;a[v+(o+24)>>2]=u;a[v+(o+12)>>2]=n;a[v+(o+8)>>2]=n;break}if((F|0)==31){U=0}else{U=25-(F>>>1)|0}h=z<<U;d=a[u>>2]|0;while(1){if((a[d+4>>2]&-8|0)==(z|0)){break}V=d+16+(h>>>31<<2)|0;u=a[V>>2]|0;if((u|0)==0){W=262;break}else{h=h<<1;d=u}}if((W|0)==262){if(V>>>0<(a[212]|0)>>>0){ke();return 0}else{a[V>>2]=n;a[v+(o+24)>>2]=d;a[v+(o+12)>>2]=n;a[v+(o+8)>>2]=n;break}}h=d+8|0;u=a[h>>2]|0;s=a[212]|0;if(d>>>0<s>>>0){ke();return 0}if(u>>>0<s>>>0){ke();return 0}else{a[u+12>>2]=n;a[h>>2]=n;a[v+(o+8)>>2]=u;a[v+(o+12)>>2]=d;a[v+(o+24)>>2]=0;break}}}while(0);v=j+8|0;if((v|0)==0){p=o;break}else{l=v}return l|0}}while(0);j=a[210]|0;if(p>>>0<=j>>>0){V=j-p|0;z=a[213]|0;if(V>>>0>15){U=z;a[213]=U+p;a[210]=V;a[U+(p+4)>>2]=V|1;a[U+j>>2]=V;a[z+4>>2]=p|3}else{a[210]=0;a[213]=0;a[z+4>>2]=j|3;V=z+(j+4)|0;a[V>>2]=a[V>>2]|1}l=z+8|0;return l|0}z=a[211]|0;if(p>>>0<z>>>0){V=z-p|0;a[211]=V;z=a[214]|0;j=z;a[214]=j+p;a[j+(p+4)>>2]=V|1;a[z+4>>2]=p|3;l=z+8|0;return l|0}do{if((a[200]|0)==0){z=_e(8)|0;if((z-1&z|0)==0){a[202]=z;a[201]=z;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke();return 0}}}while(0);z=p+48|0;V=a[202]|0;j=p+47|0;U=V+j|0;F=-V|0;V=U&F;if(V>>>0<=p>>>0){l=0;return l|0}D=a[318]|0;do{if((D|0)!=0){H=a[316]|0;N=H+V|0;if(N>>>0<=H>>>0|N>>>0>D>>>0){l=0}else{break}return l|0}}while(0);e:do{if((a[319]&4|0)==0){D=a[214]|0;t:do{if((D|0)==0){W=292}else{N=D;H=1280;while(1){K=H|0;q=a[K>>2]|0;if(q>>>0<=N>>>0){Y=H+4|0;if((q+(a[Y>>2]|0)|0)>>>0>N>>>0){break}}q=a[H+8>>2]|0;if((q|0)==0){W=292;break t}else{H=q}}if((H|0)==0){W=292;break}N=U-(a[211]|0)&F;if(N>>>0>=2147483647){X=0;break}d=Ge(N|0)|0;n=(d|0)==((a[K>>2]|0)+(a[Y>>2]|0)|0);Z=n?d:-1;G=n?N:0;$=d;Q=N;W=301}}while(0);do{if((W|0)==292){D=Ge(0)|0;if((D|0)==-1){X=0;break}o=D;N=a[201]|0;d=N-1|0;if((d&o|0)==0){J=V}else{J=V-o+(d+o&-N)|0}N=a[316]|0;o=N+J|0;if(!(J>>>0>p>>>0&J>>>0<2147483647)){X=0;break}d=a[318]|0;if((d|0)!=0){if(o>>>0<=N>>>0|o>>>0>d>>>0){X=0;break}}d=Ge(J|0)|0;o=(d|0)==(D|0);Z=o?D:-1;G=o?J:0;$=d;Q=J;W=301}}while(0);t:do{if((W|0)==301){d=-Q|0;if((Z|0)!=-1){ee=G;te=Z;W=312;break e}do{if(($|0)!=-1&Q>>>0<2147483647&Q>>>0<z>>>0){o=a[202]|0;D=j-Q+o&-o;if(D>>>0>=2147483647){re=Q;break}if((Ge(D|0)|0)==-1){Ge(d|0)|0;X=G;break t}else{re=D+Q|0;break}}else{re=Q}}while(0);if(($|0)==-1){X=G}else{ee=re;te=$;W=312;break e}}}while(0);a[319]=a[319]|4;ne=X;W=309}else{ne=0;W=309}}while(0);do{if((W|0)==309){if(V>>>0>=2147483647){break}X=Ge(V|0)|0;$=Ge(0)|0;if(!(($|0)!=-1&(X|0)!=-1&X>>>0<$>>>0)){break}re=$-X|0;$=re>>>0>(p+40|0)>>>0;G=$?X:-1;if((G|0)!=-1){ee=$?re:ne;te=G;W=312}}}while(0);do{if((W|0)==312){ne=(a[316]|0)+ee|0;a[316]=ne;if(ne>>>0>(a[317]|0)>>>0){a[317]=ne}ne=a[214]|0;e:do{if((ne|0)==0){V=a[212]|0;if((V|0)==0|te>>>0<V>>>0){a[212]=te}a[320]=te;a[321]=ee;a[323]=0;a[217]=a[200];a[216]=-1;V=0;do{G=V<<1;re=872+(G<<2)|0;a[872+(G+3<<2)>>2]=re;a[872+(G+2<<2)>>2]=re;V=V+1|0}while(V>>>0<32);V=te+8|0;if((V&7|0)==0){ie=0}else{ie=-V&7}V=ee-40-ie|0;a[214]=te+ie;a[211]=V;a[te+(ie+4)>>2]=V|1;a[te+(ee-36)>>2]=40;a[215]=a[204]}else{V=1280;while(1){ae=a[V>>2]|0;oe=V+4|0;fe=a[oe>>2]|0;if((te|0)==(ae+fe|0)){W=324;break}re=a[V+8>>2]|0;if((re|0)==0){break}else{V=re}}do{if((W|0)==324){if((a[V+12>>2]&8|0)!=0){break}re=ne;if(!(re>>>0>=ae>>>0&re>>>0<te>>>0)){break}a[oe>>2]=fe+ee;re=a[214]|0;G=(a[211]|0)+ee|0;$=re;X=re+8|0;if((X&7|0)==0){se=0}else{se=-X&7}X=G-se|0;a[214]=$+se;a[211]=X;a[$+(se+4)>>2]=X|1;a[$+(G+4)>>2]=40;a[215]=a[204];break e}}while(0);if(te>>>0<(a[212]|0)>>>0){a[212]=te}V=te+ee|0;G=1280;while(1){ue=G|0;if((a[ue>>2]|0)==(V|0)){W=334;break}$=a[G+8>>2]|0;if(($|0)==0){break}else{G=$}}do{if((W|0)==334){if((a[G+12>>2]&8|0)!=0){break}a[ue>>2]=te;V=G+4|0;a[V>>2]=(a[V>>2]|0)+ee;V=te+8|0;if((V&7|0)==0){ce=0}else{ce=-V&7}V=te+(ee+8)|0;if((V&7|0)==0){he=0}else{he=-V&7}V=te+(he+ee)|0;$=V;X=ce+p|0;re=te+X|0;Q=re;j=V-(te+ce)-p|0;a[te+(ce+4)>>2]=p|3;do{if(($|0)==(a[214]|0)){z=(a[211]|0)+j|0;a[211]=z;a[214]=Q;a[te+(X+4)>>2]=z|1}else{if(($|0)==(a[213]|0)){z=(a[210]|0)+j|0;a[210]=z;a[213]=Q;a[te+(X+4)>>2]=z|1;a[te+(z+X)>>2]=z;break}z=ee+4|0;Z=a[te+(z+he)>>2]|0;if((Z&3|0)==1){J=Z&-8;Y=Z>>>3;t:do{if(Z>>>0<256){K=a[te+((he|8)+ee)>>2]|0;F=a[te+(ee+12+he)>>2]|0;U=872+(Y<<1<<2)|0;do{if((K|0)!=(U|0)){if(K>>>0<(a[212]|0)>>>0){ke();return 0}if((a[K+12>>2]|0)==($|0)){break}ke();return 0}}while(0);if((F|0)==(K|0)){a[208]=a[208]&~(1<<Y);break}do{if((F|0)==(U|0)){de=F+8|0}else{if(F>>>0<(a[212]|0)>>>0){ke();return 0}d=F+8|0;if((a[d>>2]|0)==($|0)){de=d;break}ke();return 0}}while(0);a[K+12>>2]=F;a[de>>2]=K}else{U=V;d=a[te+((he|24)+ee)>>2]|0;H=a[te+(ee+12+he)>>2]|0;do{if((H|0)==(U|0)){D=he|16;o=te+(z+D)|0;N=a[o>>2]|0;if((N|0)==0){n=te+(D+ee)|0;D=a[n>>2]|0;if((D|0)==0){le=0;break}else{pe=D;be=n}}else{pe=N;be=o}while(1){o=pe+20|0;N=a[o>>2]|0;if((N|0)!=0){pe=N;be=o;continue}o=pe+16|0;N=a[o>>2]|0;if((N|0)==0){break}else{pe=N;be=o}}if(be>>>0<(a[212]|0)>>>0){ke();return 0}else{a[be>>2]=0;le=pe;break}}else{o=a[te+((he|8)+ee)>>2]|0;if(o>>>0<(a[212]|0)>>>0){ke();return 0}N=o+12|0;if((a[N>>2]|0)!=(U|0)){ke();return 0}n=H+8|0;if((a[n>>2]|0)==(U|0)){a[N>>2]=H;a[n>>2]=o;le=H;break}else{ke();return 0}}}while(0);if((d|0)==0){break}H=te+(ee+28+he)|0;K=1136+(a[H>>2]<<2)|0;do{if((U|0)==(a[K>>2]|0)){a[K>>2]=le;if((le|0)!=0){break}a[209]=a[209]&~(1<<a[H>>2]);break t}else{if(d>>>0<(a[212]|0)>>>0){ke();return 0}F=d+16|0;if((a[F>>2]|0)==(U|0)){a[F>>2]=le}else{a[d+20>>2]=le}if((le|0)==0){break t}}}while(0);if(le>>>0<(a[212]|0)>>>0){ke();return 0}a[le+24>>2]=d;U=he|16;H=a[te+(U+ee)>>2]|0;do{if((H|0)!=0){if(H>>>0<(a[212]|0)>>>0){ke();return 0}else{a[le+16>>2]=H;a[H+24>>2]=le;break}}}while(0);H=a[te+(z+U)>>2]|0;if((H|0)==0){break}if(H>>>0<(a[212]|0)>>>0){ke();return 0}else{a[le+20>>2]=H;a[H+24>>2]=le;break}}}while(0);ve=te+((J|he)+ee)|0;me=J+j|0}else{ve=$;me=j}z=ve+4|0;a[z>>2]=a[z>>2]&-2;a[te+(X+4)>>2]=me|1;a[te+(me+X)>>2]=me;z=me>>>3;if(me>>>0<256){Y=z<<1;Z=872+(Y<<2)|0;H=a[208]|0;d=1<<z;do{if((H&d|0)==0){a[208]=H|d;ge=Z;ye=872+(Y+2<<2)|0}else{z=872+(Y+2<<2)|0;K=a[z>>2]|0;if(K>>>0>=(a[212]|0)>>>0){ge=K;ye=z;break}ke();return 0}}while(0);a[ye>>2]=Q;a[ge+12>>2]=Q;a[te+(X+8)>>2]=ge;a[te+(X+12)>>2]=Z;break}Y=re;d=me>>>8;do{if((d|0)==0){we=0}else{if(me>>>0>16777215){we=31;break}H=(d+1048320|0)>>>16&8;J=d<<H;z=(J+520192|0)>>>16&4;K=J<<z;J=(K+245760|0)>>>16&2;F=14-(z|H|J)+(K<<J>>>15)|0;we=me>>>((F+7|0)>>>0)&1|F<<1}}while(0);d=1136+(we<<2)|0;a[te+(X+28)>>2]=we;a[te+(X+20)>>2]=0;a[te+(X+16)>>2]=0;Z=a[209]|0;F=1<<we;if((Z&F|0)==0){a[209]=Z|F;a[d>>2]=Y;a[te+(X+24)>>2]=d;a[te+(X+12)>>2]=Y;a[te+(X+8)>>2]=Y;break}if((we|0)==31){xe=0}else{xe=25-(we>>>1)|0}F=me<<xe;Z=a[d>>2]|0;while(1){if((a[Z+4>>2]&-8|0)==(me|0)){break}Se=Z+16+(F>>>31<<2)|0;d=a[Se>>2]|0;if((d|0)==0){W=407;break}else{F=F<<1;Z=d}}if((W|0)==407){if(Se>>>0<(a[212]|0)>>>0){ke();return 0}else{a[Se>>2]=Y;a[te+(X+24)>>2]=Z;a[te+(X+12)>>2]=Y;a[te+(X+8)>>2]=Y;break}}F=Z+8|0;d=a[F>>2]|0;J=a[212]|0;if(Z>>>0<J>>>0){ke();return 0}if(d>>>0<J>>>0){ke();return 0}else{a[d+12>>2]=Y;a[F>>2]=Y;a[te+(X+8)>>2]=d;a[te+(X+12)>>2]=Z;a[te+(X+24)>>2]=0;break}}}while(0);l=te+(ce|8)|0;return l|0}}while(0);G=ne;X=1280;while(1){Me=a[X>>2]|0;if(Me>>>0<=G>>>0){Ae=a[X+4>>2]|0;Ee=Me+Ae|0;if(Ee>>>0>G>>>0){break}}X=a[X+8>>2]|0}X=Me+(Ae-39)|0;if((X&7|0)==0){Ie=0}else{Ie=-X&7}X=Me+(Ae-47+Ie)|0;re=X>>>0<(ne+16|0)>>>0?G:X;X=re+8|0;Q=te+8|0;if((Q&7|0)==0){Te=0}else{Te=-Q&7}Q=ee-40-Te|0;a[214]=te+Te;a[211]=Q;a[te+(Te+4)>>2]=Q|1;a[te+(ee-36)>>2]=40;a[215]=a[204];a[re+4>>2]=27;a[X>>2]=a[320];a[X+4>>2]=a[1284>>2];a[X+8>>2]=a[1288>>2];a[X+12>>2]=a[1292>>2];a[320]=te;a[321]=ee;a[323]=0;a[322]=X;X=re+28|0;a[X>>2]=7;if((re+32|0)>>>0<Ee>>>0){Q=X;while(1){X=Q+4|0;a[X>>2]=7;if((Q+8|0)>>>0<Ee>>>0){Q=X}else{break}}}if((re|0)==(G|0)){break}Q=re-ne|0;X=G+(Q+4)|0;a[X>>2]=a[X>>2]&-2;a[ne+4>>2]=Q|1;a[G+Q>>2]=Q;X=Q>>>3;if(Q>>>0<256){j=X<<1;$=872+(j<<2)|0;V=a[208]|0;d=1<<X;do{if((V&d|0)==0){a[208]=V|d;Be=$;Re=872+(j+2<<2)|0}else{X=872+(j+2<<2)|0;F=a[X>>2]|0;if(F>>>0>=(a[212]|0)>>>0){Be=F;Re=X;break}ke();return 0}}while(0);a[Re>>2]=ne;a[Be+12>>2]=ne;a[ne+8>>2]=Be;a[ne+12>>2]=$;break}j=ne;d=Q>>>8;do{if((d|0)==0){Pe=0}else{if(Q>>>0>16777215){Pe=31;break}V=(d+1048320|0)>>>16&8;G=d<<V;re=(G+520192|0)>>>16&4;X=G<<re;G=(X+245760|0)>>>16&2;F=14-(re|V|G)+(X<<G>>>15)|0;Pe=Q>>>((F+7|0)>>>0)&1|F<<1}}while(0);d=1136+(Pe<<2)|0;a[ne+28>>2]=Pe;a[ne+20>>2]=0;a[ne+16>>2]=0;$=a[209]|0;F=1<<Pe;if(($&F|0)==0){a[209]=$|F;a[d>>2]=j;a[ne+24>>2]=d;a[ne+12>>2]=ne;a[ne+8>>2]=ne;break}if((Pe|0)==31){Oe=0}else{Oe=25-(Pe>>>1)|0}F=Q<<Oe;$=a[d>>2]|0;while(1){if((a[$+4>>2]&-8|0)==(Q|0)){break}Ce=$+16+(F>>>31<<2)|0;d=a[Ce>>2]|0;if((d|0)==0){W=442;break}else{F=F<<1;$=d}}if((W|0)==442){if(Ce>>>0<(a[212]|0)>>>0){ke();return 0}else{a[Ce>>2]=j;a[ne+24>>2]=$;a[ne+12>>2]=ne;a[ne+8>>2]=ne;break}}F=$+8|0;Q=a[F>>2]|0;d=a[212]|0;if($>>>0<d>>>0){ke();return 0}if(Q>>>0<d>>>0){ke();return 0}else{a[Q+12>>2]=j;a[F>>2]=j;a[ne+8>>2]=Q;a[ne+12>>2]=$;a[ne+24>>2]=0;break}}}while(0);ne=a[211]|0;if(ne>>>0<=p>>>0){break}Q=ne-p|0;a[211]=Q;ne=a[214]|0;F=ne;a[214]=F+p;a[F+(p+4)>>2]=Q|1;a[ne+4>>2]=p|3;l=ne+8|0;return l|0}}while(0);a[(Qe()|0)>>2]=12;l=0;return l|0}function Wt(e){e=e|0;var t=0,r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,j=0,N=0,q=0,L=0,D=0;if((e|0)==0){return}t=e-8|0;r=t;n=a[212]|0;if(t>>>0<n>>>0){ke()}i=a[e-4>>2]|0;o=i&3;if((o|0)==1){ke()}f=i&-8;s=e+(f-8)|0;u=s;e:do{if((i&1|0)==0){c=a[t>>2]|0;if((o|0)==0){return}h=-8-c|0;d=e+h|0;l=d;p=c+f|0;if(d>>>0<n>>>0){ke()}if((l|0)==(a[213]|0)){b=e+(f-4)|0;if((a[b>>2]&3|0)!=3){v=l;m=p;break}a[210]=p;a[b>>2]=a[b>>2]&-2;a[e+(h+4)>>2]=p|1;a[s>>2]=p;return}b=c>>>3;if(c>>>0<256){c=a[e+(h+8)>>2]|0;g=a[e+(h+12)>>2]|0;y=872+(b<<1<<2)|0;do{if((c|0)!=(y|0)){if(c>>>0<n>>>0){ke()}if((a[c+12>>2]|0)==(l|0)){break}ke()}}while(0);if((g|0)==(c|0)){a[208]=a[208]&~(1<<b);v=l;m=p;break}do{if((g|0)==(y|0)){_=g+8|0}else{if(g>>>0<n>>>0){ke()}w=g+8|0;if((a[w>>2]|0)==(l|0)){_=w;break}ke()}}while(0);a[c+12>>2]=g;a[_>>2]=c;v=l;m=p;break}y=d;b=a[e+(h+24)>>2]|0;w=a[e+(h+12)>>2]|0;do{if((w|0)==(y|0)){x=e+(h+20)|0;k=a[x>>2]|0;if((k|0)==0){S=e+(h+16)|0;M=a[S>>2]|0;if((M|0)==0){A=0;break}else{E=M;I=S}}else{E=k;I=x}while(1){x=E+20|0;k=a[x>>2]|0;if((k|0)!=0){E=k;I=x;continue}x=E+16|0;k=a[x>>2]|0;if((k|0)==0){break}else{E=k;I=x}}if(I>>>0<n>>>0){ke()}else{a[I>>2]=0;A=E;break}}else{x=a[e+(h+8)>>2]|0;if(x>>>0<n>>>0){ke()}k=x+12|0;if((a[k>>2]|0)!=(y|0)){ke()}S=w+8|0;if((a[S>>2]|0)==(y|0)){a[k>>2]=w;a[S>>2]=x;A=w;break}else{ke()}}}while(0);if((b|0)==0){v=l;m=p;break}w=e+(h+28)|0;d=1136+(a[w>>2]<<2)|0;do{if((y|0)==(a[d>>2]|0)){a[d>>2]=A;if((A|0)!=0){break}a[209]=a[209]&~(1<<a[w>>2]);v=l;m=p;break e}else{if(b>>>0<(a[212]|0)>>>0){ke()}c=b+16|0;if((a[c>>2]|0)==(y|0)){a[c>>2]=A}else{a[b+20>>2]=A}if((A|0)==0){v=l;m=p;break e}}}while(0);if(A>>>0<(a[212]|0)>>>0){ke()}a[A+24>>2]=b;y=a[e+(h+16)>>2]|0;do{if((y|0)!=0){if(y>>>0<(a[212]|0)>>>0){ke()}else{a[A+16>>2]=y;a[y+24>>2]=A;break}}}while(0);y=a[e+(h+20)>>2]|0;if((y|0)==0){v=l;m=p;break}if(y>>>0<(a[212]|0)>>>0){ke()}else{a[A+20>>2]=y;a[y+24>>2]=A;v=l;m=p;break}}else{v=r;m=f}}while(0);r=v;if(r>>>0>=s>>>0){ke()}A=e+(f-4)|0;n=a[A>>2]|0;if((n&1|0)==0){ke()}do{if((n&2|0)==0){if((u|0)==(a[214]|0)){E=(a[211]|0)+m|0;a[211]=E;a[214]=v;a[v+4>>2]=E|1;if((v|0)==(a[213]|0)){a[213]=0;a[210]=0}if(E>>>0<=(a[215]|0)>>>0){return}$t(0)|0;return}if((u|0)==(a[213]|0)){E=(a[210]|0)+m|0;a[210]=E;a[213]=v;a[v+4>>2]=E|1;a[r+E>>2]=E;return}E=(n&-8)+m|0;I=n>>>3;e:do{if(n>>>0<256){_=a[e+f>>2]|0;o=a[e+(f|4)>>2]|0;t=872+(I<<1<<2)|0;do{if((_|0)!=(t|0)){if(_>>>0<(a[212]|0)>>>0){ke()}if((a[_+12>>2]|0)==(u|0)){break}ke()}}while(0);if((o|0)==(_|0)){a[208]=a[208]&~(1<<I);break}do{if((o|0)==(t|0)){T=o+8|0}else{if(o>>>0<(a[212]|0)>>>0){ke()}i=o+8|0;if((a[i>>2]|0)==(u|0)){T=i;break}ke()}}while(0);a[_+12>>2]=o;a[T>>2]=_}else{t=s;i=a[e+(f+16)>>2]|0;y=a[e+(f|4)>>2]|0;do{if((y|0)==(t|0)){b=e+(f+12)|0;w=a[b>>2]|0;if((w|0)==0){d=e+(f+8)|0;c=a[d>>2]|0;if((c|0)==0){B=0;break}else{R=c;P=d}}else{R=w;P=b}while(1){b=R+20|0;w=a[b>>2]|0;if((w|0)!=0){R=w;P=b;continue}b=R+16|0;w=a[b>>2]|0;if((w|0)==0){break}else{R=w;P=b}}if(P>>>0<(a[212]|0)>>>0){ke()}else{a[P>>2]=0;B=R;break}}else{b=a[e+f>>2]|0;if(b>>>0<(a[212]|0)>>>0){ke()}w=b+12|0;if((a[w>>2]|0)!=(t|0)){ke()}d=y+8|0;if((a[d>>2]|0)==(t|0)){a[w>>2]=y;a[d>>2]=b;B=y;break}else{ke()}}}while(0);if((i|0)==0){break}y=e+(f+20)|0;_=1136+(a[y>>2]<<2)|0;do{if((t|0)==(a[_>>2]|0)){a[_>>2]=B;if((B|0)!=0){break}a[209]=a[209]&~(1<<a[y>>2]);break e}else{if(i>>>0<(a[212]|0)>>>0){ke()}o=i+16|0;if((a[o>>2]|0)==(t|0)){a[o>>2]=B}else{a[i+20>>2]=B}if((B|0)==0){break e}}}while(0);if(B>>>0<(a[212]|0)>>>0){ke()}a[B+24>>2]=i;t=a[e+(f+8)>>2]|0;do{if((t|0)!=0){if(t>>>0<(a[212]|0)>>>0){ke()}else{a[B+16>>2]=t;a[t+24>>2]=B;break}}}while(0);t=a[e+(f+12)>>2]|0;if((t|0)==0){break}if(t>>>0<(a[212]|0)>>>0){ke()}else{a[B+20>>2]=t;a[t+24>>2]=B;break}}}while(0);a[v+4>>2]=E|1;a[r+E>>2]=E;if((v|0)!=(a[213]|0)){O=E;break}a[210]=E;return}else{a[A>>2]=n&-2;a[v+4>>2]=m|1;a[r+m>>2]=m;O=m}}while(0);m=O>>>3;if(O>>>0<256){r=m<<1;n=872+(r<<2)|0;A=a[208]|0;B=1<<m;do{if((A&B|0)==0){a[208]=A|B;C=n;z=872+(r+2<<2)|0}else{m=872+(r+2<<2)|0;f=a[m>>2]|0;if(f>>>0>=(a[212]|0)>>>0){C=f;z=m;break}ke()}}while(0);a[z>>2]=v;a[C+12>>2]=v;a[v+8>>2]=C;a[v+12>>2]=n;return}n=v;C=O>>>8;do{if((C|0)==0){j=0}else{if(O>>>0>16777215){j=31;break}z=(C+1048320|0)>>>16&8;r=C<<z;B=(r+520192|0)>>>16&4;A=r<<B;r=(A+245760|0)>>>16&2;m=14-(B|z|r)+(A<<r>>>15)|0;j=O>>>((m+7|0)>>>0)&1|m<<1}}while(0);C=1136+(j<<2)|0;a[v+28>>2]=j;a[v+20>>2]=0;a[v+16>>2]=0;m=a[209]|0;r=1<<j;do{if((m&r|0)==0){a[209]=m|r;a[C>>2]=n;a[v+24>>2]=C;a[v+12>>2]=v;a[v+8>>2]=v}else{if((j|0)==31){N=0}else{N=25-(j>>>1)|0}A=O<<N;z=a[C>>2]|0;while(1){if((a[z+4>>2]&-8|0)==(O|0)){break}q=z+16+(A>>>31<<2)|0;B=a[q>>2]|0;if((B|0)==0){L=621;break}else{A=A<<1;z=B}}if((L|0)==621){if(q>>>0<(a[212]|0)>>>0){ke()}else{a[q>>2]=n;a[v+24>>2]=z;a[v+12>>2]=v;a[v+8>>2]=v;break}}A=z+8|0;E=a[A>>2]|0;B=a[212]|0;if(z>>>0<B>>>0){ke()}if(E>>>0<B>>>0){ke()}else{a[E+12>>2]=n;a[A>>2]=n;a[v+8>>2]=E;a[v+12>>2]=z;a[v+24>>2]=0;break}}}while(0);v=(a[216]|0)-1|0;a[216]=v;if((v|0)==0){D=1288}else{return}while(1){v=a[D>>2]|0;if((v|0)==0){break}else{D=v+8|0}}a[216]=-1;return}function Kt(e,t){e=e|0;t=t|0;var r=0,n=0;do{if((e|0)==0){r=0}else{n=oe(t,e)|0;if((t|e)>>>0<=65535){r=n;break}r=((n>>>0)/(e>>>0)|0|0)==(t|0)?n:-1}}while(0);t=Vt(r)|0;if((t|0)==0){return t|0}if((a[t-4>>2]&3|0)==0){return t|0}en(t|0,0,r|0);return t|0}function Yt(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,o=0;if((e|0)==0){r=Vt(t)|0;return r|0}if(t>>>0>4294967231){a[(Qe()|0)>>2]=12;r=0;return r|0}if(t>>>0<11){n=16}else{n=t+11&-8}i=Qt(e-8|0,n)|0;if((i|0)!=0){r=i+8|0;return r|0}i=Vt(t)|0;if((i|0)==0){r=0;return r|0}n=a[e-4>>2]|0;o=(n&-8)-((n&3|0)==0?8:4)|0;n=o>>>0<t>>>0?o:t;Jr(i|0,e|0,n)|0;Wt(e);r=i;return r|0}function Xt(e,t){e=e|0;t=t|0;var r=0;if((e|0)==0){return 0}if(t>>>0>4294967231){a[(Qe()|0)>>2]=12;return 0}if(t>>>0<11){r=16}else{r=t+11&-8}t=e-8|0;return((Qt(t,r)|0)==(t|0)?e:0)|0}function Zt(e,t){e=e|0;t=t|0;var r=0;if(e>>>0<9){r=Vt(t)|0;return r|0}else{r=Gt(e,t)|0;return r|0}return 0}function Gt(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0;r=e>>>0<16?16:e;if((r-1&r|0)==0){n=r}else{e=16;while(1){if(e>>>0<r>>>0){e=e<<1}else{n=e;break}}}if((-64-n|0)>>>0<=t>>>0){a[(Qe()|0)>>2]=12;i=0;return i|0}if(t>>>0<11){o=16}else{o=t+11&-8}t=Vt(n+12+o|0)|0;if((t|0)==0){i=0;return i|0}e=t-8|0;r=e;f=n-1|0;do{if((t&f|0)==0){s=r}else{u=t+f&-n;c=u-8|0;h=e;if((c-h|0)>>>0>15){d=c}else{d=u+(n-8)|0}u=d;c=d-h|0;h=t-4|0;l=a[h>>2]|0;p=(l&-8)-c|0;if((l&3|0)==0){a[d>>2]=(a[e>>2]|0)+c;a[d+4>>2]=p;s=u;break}else{l=d+4|0;a[l>>2]=p|a[l>>2]&1|2;l=d+(p+4)|0;a[l>>2]=a[l>>2]|1;a[h>>2]=c|a[h>>2]&1|2;h=t+(c-4)|0;a[h>>2]=a[h>>2]|1;vr(r,c);s=u;break}}}while(0);r=s+4|0;t=a[r>>2]|0;do{if((t&3|0)!=0){d=t&-8;if(d>>>0<=(o+16|0)>>>0){break}e=d-o|0;n=s;a[r>>2]=o|t&1|2;a[n+(o|4)>>2]=e|3;f=n+(d|4)|0;a[f>>2]=a[f>>2]|1;vr(n+o|0,e)}}while(0);i=s+8|0;return i|0}function $t(e){e=e|0;var t=0,r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0;do{if((a[200]|0)==0){t=_e(8)|0;if((t-1&t|0)==0){a[202]=t;a[201]=t;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke();return 0}}}while(0);if(e>>>0>=4294967232){r=0;return r|0}t=a[214]|0;if((t|0)==0){r=0;return r|0}n=a[211]|0;do{if(n>>>0>(e+40|0)>>>0){i=a[202]|0;o=oe((((-40-e-1+n+i|0)>>>0)/(i>>>0)|0)-1|0,i)|0;f=t;s=1280;while(1){u=a[s>>2]|0;if(u>>>0<=f>>>0){if((u+(a[s+4>>2]|0)|0)>>>0>f>>>0){c=s;break}}u=a[s+8>>2]|0;if((u|0)==0){c=0;break}else{s=u}}if((a[c+12>>2]&8|0)!=0){break}s=Ge(0)|0;f=c+4|0;if((s|0)!=((a[c>>2]|0)+(a[f>>2]|0)|0)){break}u=Ge(-(o>>>0>2147483646?-2147483648-i|0:o)|0)|0;h=Ge(0)|0;if(!((u|0)!=-1&h>>>0<s>>>0)){break}u=s-h|0;if((s|0)==(h|0)){break}a[f>>2]=(a[f>>2]|0)-u;a[316]=(a[316]|0)-u;f=a[214]|0;d=(a[211]|0)-u|0;u=f;l=f+8|0;if((l&7|0)==0){p=0}else{p=-l&7}l=d-p|0;a[214]=u+p;a[211]=l;a[u+(p+4)>>2]=l|1;a[u+(d+4)>>2]=40;a[215]=a[204];r=(s|0)!=(h|0)|0;return r|0}}while(0);if((a[211]|0)>>>0<=(a[215]|0)>>>0){r=0;return r|0}a[215]=-1;r=0;return r|0}function Qt(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0;r=e+4|0;n=a[r>>2]|0;i=n&-8;o=e;f=o+i|0;s=f;u=a[212]|0;if(o>>>0<u>>>0){ke();return 0}c=n&3;if(!((c|0)!=1&o>>>0<f>>>0)){ke();return 0}h=o+(i|4)|0;d=a[h>>2]|0;if((d&1|0)==0){ke();return 0}if((c|0)==0){if(t>>>0<256){l=0;return l|0}do{if(i>>>0>=(t+4|0)>>>0){if((i-t|0)>>>0>a[202]<<1>>>0){break}else{l=e}return l|0}}while(0);l=0;return l|0}if(i>>>0>=t>>>0){c=i-t|0;if(c>>>0<=15){l=e;return l|0}a[r>>2]=n&1|t|2;a[o+(t+4)>>2]=c|3;a[h>>2]=a[h>>2]|1;vr(o+t|0,c);l=e;return l|0}if((s|0)==(a[214]|0)){c=(a[211]|0)+i|0;if(c>>>0<=t>>>0){l=0;return l|0}h=c-t|0;a[r>>2]=n&1|t|2;a[o+(t+4)>>2]=h|1;a[214]=o+t;a[211]=h;l=e;return l|0}if((s|0)==(a[213]|0)){h=(a[210]|0)+i|0;if(h>>>0<t>>>0){l=0;return l|0}c=h-t|0;if(c>>>0>15){a[r>>2]=n&1|t|2;a[o+(t+4)>>2]=c|1;a[o+h>>2]=c;p=o+(h+4)|0;a[p>>2]=a[p>>2]&-2;b=o+t|0;v=c}else{a[r>>2]=n&1|h|2;n=o+(h+4)|0;a[n>>2]=a[n>>2]|1;b=0;v=0}a[210]=v;a[213]=b;l=e;return l|0}if((d&2|0)!=0){l=0;return l|0}b=(d&-8)+i|0;if(b>>>0<t>>>0){l=0;return l|0}v=b-t|0;n=d>>>3;e:do{if(d>>>0<256){h=a[o+(i+8)>>2]|0;c=a[o+(i+12)>>2]|0;p=872+(n<<1<<2)|0;do{if((h|0)!=(p|0)){if(h>>>0<u>>>0){ke();return 0}if((a[h+12>>2]|0)==(s|0)){break}ke();return 0}}while(0);if((c|0)==(h|0)){a[208]=a[208]&~(1<<n);break}do{if((c|0)==(p|0)){m=c+8|0}else{if(c>>>0<u>>>0){ke();return 0}g=c+8|0;if((a[g>>2]|0)==(s|0)){m=g;break}ke();return 0}}while(0);a[h+12>>2]=c;a[m>>2]=h}else{p=f;g=a[o+(i+24)>>2]|0;y=a[o+(i+12)>>2]|0;do{if((y|0)==(p|0)){_=o+(i+20)|0;w=a[_>>2]|0;if((w|0)==0){x=o+(i+16)|0;k=a[x>>2]|0;if((k|0)==0){S=0;break}else{M=k;A=x}}else{M=w;A=_}while(1){_=M+20|0;w=a[_>>2]|0;if((w|0)!=0){M=w;A=_;continue}_=M+16|0;w=a[_>>2]|0;if((w|0)==0){break}else{M=w;A=_}}if(A>>>0<u>>>0){ke();return 0}else{a[A>>2]=0;S=M;break}}else{_=a[o+(i+8)>>2]|0;if(_>>>0<u>>>0){ke();return 0}w=_+12|0;if((a[w>>2]|0)!=(p|0)){ke();return 0}x=y+8|0;if((a[x>>2]|0)==(p|0)){a[w>>2]=y;a[x>>2]=_;S=y;break}else{ke();return 0}}}while(0);if((g|0)==0){break}y=o+(i+28)|0;h=1136+(a[y>>2]<<2)|0;do{if((p|0)==(a[h>>2]|0)){a[h>>2]=S;if((S|0)!=0){break}a[209]=a[209]&~(1<<a[y>>2]);break e}else{if(g>>>0<(a[212]|0)>>>0){ke();return 0}c=g+16|0;if((a[c>>2]|0)==(p|0)){a[c>>2]=S}else{a[g+20>>2]=S}if((S|0)==0){break e}}}while(0);if(S>>>0<(a[212]|0)>>>0){ke();return 0}a[S+24>>2]=g;p=a[o+(i+16)>>2]|0;do{if((p|0)!=0){if(p>>>0<(a[212]|0)>>>0){ke();return 0}else{a[S+16>>2]=p;a[p+24>>2]=S;break}}}while(0);p=a[o+(i+20)>>2]|0;if((p|0)==0){break}if(p>>>0<(a[212]|0)>>>0){ke();return 0}else{a[S+20>>2]=p;a[p+24>>2]=S;break}}}while(0);if(v>>>0<16){a[r>>2]=b|a[r>>2]&1|2;S=o+(b|4)|0;a[S>>2]=a[S>>2]|1;l=e;return l|0}else{a[r>>2]=a[r>>2]&1|t|2;a[o+(t+4)>>2]=v|3;r=o+(b|4)|0;a[r>>2]=a[r>>2]|1;vr(o+t|0,v);l=e;return l|0}return 0}function Jt(){return a[316]|0}function er(){return a[317]|0}function tr(){var e=0;e=a[318]|0;return((e|0)==0?-1:e)|0}function rr(e){e=e|0;var t=0,r=0;if((e|0)==-1){t=0}else{r=a[202]|0;t=e-1+r&-r}a[318]=t;return t|0}function nr(e){e=e|0;var t=0,r=0,n=0;do{if((e|0)==0){t=0}else{r=a[e-4>>2]|0;n=r&3;if((n|0)==1){t=0;break}t=(r&-8)-((n|0)==0?8:4)|0}}while(0);return t|0}function ir(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0,o=0;do{if((t|0)==8){n=Vt(r)|0}else{i=t>>>2;if((t&3|0)!=0|(i|0)==0){o=22;return o|0}if((i+1073741823&i|0)!=0){o=22;return o|0}if((-64-t|0)>>>0<r>>>0){o=12;return o|0}else{n=Gt(t>>>0<16?16:t,r)|0;break}}}while(0);if((n|0)==0){o=12;return o|0}a[e>>2]=n;o=0;return o|0}function ar(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0;n=h;h=h+8|0;i=n|0;a[i>>2]=t;t=ur(e,i,3,r)|0;h=n;return t|0}function or(e,t,r){e=e|0;t=t|0;r=r|0;return ur(e,t,0,r)|0}function fr(e){e=e|0;var t=0,r=0,n=0;if((a[200]|0)!=0){t=a[201]|0;r=Zt(t,e)|0;return r|0}n=_e(8)|0;if((n-1&n|0)!=0){ke();return 0}a[202]=n;a[201]=n;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;t=a[201]|0;r=Zt(t,e)|0;return r|0}function sr(e){e=e|0;var t=0;do{if((a[200]|0)==0){t=_e(8)|0;if((t-1&t|0)==0){a[202]=t;a[201]=t;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke();return 0}}}while(0);t=a[201]|0;return Zt(t,e-1+t&-t)|0}function ur(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0;do{if((a[200]|0)==0){i=_e(8)|0;if((i-1&i|0)==0){a[202]=i;a[201]=i;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke();return 0}}}while(0);i=(e|0)==0;do{if((n|0)==0){if(i){o=Vt(0)|0;return o|0}else{f=e<<2;if(f>>>0<11){s=0;u=16;break}s=0;u=f+11&-8;break}}else{if(i){o=n}else{s=n;u=0;break}return o|0}}while(0);do{if((r&1|0)==0){if(i){c=0;h=0;break}else{d=0;l=0}while(1){n=a[t+(l<<2)>>2]|0;if(n>>>0<11){p=16}else{p=n+11&-8}n=p+d|0;f=l+1|0;if((f|0)==(e|0)){c=0;h=n;break}else{d=n;l=f}}}else{f=a[t>>2]|0;if(f>>>0<11){b=16}else{b=f+11&-8}c=b;h=oe(b,e)|0}}while(0);b=Vt(u-4+h|0)|0;if((b|0)==0){o=0;return o|0}l=b-8|0;d=a[b-4>>2]&-8;if((r&2|0)!=0){en(b|0,0,-4-u+d|0)}if((s|0)==0){a[b+(h-4)>>2]=d-h|3;v=b+h|0;m=h}else{v=s;m=d}a[v>>2]=b;b=e-1|0;e:do{if((b|0)==0){g=l;y=m}else{if((c|0)==0){_=l;w=m;x=0}else{e=l;d=m;s=0;while(1){h=d-c|0;a[e+4>>2]=c|3;u=e+c|0;r=s+1|0;a[v+(r<<2)>>2]=e+(c+8);if((r|0)==(b|0)){g=u;y=h;break e}else{e=u;d=h;s=r}}}while(1){s=a[t+(x<<2)>>2]|0;if(s>>>0<11){k=16}else{k=s+11&-8}s=w-k|0;a[_+4>>2]=k|3;d=_+k|0;e=x+1|0;a[v+(e<<2)>>2]=_+(k+8);if((e|0)==(b|0)){g=d;y=s;break}else{_=d;w=s;x=e}}}}while(0);a[g+4>>2]=y|3;o=v;return o|0}function cr(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0;r=e+(t<<2)|0;e:do{if((t|0)!=0){n=e;t:while(1){i=a[n>>2]|0;r:do{if((i|0)==0){o=n+4|0}else{f=i-8|0;s=f;u=i-4|0;c=a[u>>2]&-8;a[n>>2]=0;if(f>>>0<(a[212]|0)>>>0){h=935;break t}f=a[u>>2]|0;if((f&3|0)==1){h=936;break t}d=n+4|0;l=f-8&-8;do{if((d|0)!=(r|0)){if((a[d>>2]|0)!=(i+(l+8)|0)){break}p=(a[i+(l|4)>>2]&-8)+c|0;a[u>>2]=f&1|p|2;b=i+(p-4)|0;a[b>>2]=a[b>>2]|1;a[d>>2]=i;o=d;break r}}while(0);vr(s,c);o=d}}while(0);if((o|0)==(r|0)){break e}else{n=o}}if((h|0)==935){ke();return 0}else if((h|0)==936){ke();return 0}}}while(0);if((a[211]|0)>>>0<=(a[215]|0)>>>0){return 0}$t(0)|0;return 0}function hr(e){e=e|0;var t=0,r=0;if((a[200]|0)!=0){t=$t(e)|0;return t|0}r=_e(8)|0;if((r-1&r|0)!=0){ke();return 0}a[202]=r;a[201]=r;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;t=$t(e)|0;return t|0}function dr(e){e=e|0;var t=0,r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0;do{if((a[200]|0)==0){t=_e(8)|0;if((t-1&t|0)==0){a[202]=t;a[201]=t;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke()}}}while(0);t=a[214]|0;if((t|0)==0){r=0;n=0;i=0;o=0;f=0;s=0;u=0}else{c=a[211]|0;h=c+40|0;d=1;l=h;p=h;h=1280;while(1){b=a[h>>2]|0;v=b+8|0;if((v&7|0)==0){m=0}else{m=-v&7}v=b+(a[h+4>>2]|0)|0;g=d;y=l;_=p;w=b+m|0;while(1){if(w>>>0>=v>>>0|(w|0)==(t|0)){x=g;k=y;S=_;break}M=a[w+4>>2]|0;if((M|0)==7){x=g;k=y;S=_;break}A=M&-8;E=A+_|0;if((M&3|0)==1){I=A+y|0;T=g+1|0}else{I=y;T=g}M=w+A|0;if(M>>>0<b>>>0){x=T;k=I;S=E;break}else{g=T;y=I;_=E;w=M}}w=a[h+8>>2]|0;if((w|0)==0){break}else{d=x;l=k;p=S;h=w}}h=a[316]|0;r=c;n=S;i=x;o=h-S|0;f=a[317]|0;s=h-k|0;u=k}a[e>>2]=n;a[e+4>>2]=i;i=e+8|0;a[i>>2]=0;a[i+4>>2]=0;a[e+16>>2]=o;a[e+20>>2]=f;a[e+24>>2]=0;a[e+28>>2]=s;a[e+32>>2]=u;a[e+36>>2]=r;return}function lr(){var e=0,t=0,r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,d=0,l=0,p=0,b=0,v=0,g=0,y=0,_=0;e=h;do{if((a[200]|0)==0){t=_e(8)|0;if((t-1&t|0)==0){a[202]=t;a[201]=t;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke()}}}while(0);t=a[214]|0;if((t|0)==0){r=0;n=0;i=0}else{o=a[317]|0;f=a[316]|0;s=f-40-(a[211]|0)|0;u=1280;while(1){c=a[u>>2]|0;d=c+8|0;if((d&7|0)==0){l=0}else{l=-d&7}d=c+(a[u+4>>2]|0)|0;p=s;b=c+l|0;while(1){if(b>>>0>=d>>>0|(b|0)==(t|0)){v=p;break}g=a[b+4>>2]|0;if((g|0)==7){v=p;break}y=g&-8;_=p-((g&3|0)==1?y:0)|0;g=b+y|0;if(g>>>0<c>>>0){v=_;break}else{p=_;b=g}}b=a[u+8>>2]|0;if((b|0)==0){r=v;n=f;i=o;break}else{s=v;u=b}}}Se(a[m>>2]|0,520,(E=h,h=h+8|0,a[E>>2]=i,E)|0)|0;Se(a[m>>2]|0,488,(E=h,h=h+8|0,a[E>>2]=n,E)|0)|0;Se(a[m>>2]|0,400,(E=h,h=h+8|0,a[E>>2]=r,E)|0)|0;h=e;return}function pr(e,t){e=e|0;t=t|0;var r=0,n=0;do{if((a[200]|0)==0){r=_e(8)|0;if((r-1&r|0)==0){a[202]=r;a[201]=r;a[203]=-1;a[204]=2097152;a[205]=0;a[319]=0;a[200]=(tt(0)|0)&-16^1431655768;break}else{ke();return 0}}}while(0);if((e|0)==(-1|0)){a[204]=t;n=1;return n|0}else if((e|0)==(-2|0)){if((a[201]|0)>>>0>t>>>0){n=0;return n|0}if((t-1&t|0)!=0){n=0;return n|0}a[202]=t;n=1;return n|0}else if((e|0)==(-3|0)){a[203]=t;n=1;return n|0}else{n=0;return n|0}return 0}function br(){return(C=a[328]|0,a[328]=C+0,C)|0}function vr(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,j=0,N=0;r=e;n=r+t|0;i=n;o=a[e+4>>2]|0;e:do{if((o&1|0)==0){f=a[e>>2]|0;if((o&3|0)==0){return}s=r+(-f|0)|0;u=s;c=f+t|0;h=a[212]|0;if(s>>>0<h>>>0){ke()}if((u|0)==(a[213]|0)){d=r+(t+4)|0;if((a[d>>2]&3|0)!=3){l=u;p=c;break}a[210]=c;a[d>>2]=a[d>>2]&-2;a[r+(4-f)>>2]=c|1;a[n>>2]=c;return}d=f>>>3;if(f>>>0<256){b=a[r+(8-f)>>2]|0;v=a[r+(12-f)>>2]|0;m=872+(d<<1<<2)|0;do{if((b|0)!=(m|0)){if(b>>>0<h>>>0){ke()}if((a[b+12>>2]|0)==(u|0)){break}ke()}}while(0);if((v|0)==(b|0)){a[208]=a[208]&~(1<<d);l=u;p=c;break}do{if((v|0)==(m|0)){g=v+8|0}else{if(v>>>0<h>>>0){ke()}y=v+8|0;if((a[y>>2]|0)==(u|0)){g=y;break}ke()}}while(0);a[b+12>>2]=v;a[g>>2]=b;l=u;p=c;break}m=s;d=a[r+(24-f)>>2]|0;y=a[r+(12-f)>>2]|0;do{if((y|0)==(m|0)){_=16-f|0;w=r+(_+4)|0;x=a[w>>2]|0;if((x|0)==0){k=r+_|0;_=a[k>>2]|0;if((_|0)==0){S=0;break}else{M=_;A=k}}else{M=x;A=w}while(1){w=M+20|0;x=a[w>>2]|0;if((x|0)!=0){M=x;A=w;continue}w=M+16|0;x=a[w>>2]|0;if((x|0)==0){break}else{M=x;A=w}}if(A>>>0<h>>>0){ke()}else{a[A>>2]=0;S=M;break}}else{w=a[r+(8-f)>>2]|0;if(w>>>0<h>>>0){ke()}x=w+12|0;if((a[x>>2]|0)!=(m|0)){ke()}k=y+8|0;if((a[k>>2]|0)==(m|0)){a[x>>2]=y;a[k>>2]=w;S=y;break}else{ke()}}}while(0);if((d|0)==0){l=u;p=c;break}y=r+(28-f)|0;h=1136+(a[y>>2]<<2)|0;do{if((m|0)==(a[h>>2]|0)){a[h>>2]=S;if((S|0)!=0){break}a[209]=a[209]&~(1<<a[y>>2]);l=u;p=c;break e}else{if(d>>>0<(a[212]|0)>>>0){ke()}s=d+16|0;if((a[s>>2]|0)==(m|0)){a[s>>2]=S}else{a[d+20>>2]=S}if((S|0)==0){l=u;p=c;break e}}}while(0);if(S>>>0<(a[212]|0)>>>0){ke()}a[S+24>>2]=d;m=16-f|0;y=a[r+m>>2]|0;do{if((y|0)!=0){if(y>>>0<(a[212]|0)>>>0){ke()}else{a[S+16>>2]=y;a[y+24>>2]=S;break}}}while(0);y=a[r+(m+4)>>2]|0;if((y|0)==0){l=u;p=c;break}if(y>>>0<(a[212]|0)>>>0){ke()}else{a[S+20>>2]=y;a[y+24>>2]=S;l=u;p=c;break}}else{l=e;p=t}}while(0);e=a[212]|0;if(n>>>0<e>>>0){ke()}S=r+(t+4)|0;M=a[S>>2]|0;do{if((M&2|0)==0){if((i|0)==(a[214]|0)){A=(a[211]|0)+p|0;a[211]=A;a[214]=l;a[l+4>>2]=A|1;if((l|0)!=(a[213]|0)){return}a[213]=0;a[210]=0;return}if((i|0)==(a[213]|0)){A=(a[210]|0)+p|0;a[210]=A;a[213]=l;a[l+4>>2]=A|1;a[l+A>>2]=A;return}A=(M&-8)+p|0;g=M>>>3;e:do{if(M>>>0<256){o=a[r+(t+8)>>2]|0;y=a[r+(t+12)>>2]|0;f=872+(g<<1<<2)|0;do{if((o|0)!=(f|0)){if(o>>>0<e>>>0){ke()}if((a[o+12>>2]|0)==(i|0)){break}ke()}}while(0);if((y|0)==(o|0)){a[208]=a[208]&~(1<<g);break}do{if((y|0)==(f|0)){E=y+8|0}else{if(y>>>0<e>>>0){ke()}d=y+8|0;if((a[d>>2]|0)==(i|0)){E=d;break}ke()}}while(0);a[o+12>>2]=y;a[E>>2]=o}else{f=n;d=a[r+(t+24)>>2]|0;h=a[r+(t+12)>>2]|0;do{if((h|0)==(f|0)){s=r+(t+20)|0;b=a[s>>2]|0;if((b|0)==0){v=r+(t+16)|0;w=a[v>>2]|0;if((w|0)==0){I=0;break}else{T=w;B=v}}else{T=b;B=s}while(1){s=T+20|0;b=a[s>>2]|0;if((b|0)!=0){T=b;B=s;continue}s=T+16|0;b=a[s>>2]|0;if((b|0)==0){break}else{T=b;B=s}}if(B>>>0<e>>>0){ke()}else{a[B>>2]=0;I=T;break}}else{s=a[r+(t+8)>>2]|0;if(s>>>0<e>>>0){ke()}b=s+12|0;if((a[b>>2]|0)!=(f|0)){ke()}v=h+8|0;if((a[v>>2]|0)==(f|0)){a[b>>2]=h;a[v>>2]=s;I=h;break}else{ke()}}}while(0);if((d|0)==0){break}h=r+(t+28)|0;o=1136+(a[h>>2]<<2)|0;do{if((f|0)==(a[o>>2]|0)){a[o>>2]=I;if((I|0)!=0){break}a[209]=a[209]&~(1<<a[h>>2]);break e}else{if(d>>>0<(a[212]|0)>>>0){ke()}y=d+16|0;if((a[y>>2]|0)==(f|0)){a[y>>2]=I}else{a[d+20>>2]=I}if((I|0)==0){break e}}}while(0);if(I>>>0<(a[212]|0)>>>0){ke()}a[I+24>>2]=d;f=a[r+(t+16)>>2]|0;do{if((f|0)!=0){if(f>>>0<(a[212]|0)>>>0){ke()}else{a[I+16>>2]=f;a[f+24>>2]=I;break}}}while(0);f=a[r+(t+20)>>2]|0;if((f|0)==0){break}if(f>>>0<(a[212]|0)>>>0){ke()}else{a[I+20>>2]=f;a[f+24>>2]=I;break}}}while(0);a[l+4>>2]=A|1;a[l+A>>2]=A;if((l|0)!=(a[213]|0)){R=A;break}a[210]=A;return}else{a[S>>2]=M&-2;a[l+4>>2]=p|1;a[l+p>>2]=p;R=p}}while(0);p=R>>>3;if(R>>>0<256){M=p<<1;S=872+(M<<2)|0;I=a[208]|0;t=1<<p;do{if((I&t|0)==0){a[208]=I|t;P=S;O=872+(M+2<<2)|0}else{p=872+(M+2<<2)|0;r=a[p>>2]|0;if(r>>>0>=(a[212]|0)>>>0){P=r;O=p;break}ke()}}while(0);a[O>>2]=l;a[P+12>>2]=l;a[l+8>>2]=P;a[l+12>>2]=S;return}S=l;P=R>>>8;do{if((P|0)==0){C=0}else{if(R>>>0>16777215){C=31;break}O=(P+1048320|0)>>>16&8;M=P<<O;t=(M+520192|0)>>>16&4;I=M<<t;M=(I+245760|0)>>>16&2;p=14-(t|O|M)+(I<<M>>>15)|0;C=R>>>((p+7|0)>>>0)&1|p<<1}}while(0);P=1136+(C<<2)|0;a[l+28>>2]=C;a[l+20>>2]=0;a[l+16>>2]=0;p=a[209]|0;M=1<<C;if((p&M|0)==0){a[209]=p|M;a[P>>2]=S;a[l+24>>2]=P;a[l+12>>2]=l;a[l+8>>2]=l;return}if((C|0)==31){z=0}else{z=25-(C>>>1)|0}C=R<<z;z=a[P>>2]|0;while(1){if((a[z+4>>2]&-8|0)==(R|0)){break}j=z+16+(C>>>31<<2)|0;P=a[j>>2]|0;if((P|0)==0){N=1120;break}else{C=C<<1;z=P}}if((N|0)==1120){if(j>>>0<(a[212]|0)>>>0){ke()}a[j>>2]=S;a[l+24>>2]=z;a[l+12>>2]=l;a[l+8>>2]=l;return}j=z+8|0;N=a[j>>2]|0;C=a[212]|0;if(z>>>0<C>>>0){ke()}if(N>>>0<C>>>0){ke()}a[N+12>>2]=S;a[j>>2]=S;a[l+8>>2]=N;a[l+12>>2]=z;a[l+24>>2]=0;return}function mr(e){e=e|0;var t=0,r=0,n=0;t=(e|0)==0?1:e;while(1){r=Vt(t)|0;if((r|0)!=0){n=1164;break}e=(C=a[328]|0,a[328]=C+0,C);if((e|0)==0){break}On[e&1]()}if((n|0)==1164){return r|0}r=qe(4)|0;a[r>>2]=560;we(r|0,688,6);return 0}function gr(e,t){e=e|0;t=t|0;return mr(e)|0}function yr(e){e=e|0;return}function _r(e){e=e|0;return 360|0}function wr(e){e=e|0;return 448|0}function xr(e){e=e|0;return(C=a[328]|0,a[328]=e,C)|0}function kr(e){e=e|0;a[e>>2]=560;return}function Sr(e){e=e|0;a[e>>2]=592;return}function Mr(e){e=e|0;if((e|0)!=0){Wt(e)}return}function Ar(e,t){e=e|0;t=t|0;Mr(e);return}function Er(e){e=e|0;Mr(e);return}function Ir(e,t){e=e|0;t=t|0;Er(e);return}function Tr(e){e=e|0;Mr(e);return}function Br(e){e=e|0;Mr(e);return}function Rr(e,t,r){e=e|0;t=t|0;r=r|0;return Pr(e,t,r,0,0,0)|0}function Pr(e,t,r,i,o,f){e=e|0;t=t|0;r=r|0;i=i|0;o=o|0;f=f|0;var s=0,u=0,c=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,j=0,N=0,q=0,L=0,D=0,H=0,F=0,U=0,V=0,W=0,K=0,Y=0,X=0,Z=0,G=0,$=0,Q=0,J=0,ee=0,te=0,re=0,ne=0;s=h;if((r|0)==0){u=-1;h=s;return u|0}c=a[44]|0;if((c|0)==0){a[196]=1;a[44]=1;d=1;l=1;p=1190}else{b=a[196]|0;v=a[74]|0;if((v|0)==-1|(b|0)!=0){d=b;l=c;p=1190}else{m=v;g=b;y=c}}if((p|0)==1190){c=(Ve(344)|0)!=0|0;a[74]=c;m=c;g=d;y=l}l=n[r]|0;if(l<<24>>24==45){_=f|2;p=1194}else{d=(m|0)!=0|l<<24>>24==43?f&-2:f;if(l<<24>>24==43){_=d;p=1194}else{w=r;x=d}}if((p|0)==1194){w=r+1|0;x=_}a[198]=0;if((g|0)==0){k=y;p=1198}else{a[50]=-1;a[48]=-1;S=y;M=g;p=1197}while(1){if((p|0)==1197){p=0;if((M|0)==0){k=S;p=1198;continue}else{A=S}}else if((p|0)==1198){p=0;g=a[40]|0;if((n[g]|0)==0){A=k}else{I=g;T=k;break}}a[196]=0;if((A|0)>=(e|0)){p=1200;break}B=t+(A<<2)|0;R=a[B>>2]|0;a[40]=R;if((n[R]|0)==45){P=R+1|0;O=n[P]|0;if(O<<24>>24!=0){p=1232;break}if((Be(w|0,45)|0)!=0){p=1232;break}}a[40]=824;if((x&2|0)!=0){p=1217;break}if((x&1|0)==0){u=-1;p=1298;break}g=a[48]|0;do{if((g|0)==-1){a[48]=A;C=A;z=0}else{y=a[50]|0;if((y|0)==-1){C=A;z=0;break}_=y-g|0;r=A-y|0;d=(_|0)%(r|0)|0;if((d|0)==0){j=r}else{l=r;f=d;while(1){d=(l|0)%(f|0)|0;if((d|0)==0){j=f;break}else{l=f;f=d}}}f=(A-g|0)/(j|0)|0;do{if((j|0)>0){l=-_|0;if((f|0)>0){N=0}else{q=A;L=y;D=g;H=0;break}do{d=N+y|0;m=t+(d<<2)|0;c=0;b=d;d=a[m>>2]|0;while(1){v=((b|0)<(y|0)?r:l)+b|0;F=t+(v<<2)|0;U=a[F>>2]|0;a[F>>2]=d;a[m>>2]=U;F=c+1|0;if((F|0)<(f|0)){c=F;b=v;d=U}else{break}}N=N+1|0}while((N|0)<(j|0));q=a[44]|0;L=a[50]|0;D=a[48]|0;H=a[196]|0}else{q=A;L=y;D=g;H=0}}while(0);a[48]=q-L+D;a[50]=-1;C=q;z=H}}while(0);g=C+1|0;a[44]=g;S=g;M=z;p=1197}do{if((p|0)==1298){h=s;return u|0}else if((p|0)==1232){z=a[48]|0;M=a[50]|0;if((z|0)!=-1&(M|0)==-1){a[50]=A;V=n[P]|0;W=A}else{V=O;W=M}if(V<<24>>24==0){I=R;T=A;break}a[40]=P;if((n[P]|0)!=45){I=P;T=A;break}if((n[R+2|0]|0)!=0){I=P;T=A;break}M=A+1|0;a[44]=M;a[40]=824;if((W|0)!=-1){S=W-z|0;C=M-W|0;H=(S|0)%(C|0)|0;if((H|0)==0){K=C}else{q=C;D=H;while(1){H=(q|0)%(D|0)|0;if((H|0)==0){K=D;break}else{q=D;D=H}}}D=(M-z|0)/(K|0)|0;do{if((K|0)>0){q=-S|0;if((D|0)>0){Y=0}else{X=W;Z=z;G=M;break}do{H=Y+W|0;L=t+(H<<2)|0;j=0;N=H;H=a[L>>2]|0;while(1){k=((N|0)<(W|0)?C:q)+N|0;g=t+(k<<2)|0;y=a[g>>2]|0;a[g>>2]=H;a[L>>2]=y;g=j+1|0;if((g|0)<(D|0)){j=g;N=k;H=y}else{break}}Y=Y+1|0}while((Y|0)<(K|0));X=a[50]|0;Z=a[48]|0;G=a[44]|0}else{X=W;Z=z;G=M}}while(0);a[44]=Z-X+G}a[50]=-1;a[48]=-1;u=-1;h=s;return u|0}else if((p|0)==1200){a[40]=824;M=a[50]|0;z=a[48]|0;do{if((M|0)==-1){if((z|0)==-1){break}a[44]=z}else{D=M-z|0;C=A-M|0;S=(D|0)%(C|0)|0;if((S|0)==0){$=C}else{q=C;H=S;while(1){S=(q|0)%(H|0)|0;if((S|0)==0){$=H;break}else{q=H;H=S}}}H=(A-z|0)/($|0)|0;do{if(($|0)>0){q=-D|0;if((H|0)>0){Q=0}else{J=M;ee=z;te=A;break}do{S=Q+M|0;N=t+(S<<2)|0;j=0;L=S;S=a[N>>2]|0;while(1){y=((L|0)<(M|0)?C:q)+L|0;k=t+(y<<2)|0;g=a[k>>2]|0;a[k>>2]=S;a[N>>2]=g;k=j+1|0;if((k|0)<(H|0)){j=k;L=y;S=g}else{break}}Q=Q+1|0}while((Q|0)<($|0));J=a[50]|0;ee=a[48]|0;te=a[44]|0}else{J=M;ee=z;te=A}}while(0);a[44]=ee-J+te}}while(0);a[50]=-1;a[48]=-1;u=-1;h=s;return u|0}else if((p|0)==1217){a[44]=A+1;a[198]=a[B>>2];u=1;h=s;return u|0}}while(0);B=(i|0)!=0;e:do{if(B){if((I|0)==(a[t+(T<<2)>>2]|0)){re=I;break}A=n[I]|0;do{if(A<<24>>24==45){a[40]=I+1;ne=0}else{if((x&4|0)==0){re=I;break e}if(A<<24>>24==58){ne=0;break}ne=(Be(w|0,A<<24>>24|0)|0)!=0|0}}while(0);A=qr(t,w,i,o,ne)|0;if((A|0)==-1){re=a[40]|0;break}a[40]=824;u=A;h=s;return u|0}else{re=I}}while(0);I=re+1|0;a[40]=I;ne=n[re]|0;re=ne<<24>>24;if((ne<<24>>24|0)==45){if((n[I]|0)==0){p=1260}}else if((ne<<24>>24|0)==58){p=1263}else{p=1260}do{if((p|0)==1260){x=Be(w|0,re|0)|0;if((x|0)==0){if(ne<<24>>24!=45){p=1263;break}if((n[I]|0)==0){u=-1}else{break}h=s;return u|0}T=n[x+1|0]|0;if(B&ne<<24>>24==87&T<<24>>24==59){do{if((n[I]|0)==0){A=(a[44]|0)+1|0;a[44]=A;if((A|0)<(e|0)){a[40]=a[t+(A<<2)>>2];break}a[40]=824;do{if((a[46]|0)!=0){if((n[w]|0)==58){break}Dr(48,(E=h,h=h+8|0,a[E>>2]=re,E)|0)}}while(0);a[42]=re;u=(n[w]|0)==58?58:63;h=s;return u|0}}while(0);A=qr(t,w,i,o,0)|0;a[40]=824;u=A;h=s;return u|0}if(T<<24>>24!=58){if((n[I]|0)!=0){u=re;h=s;return u|0}a[44]=(a[44]|0)+1;u=re;h=s;return u|0}a[198]=0;do{if((n[I]|0)==0){if((n[x+2|0]|0)==58){break}A=(a[44]|0)+1|0;a[44]=A;if((A|0)<(e|0)){a[198]=a[t+(A<<2)>>2];break}a[40]=824;do{if((a[46]|0)!=0){if((n[w]|0)==58){break}Dr(48,(E=h,h=h+8|0,a[E>>2]=re,E)|0)}}while(0);a[42]=re;u=(n[w]|0)==58?58:63;h=s;return u|0}else{a[198]=I}}while(0);a[40]=824;a[44]=(a[44]|0)+1;u=re;h=s;return u|0}}while(0);do{if((p|0)==1263){if((n[I]|0)!=0){break}a[44]=(a[44]|0)+1}}while(0);do{if((a[46]|0)!=0){if((n[w]|0)==58){break}Dr(272,(E=h,h=h+8|0,a[E>>2]=re,E)|0)}}while(0);a[42]=re;u=63;h=s;return u|0}function Or(e,t,r,n,i){e=e|0;t=t|0;r=r|0;n=n|0;i=i|0;return Pr(e,t,r,n,i,1)|0}function Cr(e,t,r,n,i){e=e|0;t=t|0;r=r|0;n=n|0;i=i|0;return Pr(e,t,r,n,i,5)|0}function zr(e){e=e|0;return mr(e)|0}function jr(e,t){e=e|0;t=t|0;return zr(e)|0}function Nr(){var e=0;e=qe(4)|0;a[e>>2]=560;we(e|0,688,6)}function qr(e,t,r,i,o){e=e|0;t=t|0;r=r|0;i=i|0;o=o|0;var f=0,s=0,u=0,c=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0;f=h;s=a[40]|0;u=a[44]|0;c=u+1|0;a[44]=c;d=Be(s|0,61)|0;if((d|0)==0){l=tn(s|0)|0;p=0}else{l=d-s|0;p=d+1|0}d=a[r>>2]|0;e:do{if((d|0)!=0){t:do{if((o|0)!=0&(l|0)==1){b=0;v=d;while(1){if((n[s]|0)==(n[v]|0)){if((tn(v|0)|0)==1){m=b;break t}}b=b+1|0;v=a[r+(b<<4)>>2]|0;if((v|0)==0){break e}}}else{v=0;b=-1;g=d;while(1){if((ge(s|0,g|0,l|0)|0)==0){if((tn(g|0)|0)==(l|0)){m=v;break t}if((b|0)==-1){y=v}else{break}}else{y=b}_=v+1|0;w=a[r+(_<<4)>>2]|0;if((w|0)==0){m=y;break t}else{v=_;b=y;g=w}}do{if((a[46]|0)!=0){if((n[t]|0)==58){break}Dr(304,(E=h,h=h+16|0,a[E>>2]=l,a[E+8>>2]=s,E)|0)}}while(0);a[42]=0;x=63;h=f;return x|0}}while(0);if((m|0)==-1){break}g=r+(m<<4)+4|0;b=a[g>>2]|0;v=(p|0)==0;if(!((b|0)!=0|v)){do{if((a[46]|0)!=0){if((n[t]|0)==58){break}Dr(208,(E=h,h=h+16|0,a[E>>2]=l,a[E+8>>2]=s,E)|0)}}while(0);if((a[r+(m<<4)+8>>2]|0)==0){k=a[r+(m<<4)+12>>2]|0}else{k=0}a[42]=k;x=(n[t]|0)==58?58:63;h=f;return x|0}do{if((b-1|0)>>>0<2){if(!v){a[198]=p;break}if((b|0)!=1){break}a[44]=u+2;a[198]=a[e+(c<<2)>>2]}}while(0);if(!((a[g>>2]|0)==1&(a[198]|0)==0)){if((i|0)!=0){a[i>>2]=m}b=a[r+(m<<4)+8>>2]|0;v=a[r+(m<<4)+12>>2]|0;if((b|0)==0){x=v;h=f;return x|0}a[b>>2]=v;x=0;h=f;return x|0}do{if((a[46]|0)!=0){if((n[t]|0)==58){break}Dr(8,(E=h,h=h+8|0,a[E>>2]=s,E)|0)}}while(0);if((a[r+(m<<4)+8>>2]|0)==0){S=a[r+(m<<4)+12>>2]|0}else{S=0}a[42]=S;a[44]=(a[44]|0)-1;x=(n[t]|0)==58?58:63;h=f;return x|0}}while(0);if((o|0)!=0){a[44]=u;x=-1;h=f;return x|0}do{if((a[46]|0)!=0){if((n[t]|0)==58){break}Dr(248,(E=h,h=h+8|0,a[E>>2]=s,E)|0)}}while(0);a[42]=0;x=63;h=f;return x|0}function Lr(e,t){e=e|0;t=t|0;var r=0,n=0,i=0;r=h;h=h+16|0;n=r|0;i=n;a[i>>2]=t;a[i+4>>2]=0;Hr(e,n|0);h=r;return}function Dr(e,t){e=e|0;t=t|0;var r=0,n=0,i=0;r=h;h=h+16|0;n=r|0;i=n;a[i>>2]=t;a[i+4>>2]=0;Fr(e,n|0);h=r;return}function Hr(e,t){e=e|0;t=t|0;var r=0,n=0,i=0;r=h;n=a[(Qe()|0)>>2]|0;i=a[_>>2]|0;Se(a[m>>2]|0,432,(E=h,h=h+8|0,a[E>>2]=i,E)|0)|0;if((e|0)!=0){i=a[m>>2]|0;We(i|0,e|0,t|0)|0;t=a[m>>2]|0;Oe(472,2,1,t|0)|0}t=a[m>>2]|0;e=xe(n|0)|0;Se(t|0,384,(E=h,h=h+8|0,a[E>>2]=e,E)|0)|0;h=r;return}function Fr(e,t){e=e|0;t=t|0;var r=0,n=0;r=h;n=a[_>>2]|0;Se(a[m>>2]|0,376,(E=h,h=h+8|0,a[E>>2]=n,E)|0)|0;if((e|0)!=0){n=a[m>>2]|0;We(n|0,e|0,t|0)|0}Re(10,a[m>>2]|0)|0;h=r;return}function Ur(e,t){e=e|0;t=t|0;var r=0,i=0,o=0,f=0,s=0,u=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,j=0,N=0,q=0,L=0,D=0,H=0,F=0,U=0,V=0;r=e;while(1){i=r+1|0;if((Le(n[r]|0)|0)==0){break}else{r=i}}o=n[r]|0;if((o<<24>>24|0)==45){f=i;s=1}else if((o<<24>>24|0)==43){f=i;s=0}else{f=r;s=0}r=-1;i=0;o=f;while(1){u=n[o]|0;if(((u<<24>>24)-48|0)>>>0<10){h=r}else{if(u<<24>>24!=46|(r|0)>-1){break}else{h=i}}r=h;i=i+1|0;o=o+1|0}h=o+(-i|0)|0;f=(r|0)<0;d=((f^1)<<31>>31)+i|0;l=(d|0)>18;p=(l?-18:-d|0)+(f?i:r)|0;r=l?18:d;do{if((r|0)==0){b=e;v=0}else{if((r|0)>9){d=h;l=r;i=0;while(1){f=n[d]|0;m=d+1|0;if(f<<24>>24==46){g=n[m]|0;y=d+2|0}else{g=f;y=m}_=(i*10|0)-48+(g<<24>>24)|0;m=l-1|0;if((m|0)>9){d=y;l=m;i=_}else{break}}w=+(_|0)*1e9;x=9;k=y;S=1393}else{if((r|0)>0){w=0;x=r;k=h;S=1393}else{M=0;A=0}}if((S|0)==1393){i=k;l=x;d=0;while(1){m=n[i]|0;f=i+1|0;if(m<<24>>24==46){E=n[f]|0;I=i+2|0}else{E=m;I=f}T=(d*10|0)-48+(E<<24>>24)|0;f=l-1|0;if((f|0)>0){i=I;l=f;d=T}else{break}}M=+(T|0);A=w}B=A+M;do{if((u<<24>>24|0)==69|(u<<24>>24|0)==101){d=o+1|0;l=n[d]|0;if((l<<24>>24|0)==43){R=o+2|0;P=0}else if((l<<24>>24|0)==45){R=o+2|0;P=1}else{R=d;P=0}d=n[R]|0;if(((d<<24>>24)-48|0)>>>0<10){O=R;C=0;z=d}else{j=0;N=R;q=P;break}while(1){d=(C*10|0)-48+(z<<24>>24)|0;l=O+1|0;i=n[l]|0;if(((i<<24>>24)-48|0)>>>0<10){O=l;C=d;z=i}else{j=d;N=l;q=P;break}}}else{j=0;N=o;q=0}}while(0);l=p+((q|0)==0?j:-j|0)|0;d=(l|0)<0?-l|0:l;if((d|0)>511){a[(Qe()|0)>>2]=34;L=1;D=88;H=511;S=1410}else{if((d|0)==0){F=1}else{L=1;D=88;H=d;S=1410}}if((S|0)==1410){while(1){S=0;if((H&1|0)==0){U=L}else{U=L*+c[D>>3]}d=H>>1;if((d|0)==0){F=U;break}else{L=U;D=D+8|0;H=d;S=1410}}}if((l|0)>-1){b=N;v=B*F;break}else{b=N;v=B/F;break}}}while(0);if((t|0)!=0){a[t>>2]=b}if((s|0)==0){V=v;return+V}V=-0-v;return+V}function Vr(e,t){e=e|0;t=t|0;return+ +Ur(e,t)}function Wr(e,t){e=e|0;t=t|0;return+ +Ur(e,t)}function Kr(e,t,r){e=e|0;t=t|0;r=r|0;return+ +Ur(e,t)}function Yr(e,t,r){e=e|0;t=t|0;r=r|0;return+ +Ur(e,t)}function Xr(e){e=e|0;return+ +Ur(e,0)}function Zr(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0;n=h;h=h+16|0;i=n|0;n=i;a[n>>2]=r;a[n+4>>2]=0;$r(e,t,i|0)}function Gr(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0;n=h;h=h+16|0;i=n|0;n=i;a[n>>2]=r;a[n+4>>2]=0;Qr(e,t,i|0)}function $r(e,t,r){e=e|0;t=t|0;r=r|0;var n=0,i=0;n=a[(Qe()|0)>>2]|0;i=a[_>>2]|0;Se(a[m>>2]|0,336,(E=h,h=h+8|0,a[E>>2]=i,E)|0)|0;if((t|0)!=0){i=a[m>>2]|0;We(i|0,t|0,r|0)|0;r=a[m>>2]|0;Oe(480,2,1,r|0)|0}r=a[m>>2]|0;t=xe(n|0)|0;Se(r|0,392,(E=h,h=h+8|0,a[E>>2]=t,E)|0)|0;je(e|0)}function Qr(e,t,r){e=e|0;t=t|0;r=r|0;var n=0;n=a[_>>2]|0;Se(a[m>>2]|0,440,(E=h,h=h+8|0,a[E>>2]=n,E)|0)|0;if((t|0)!=0){n=a[m>>2]|0;We(n|0,t|0,r|0)|0}Re(10,a[m>>2]|0)|0;je(e|0)}function Jr(e,t,r){e=e|0;t=t|0;r=r|0;var i=0;i=e|0;if((e&3)==(t&3)){while(e&3){if((r|0)==0)return i|0;n[e]=n[t]|0;e=e+1|0;t=t+1|0;r=r-1|0}while((r|0)>=4){a[e>>2]=a[t>>2];e=e+4|0;t=t+4|0;r=r-4|0}}while((r|0)>0){n[e]=n[t]|0;e=e+1|0;t=t+1|0;r=r-1|0}return i|0}function en(e,t,r){e=e|0;t=t|0;r=r|0;var i=0,o=0,f=0;i=e+r|0;if((r|0)>=20){t=t&255;r=e&3;o=t|t<<8|t<<16|t<<24;f=i&~3;if(r){r=e+4-r|0;while((e|0)<(r|0)){n[e]=t;e=e+1|0}}while((e|0)<(f|0)){a[e>>2]=o;e=e+4|0}}while((e|0)<(i|0)){n[e]=t;e=e+1|0}}function tn(e){e=e|0;var t=0;t=e;while(n[t]|0){t=t+1|0}return t-e|0}function rn(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0;i=e+r>>>0;return(j=t+n+(i>>>0<e>>>0|0)>>>0,i|0)|0}function nn(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0;i=t-n>>>0;i=t-n-(r>>>0>e>>>0|0)>>>0;return(j=i,e-r>>>0|0)|0}function an(e,t,r){e=e|0;t=t|0;r=r|0;if((r|0)<32){j=t<<r|(e&(1<<r)-1<<32-r)>>>32-r;return e<<r}j=e<<r-32;return 0}function on(e,t,r){e=e|0;t=t|0;r=r|0;if((r|0)<32){j=t>>>r;return e>>>r|(t&(1<<r)-1)<<32-r}j=0;return t>>>r-32|0}function fn(e,t,r){e=e|0;t=t|0;r=r|0;if((r|0)<32){j=t>>r;return e>>>r|(t&(1<<r)-1)<<32-r}j=(t|0)<0?-1:0;return t>>r-32|0}function sn(e){e=e|0;var t=0;t=n[v+(e>>>24)|0]|0;if((t|0)<8)return t|0;t=n[v+(e>>16&255)|0]|0;if((t|0)<8)return t+8|0;t=n[v+(e>>8&255)|0]|0;if((t|0)<8)return t+16|0;return(n[v+(e&255)|0]|0)+24|0}function un(e){e=e|0;var t=0;t=n[b+(e&255)|0]|0;if((t|0)<8)return t|0;t=n[b+(e>>8&255)|0]|0;if((t|0)<8)return t+8|0;t=n[b+(e>>16&255)|0]|0;if((t|0)<8)return t+16|0;return(n[b+(e>>>24)|0]|0)+24|0}function cn(e,t){e=e|0;t=t|0;var r=0,n=0,i=0,a=0;r=e&65535;n=t&65535;i=oe(n,r)|0;a=e>>>16;e=(i>>>16)+(oe(n,a)|0)|0;n=t>>>16;t=oe(n,r)|0;return(j=(e>>>16)+(oe(n,a)|0)+(((e&65535)+t|0)>>>16)|0,e+t<<16|i&65535|0)|0}function hn(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0,a=0,o=0,f=0,s=0;i=t>>31|((t|0)<0?-1:0)<<1;a=((t|0)<0?-1:0)>>31|((t|0)<0?-1:0)<<1;o=n>>31|((n|0)<0?-1:0)<<1;f=((n|0)<0?-1:0)>>31|((n|0)<0?-1:0)<<1;s=nn(i^e,a^t,i,a)|0;t=j;e=o^i;i=f^a;a=nn((vn(s,t,nn(o^r,f^n,o,f)|0,j,0)|0)^e,j^i,e,i)|0;return(j=j,a)|0}function dn(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0,o=0,f=0,s=0,u=0,c=0,d=0;i=h;h=h+8|0;o=i|0;f=t>>31|((t|0)<0?-1:0)<<1;s=((t|0)<0?-1:0)>>31|((t|0)<0?-1:0)<<1;u=n>>31|((n|0)<0?-1:0)<<1;c=((n|0)<0?-1:0)>>31|((n|0)<0?-1:0)<<1;d=nn(f^e,s^t,f,s)|0;t=j;e=nn(u^r,c^n,u,c)|0;vn(d,t,e,j,o)|0;e=nn(a[o>>2]^f,a[o+4>>2]^s,f,s)|0;s=j;h=i;return(j=s,e)|0}function ln(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0,a=0;i=e;e=r;r=cn(i,e)|0;a=j;return(j=(oe(t,e)|0)+(oe(n,i)|0)+a|a&0,r|0|0)|0}function pn(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0;i=vn(e,t,r,n,0)|0;return(j=j,i)|0}function bn(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;var i=0,o=0;i=h;h=h+8|0;o=i|0;vn(e,t,r,n,o)|0;h=i;return(j=a[o+4>>2]|0,a[o>>2]|0)|0}function vn(e,t,r,n,i){e=e|0;t=t|0;r=r|0;n=n|0;i=i|0;var o=0,f=0,s=0,u=0,c=0,h=0,d=0,l=0,p=0,b=0,v=0,m=0,g=0,y=0,_=0,w=0,x=0,k=0,S=0,M=0,A=0,E=0,I=0,T=0,B=0,R=0,P=0,O=0,C=0,z=0,N=0,q=0;o=e;f=t;s=f;u=r;c=n;h=c;if((s|0)==0){d=(i|0)!=0;if((h|0)==0){if(d){a[i>>2]=(o>>>0)%(u>>>0);a[i+4>>2]=0}l=0;p=(o>>>0)/(u>>>0)>>>0;return(j=l,p)|0}else{if(!d){l=0;p=0;return(j=l,p)|0}a[i>>2]=e|0;a[i+4>>2]=t&0;l=0;p=0;return(j=l,p)|0}}d=(h|0)==0;do{if((u|0)==0){if(d){if((i|0)!=0){a[i>>2]=(s>>>0)%(u>>>0);a[i+4>>2]=0}l=0;p=(s>>>0)/(u>>>0)>>>0;return(j=l,p)|0}if((o|0)==0){if((i|0)!=0){a[i>>2]=0;a[i+4>>2]=(s>>>0)%(h>>>0)}l=0;p=(s>>>0)/(h>>>0)>>>0;return(j=l,p)|0}b=h-1|0;if((b&h|0)==0){if((i|0)!=0){a[i>>2]=e|0;a[i+4>>2]=b&s|t&0}l=0;p=s>>>((un(h|0)|0)>>>0);return(j=l,p)|0}b=(sn(h|0)|0)-(sn(s|0)|0)|0;if(b>>>0<=30){v=b+1|0;m=31-b|0;g=v;y=s<<m|o>>>(v>>>0);_=s>>>(v>>>0);w=0;x=o<<m;break}if((i|0)==0){l=0;p=0;return(j=l,p)|0}a[i>>2]=e|0;a[i+4>>2]=f|t&0;l=0;p=0;return(j=l,p)|0}else{if(!d){m=(sn(h|0)|0)-(sn(s|0)|0)|0;if(m>>>0<=31){v=m+1|0;b=31-m|0;k=m-31>>31;g=v;y=o>>>(v>>>0)&k|s<<b;_=s>>>(v>>>0)&k;w=0;x=o<<b;break}if((i|0)==0){l=0;p=0;return(j=l,p)|0}a[i>>2]=e|0;a[i+4>>2]=f|t&0;l=0;p=0;return(j=l,p)|0}b=u-1|0;if((b&u|0)!=0){k=(sn(u|0)|0)+33-(sn(s|0)|0)|0;v=64-k|0;m=32-k|0;S=m>>31;M=k-32|0;A=M>>31;g=k;y=m-1>>31&s>>>(M>>>0)|(s<<m|o>>>(k>>>0))&A;_=A&s>>>(k>>>0);w=o<<v&S;x=(s<<v|o>>>(M>>>0))&S|o<<m&k-33>>31;break}if((i|0)!=0){a[i>>2]=b&o;a[i+4>>2]=0}if((u|0)==1){l=f|t&0;p=e|0|0;return(j=l,p)|0}else{b=un(u|0)|0;l=s>>>(b>>>0)|0;p=s<<32-b|o>>>(b>>>0)|0;return(j=l,p)|0}}}while(0);if((g|0)==0){E=x;I=w;T=_;B=y;R=0;P=0}else{o=r|0|0;r=c|n&0;n=rn(o,r,-1,-1)|0;c=j;s=x;x=w;w=_;_=y;y=g;g=0;while(1){O=x>>>31|s<<1;C=g|x<<1;u=_<<1|s>>>31|0;e=_>>>31|w<<1|0;nn(n,c,u,e)|0;t=j;f=t>>31|((t|0)<0?-1:0)<<1;z=f&1;N=nn(u,e,f&o,(((t|0)<0?-1:0)>>31|((t|0)<0?-1:0)<<1)&r)|0;q=j;t=y-1|0;if((t|0)==0){break}else{s=O;x=C;w=q;_=N;y=t;g=z}}E=O;I=C;T=q;B=N;R=0;P=z}z=I;I=0;if((i|0)!=0){a[i>>2]=B;a[i+4>>2]=T}l=(z|0)>>>31|(E|I)<<1|(I<<1|z>>>31)&0|R;p=(z<<1|0>>>31)&-2|P;return(j=l,p)|0}function mn(e,t){e=e|0;t=t|0;Tn[e&15](t|0)}function gn(e,t,r){e=e|0;t=t|0;r=r|0;Bn[e&15](t|0,r|0)}function yn(e,t){e=e|0;t=t|0;return Rn[e&7](t|0)|0}function _n(e,t,r,n){e=e|0;t=t|0;r=r|0;n=n|0;Pn[e&15](t|0,r|0,n|0)}function wn(e){e=e|0;On[e&1]()}function xn(e,t,r){e=e|0;t=t|0;r=r|0;return Cn[e&1](t|0,r|0)|0}function kn(e){e=e|0;fe(0)}function Sn(e,t){e=e|0;t=t|0;fe(1)}function Mn(e){e=e|0;fe(2);return 0}function An(e,t,r){e=e|0;t=t|0;r=r|0;fe(3)}function En(){fe(4)}function In(e,t){e=e|0;t=t|0;fe(5);return 0}var Tn=[kn,kn,Sr,kn,Br,kn,yr,kn,kr,kn,Tr,kn,kn,kn,kn,kn];var Bn=[Sn,Sn,Lr,Sn,Hr,Sn,Dr,Sn,Fr,Sn,Sn,Sn,Sn,Sn,Sn,Sn];var Rn=[Mn,Mn,_r,Mn,wr,Mn,Mn,Mn];var Pn=[An,An,Qr,An,$r,An,Zr,An,Gr,An,An,An,An,An,An,An];var On=[En,En];var Cn=[In,In];return{_crypto_scrypt:Et,_strlen:tn,_free:Wt,_realloc:Yt,_memset:en,_malloc:Vt,_memcpy:Jr,_calloc:Kt,runPostSets:_t,stackAlloc:it,stackSave:at,stackRestore:ot,setThrew:ft,setTempRet0:ct,setTempRet1:ht,setTempRet2:dt,setTempRet3:lt,setTempRet4:pt,setTempRet5:bt,setTempRet6:vt,setTempRet7:mt,setTempRet8:gt,setTempRet9:yt,dynCall_vi:mn,dynCall_vii:gn,dynCall_ii:yn,dynCall_viii:_n,dynCall_v:wn,dynCall_iii:xn}}({Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array},{abort:wa,assert:w,asmPrintInt:function(e,t){s.print("int "+e+","+t)},asmPrintFloat:function(e,t){s.print("float "+e+","+t)},min:Xc,invoke_vi:function(e,t){try{s.dynCall_vi(e,t)}catch(e){"number"!=typeof e&&"longjmp"!==e&&g(e),V.setThrew(1,0)}},invoke_vii:function(e,t,r){try{s.dynCall_vii(e,t,r)}catch(e){"number"!=typeof e&&"longjmp"!==e&&g(e),V.setThrew(1,0)}},invoke_ii:function(e,t){try{return s.dynCall_ii(e,t)}catch(e){"number"!=typeof e&&"longjmp"!==e&&g(e),V.setThrew(1,0)}},invoke_viii:function(e,t,r,n){try{s.dynCall_viii(e,t,r,n)}catch(e){"number"!=typeof e&&"longjmp"!==e&&g(e),V.setThrew(1,0)}},invoke_v:function(e){try{s.dynCall_v(e)}catch(e){"number"!=typeof e&&"longjmp"!==e&&g(e),V.setThrew(1,0)}},invoke_iii:function(e,t,r){try{return s.dynCall_iii(e,t,r)}catch(e){"number"!=typeof e&&"longjmp"!==e&&g(e),V.setThrew(1,0)}},_strncmp:function(e,t,r){for(var n=0;n<r;){var i=G[e+n|0],a=G[t+n|0];if(i==a&&0==i)break;if(0==i)return-1;if(0==a)return 1;if(i!=a)return i>a?1:-1;n++}return 0},_llvm_va_end:aa(),_sysconf:function(e){switch(e){case 8:return 4096;case 54:case 56:case 21:case 61:case 63:case 22:case 67:case 23:case 24:case 25:case 26:case 27:case 69:case 28:case 101:case 70:case 71:case 29:case 30:case 199:case 75:case 76:case 32:case 43:case 44:case 80:case 46:case 47:case 45:case 48:case 49:case 42:case 82:case 33:case 7:case 108:case 109:case 107:case 112:case 119:case 121:return 200809;case 13:case 104:case 94:case 95:case 34:case 35:case 77:case 81:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 95:case 110:case 111:case 113:case 114:case 115:case 116:case 117:case 118:case 120:case 40:case 16:case 79:case 19:return-1;case 92:case 93:case 5:case 72:case 6:case 74:case 92:case 93:case 96:case 97:case 98:case 99:case 102:case 103:case 105:return 1;case 38:case 66:case 50:case 51:case 4:return 1024;case 15:case 64:case 41:return 32;case 55:case 37:case 17:return 2147483647;case 18:case 1:return 47839;case 59:case 57:return 99;case 68:case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1e3;case 106:return 700;case 52:return 256;case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4;case 10:return 1}return M(N.A),-1},___cxa_throw:rc,_strerror:zc,_abort:function(){s.abort()},_fprintf:mc,_llvm_eh_exception:U,___cxa_free_exception:sc,_fflush:aa(),___buildEnvironment:wc,__reallyNegative:jc,_strchr:function(e,t){e--;do{e++;var r=A[e];if(r==t)return e}while(r);return 0},_fputc:Bc,___setErrNo:M,_fwrite:hc,_send:fc,_write:gc,_exit:function(e){Ac(e)},___cxa_find_matching_catch:function(e,t){-1==e&&(e=B[U.m>>2]),-1==t&&(t=B[U.m+4>>2]);var r=Array.prototype.slice.call(arguments,2);0!=t&&!pc(t)&&0==B[B[t>>2]-8>>2]&&(e=B[e>>2]);for(var n=0;n<r.length;n++)if(qc(r[n],t,e))return 0|(V.setTempRet0(r[n]),e);return 0|(V.setTempRet0(t),e)},___cxa_allocate_exception:function(e){return Oa(e)},_isspace:function(e){return 32==e||9<=e&&13>=e},__formatString:kc,___resumeException:function(e){0==B[U.m>>2]&&(B[U.m>>2]=e),g(e+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")},_llvm_uadd_with_overflow_i32:function(e,t){return e>>>=0,t>>>=0,0|(V.setTempRet0(4294967295<e+t),e+t>>>0)},___cxa_does_inherit:qc,_getenv:xc,_vfprintf:function(e,t,r){return mc(e,t,B[r>>2])},___cxa_begin_catch:function(e){return oc.ta--,e},__ZSt18uncaught_exceptionv:oc,_pwrite:function(e,t,r,n){if(!(e=R[e]))return M(N.$),-1;try{return Ib(e,A,t,r,n)}catch(e){return Zb(e),-1}},___cxa_call_unexpected:function(e){s.P("Unexpected exception thrown, this is not properly supported - aborting"),za=l,g(e)},_sbrk:nc,_strerror_r:yc,___errno_location:function(){return rb},___gxx_personality_v0:aa(),___cxa_is_number_type:pc,_time:function(e){var t=Math.floor(Date.now()/1e3);return e&&(B[e>>2]=t),t},__exit:Ac,___cxa_end_catch:uc,STACKTOP:u,STACK_MAX:Ta,tempDoublePtr:qb,ABORT:za,cttz_i8:Wc,ctlz_i8:Vc,NaN:NaN,Infinity:1/0,_stderr:nb,__ZTVN10__cxxabiv120__si_class_type_infoE:ob,__ZTVN10__cxxabiv117__class_type_infoE:pb,___progname:k},I);s._crypto_scrypt=V._crypto_scrypt;var ic=s._strlen=V._strlen,tc=s._free=V._free;s._realloc=V._realloc;var tb=s._memset=V._memset,Oa=s._malloc=V._malloc,sb=s._memcpy=V._memcpy;s._calloc=V._calloc;var mb=s.runPostSets=V.runPostSets;s.dynCall_vi=V.dynCall_vi,s.dynCall_vii=V.dynCall_vii,s.dynCall_ii=V.dynCall_ii,s.dynCall_viii=V.dynCall_viii,s.dynCall_v=V.dynCall_v,s.dynCall_iii=V.dynCall_iii;var qa=function(e){return V.stackAlloc(e)},ja=function(){return V.stackSave()},ka=function(e){V.stackRestore(e)},lc;Y.Ca={},Y.D=function(e){if(-128<=e&&128>e){var t=Y.Ca[e];if(t)return t}return t=new Y(0|e,0>e?-1:0),-128<=e&&128>e&&(Y.Ca[e]=t),t},Y.p=function(e){return isNaN(e)||!isFinite(e)?Y.ZERO:e<=-Y.Ea?Y.MIN_VALUE:e+1>=Y.Ea?Y.MAX_VALUE:0>e?Y.p(-e).i():new Y(e%Y.B|0,e/Y.B|0)},Y.v=function(e,t){return new Y(e,t)},Y.k=function(e,t){0==e.length&&g(Error("number format error: empty string"));var r=t||10;if((2>r||36<r)&&g(Error("radix out of range: "+r)),"-"==e.charAt(0))return Y.k(e.substring(1),r).i();0<=e.indexOf("-")&&g(Error('number format error: interior "-" character: '+e));for(var n=Y.p(Math.pow(r,8)),i=Y.ZERO,a=0;a<e.length;a+=8){var o=Math.min(8,e.length-a),f=parseInt(e.substring(a,a+o),r);8>o?(o=Y.p(Math.pow(r,o)),i=i.multiply(o).add(Y.p(f))):(i=i.multiply(n),i=i.add(Y.p(f)))}return i},Y.ea=65536,Y.Od=16777216,Y.B=Y.ea*Y.ea,Y.Pd=Y.B/2,Y.Qd=Y.B*Y.ea,Y.eb=Y.B*Y.B,Y.Ea=Y.eb/2,Y.ZERO=Y.D(0),Y.ONE=Y.D(1),Y.Da=Y.D(-1),Y.MAX_VALUE=Y.v(-1,2147483647),Y.MIN_VALUE=Y.v(0,-2147483648),Y.cb=Y.D(16777216),q=Y.prototype,q.Z=function(){return this.j*Y.B+this.ob()},q.toString=function(e){if(e=e||10,(2>e||36<e)&&g(Error("radix out of range: "+e)),this.G())return"0";if(this.n()){if(this.o(Y.MIN_VALUE)){var t=Y.p(e),r=this.F(t),t=r.multiply(t).R(this);return r.toString(e)+t.h.toString(e)}return"-"+this.i().toString(e)}for(var r=Y.p(Math.pow(e,6)),t=this,n="";;){var i=t.F(r),a=t.R(i.multiply(r)).h.toString(e),t=i;if(t.G())return a+n;for(;6>a.length;)a="0"+a;n=""+a+n}},q.ob=function(){return 0<=this.h?this.h:Y.B+this.h},q.G=function(){return 0==this.j&&0==this.h},q.n=function(){return 0>this.j},q.Pa=function(){return 1==(1&this.h)},q.o=function(e){return this.j==e.j&&this.h==e.h},q.Ra=function(){return 0>this.ja(Y.cb)},q.qb=function(e){return 0<this.ja(e)},q.rb=function(e){return 0<=this.ja(e)},q.ja=function(e){if(this.o(e))return 0;var t=this.n(),r=e.n();return t&&!r?-1:!t&&r?1:this.R(e).n()?-1:1},q.i=function(){return this.o(Y.MIN_VALUE)?Y.MIN_VALUE:this.xb().add(Y.ONE)},q.add=function(e){var t,r=this.j>>>16,n=65535&this.j,i=this.h>>>16,a=e.j>>>16,o=65535&e.j,f=e.h>>>16;return t=(65535&this.h)+(65535&e.h)+0,e=0+(t>>>16),e+=i+f,i=0+(e>>>16),i+=n+o,n=0+(i>>>16),n=n+(r+a)&65535,Y.v((65535&e)<<16|65535&t,n<<16|65535&i)},q.R=function(e){return this.add(e.i())},q.multiply=function(e){if(this.G()||e.G())return Y.ZERO;if(this.o(Y.MIN_VALUE))return e.Pa()?Y.MIN_VALUE:Y.ZERO;if(e.o(Y.MIN_VALUE))return this.Pa()?Y.MIN_VALUE:Y.ZERO;if(this.n())return e.n()?this.i().multiply(e.i()):this.i().multiply(e).i();if(e.n())return this.multiply(e.i()).i();if(this.Ra()&&e.Ra())return Y.p(this.Z()*e.Z());var t,r,n,i,a=this.j>>>16,o=65535&this.j,f=this.h>>>16,s=65535&this.h,u=e.j>>>16,c=65535&e.j,h=e.h>>>16,e=65535&e.h;return i=0+s*e,n=0+(i>>>16),n+=f*e,r=0+(n>>>16),n=(65535&n)+s*h,r+=n>>>16,n&=65535,r+=o*e,t=0+(r>>>16),r=(65535&r)+f*h,t+=r>>>16,r&=65535,r+=s*c,t+=r>>>16,r&=65535,t=t+(a*e+o*h+f*c+s*u)&65535,Y.v(n<<16|65535&i,t<<16|r)},q.F=function(e){if(e.G()&&g(Error("division by zero")),this.G())return Y.ZERO;if(this.o(Y.MIN_VALUE)){if(e.o(Y.ONE)||e.o(Y.Da))return Y.MIN_VALUE;if(e.o(Y.MIN_VALUE))return Y.ONE;var t=this.Db().F(e).shiftLeft(1);if(t.o(Y.ZERO))return e.n()?Y.ONE:Y.Da;var r=this.R(e.multiply(t));return t.add(r.F(e))}if(e.o(Y.MIN_VALUE))return Y.ZERO;if(this.n())return e.n()?this.i().F(e.i()):this.i().F(e).i();if(e.n())return this.F(e.i()).i();for(var n=Y.ZERO,r=this;r.rb(e);){for(var t=Math.max(1,Math.floor(r.Z()/e.Z())),i=Math.ceil(Math.log(t)/Math.LN2),i=48>=i?1:Math.pow(2,i-48),a=Y.p(t),o=a.multiply(e);o.n()||o.qb(r);)t-=i,a=Y.p(t),o=a.multiply(e);a.G()&&(a=Y.ONE),n=n.add(a),r=r.R(o)}return n},q.xb=function(){return Y.v(~this.h,~this.j)},q.shiftLeft=function(e){if(0==(e&=63))return this;var t=this.h;return 32>e?Y.v(t<<e,this.j<<e|t>>>32-e):Y.v(0,t<<e-32)},q.Db=function(){var e;if(0==(e=1))return this;var t=this.j;return 32>e?Y.v(this.h>>>e|t<<32-e,t>>e):Y.v(t>>e-32,0<=t?0:-1)},q=X.prototype,q.ga=function(e,t,r,n){for(var i=0,a=0;0<=--n;){var o=e*this[i++]+t[r]+a,a=Math.floor(o/67108864);t[r++]=67108863&o}return a},q.f=26,q.u=67108863,q.K=67108864,q.bb=Math.pow(2,52),q.Aa=26,q.Ba=0;var $c=[],bd,Z;for(bd=48,Z=0;9>=Z;++Z)$c[bd++]=Z;for(bd=97,Z=10;36>Z;++Z)$c[bd++]=Z;for(bd=65,Z=10;36>Z;++Z)$c[bd++]=Z;q=X.prototype,q.copyTo=function(e){for(var t=this.b-1;0<=t;--t)e[t]=this[t];e.b=this.b,e.c=this.c},q.D=function(e){this.b=1,this.c=0>e?-1:0,0<e?this[0]=e:-1>e?this[0]=e+DV:this.b=0},q.k=function(e,t){var r;if(16==t)r=4;else if(8==t)r=3;else if(256==t)r=8;else if(2==t)r=1;else if(32==t)r=5;else{if(4!=t)return void this.nb(e,t);r=2}this.c=this.b=0;for(var n=e.length,i=p,a=0;0<=--n;){var o=8==r?255&e[n]:Zc(e,n);0>o?"-"==e.charAt(n)&&(i=l):(i=p,0==a?this[this.b++]=o:a+r>this.f?(this[this.b-1]|=(o&(1<<this.f-a)-1)<<a,this[this.b++]=o>>this.f-a):this[this.b-1]|=o<<a,(a+=r)>=this.f&&(a-=this.f))}8==r&&0!=(128&e[0])&&(this.c=-1,0<a&&(this[this.b-1]|=(1<<this.f-a)-1<<a)),this.C(),i&&X.ZERO.t(this,this)},q.C=function(){for(var e=this.c&this.u;0<this.b&&this[this.b-1]==e;)--this.b},q.la=function(e,t){var r;for(r=this.b-1;0<=r;--r)t[r+e]=this[r];for(r=e-1;0<=r;--r)t[r]=0;t.b=this.b+e,t.c=this.c},q.jb=function(e,t){for(var r=e;r<this.b;++r)t[r-e]=this[r];t.b=Math.max(this.b-e,0),t.c=this.c},q.Qa=function(e,t){var r,n=e%this.f,i=this.f-n,a=(1<<i)-1,o=Math.floor(e/this.f),f=this.c<<n&this.u;for(r=this.b-1;0<=r;--r)t[r+o+1]=this[r]>>i|f,f=(this[r]&a)<<n;for(r=o-1;0<=r;--r)t[r]=0;t[o]=f,t.b=this.b+o+1,t.c=this.c,t.C()},q.zb=function(e,t){t.c=this.c;var r=Math.floor(e/this.f);if(r>=this.b)t.b=0;else{var n=e%this.f,i=this.f-n,a=(1<<n)-1;t[0]=this[r]>>n;for(var o=r+1;o<this.b;++o)t[o-r-1]|=(this[o]&a)<<i,t[o-r]=this[o]>>n;0<n&&(t[this.b-r-1]|=(this.c&a)<<i),t.b=this.b-r,t.C()}},q.t=function(e,t){for(var r=0,n=0,i=Math.min(e.b,this.b);r<i;)n+=this[r]-e[r],t[r++]=n&this.u,n>>=this.f;if(e.b<this.b){for(n-=e.c;r<this.b;)n+=this[r],t[r++]=n&this.u,n>>=this.f;n+=this.c}else{for(n+=this.c;r<e.b;)n-=e[r],t[r++]=n&this.u,n>>=this.f;n-=e.c}t.c=0>n?-1:0,-1>n?t[r++]=this.K+n:0<n&&(t[r++]=n),t.b=r,t.C()},q.vb=function(e){var t=$.Xa,r=this.abs(),n=t.abs(),i=r.b;for(e.b=i+n.b;0<=--i;)e[i]=0;for(i=0;i<n.b;++i)e[i+r.b]=r.ga(n[i],e,i,r.b);e.c=0,e.C(),this.c!=t.c&&X.ZERO.t(e,e)},q.Ja=function(e,t,r){var n=e.abs();if(!(0>=n.b)){var i=this.abs();if(i.b<n.b)t!=m&&t.D(0),r!=m&&this.copyTo(r);else{r==m&&(r=Yc());var a,o=Yc(),f=this.c,e=e.c,s=n[n.b-1],u=1;if(0!=(a=s>>>16)&&(s=a,u+=16),0!=(a=s>>8)&&(s=a,u+=8),0!=(a=s>>4)&&(s=a,u+=4),0!=(a=s>>2)&&(s=a,u+=2),0!=s>>1&&(u+=1),s=this.f-u,0<s?(n.Qa(s,o),i.Qa(s,r)):(n.copyTo(o),i.copyTo(r)),n=o.b,0!=(i=o[n-1])){a=i*(1<<this.Aa)+(1<n?o[n-2]>>this.Ba:0),u=this.bb/a,a=(1<<this.Aa)/a;var c=1<<this.Ba,h=r.b,d=h-n,l=t==m?Yc():t;for(o.la(d,l),0<=r.U(l)&&(r[r.b++]=1,r.t(l,r)),X.ONE.la(n,l),l.t(o,o);o.b<n;)o[o.b++]=0;for(;0<=--d;){var p=r[--h]==i?this.u:Math.floor(r[h]*u+(r[h-1]+c)*a);if((r[h]+=o.ga(p,r,d,n))<p)for(o.la(d,l),r.t(l,r);r[h]<--p;)r.t(l,r)}t!=m&&(r.jb(n,t),f!=e&&X.ZERO.t(t,t)),r.b=n,r.C(),0<s&&r.zb(s,r),0>f&&X.ZERO.t(r,r)}}}},q.toString=function(e){if(0>this.c)return"-"+this.i().toString(e);if(16==e)e=4;else if(8==e)e=3;else if(2==e)e=1;else if(32==e)e=5;else{if(4!=e)return this.Fb(e);e=2}var t,r=(1<<e)-1,n=p,i="",a=this.b,o=this.f-a*this.f%e;if(0<a--)for(o<this.f&&0<(t=this[a]>>o)&&(n=l,i="0123456789abcdefghijklmnopqrstuvwxyz".charAt(t));0<=a;)o<e?(t=(this[a]&(1<<o)-1)<<e-o,t|=this[--a]>>(o+=this.f-e)):(t=this[a]>>(o-=e)&r,0>=o&&(o+=this.f,--a)),0<t&&(n=l),n&&(i+="0123456789abcdefghijklmnopqrstuvwxyz".charAt(t));return n?i:"0"},q.i=function(){var e=Yc();return X.ZERO.t(this,e),e},q.abs=function(){return 0>this.c?this.i():this},q.U=function(e){var t=this.c-e.c;if(0!=t)return t;var r=this.b,t=r-e.b;if(0!=t)return 0>this.c?-t:t;for(;0<=--r;)if(0!=(t=this[r]-e[r]))return t;return 0},X.ZERO=ad(0),X.ONE=ad(1),q=X.prototype,q.nb=function(e,t){this.D(0),t==m&&(t=10);for(var r=this.S(t),n=Math.pow(t,r),i=p,a=0,o=0,f=0;f<e.length;++f){var s=Zc(e,f);0>s?"-"==e.charAt(f)&&0==this.ra()&&(i=l):(o=t*o+s,++a>=r&&(this.Ia(n),this.Ha(o),o=a=0))}0<a&&(this.Ia(Math.pow(t,a)),this.Ha(o)),i&&X.ZERO.t(this,this)},q.S=function(e){return Math.floor(Math.LN2*this.f/Math.log(e))},q.ra=function(){return 0>this.c?-1:0>=this.b||1==this.b&&0>=this[0]?0:1},q.Ia=function(e){this[this.b]=this.ga(e-1,this,0,this.b),++this.b,this.C()},q.Ha=function(e){var t=0;if(0!=e){for(;this.b<=t;)this[this.b++]=0;for(this[t]+=e;this[t]>=this.K;)this[t]-=this.K,++t>=this.b&&(this[this.b++]=0),++this[t]}},q.Fb=function(e){if(e==m&&(e=10),0==this.ra()||2>e||36<e)return"0";var t=this.S(e),t=Math.pow(e,t),r=ad(t),n=Yc(),i=Yc(),a="";for(this.Ja(r,n,i);0<n.ra();)a=(t+i.Oa()).toString(e).substr(1)+a,n.Ja(r,n,i);return i.Oa().toString(e)+a},q.Oa=function(){if(0>this.c){if(1==this.b)return this[0]-this.K;if(0==this.b)return-1}else{if(1==this.b)return this[0];if(0==this.b)return 0}return(this[1]&(1<<32-this.f)-1)<<this.f|this[0]},q.fa=function(e,t){for(var r=0,n=0,i=Math.min(e.b,this.b);r<i;)n+=this[r]+e[r],t[r++]=n&this.u,n>>=this.f;if(e.b<this.b){for(n+=e.c;r<this.b;)n+=this[r],t[r++]=n&this.u,n>>=this.f;n+=this.c}else{for(n+=this.c;r<e.b;)n+=e[r],t[r++]=n&this.u,n>>=this.f;n+=e.c}t.c=0>n?-1:0,0<n?t[r++]=n:-1>n&&(t[r++]=this.K+n),t.b=r,t.C()};var $={abs:function(e,t){var r=new Y(e,t),r=r.n()?r.i():r;B[qb>>2]=r.h,B[qb+4>>2]=r.j},Ka:function(){$.kb||($.kb=l,$.Xa=new X,$.Xa.k("4294967296",10),$.sa=new X,$.sa.k("18446744073709551616",10),$.xe=new X,$.ye=new X)},me:function(e,t){var r=new X;r.k(t.toString(),10);var n=new X;r.vb(n),r=new X,r.k(e.toString(),10);var i=new X;return r.fa(n,i),i},stringify:function(e,t,r){return e=new Y(e,t).toString(),r&&"-"==e[0]&&($.Ka(),r=new X,r.k(e,10),e=new X,$.sa.fa(r,e),e=e.toString(10)),e},k:function(e,t,r,n,i){$.Ka();var a=new X;a.k(e,t),e=new X,e.k(r,10),r=new X,r.k(n,10),i&&0>a.U(X.ZERO)&&(n=new X,a.fa($.sa,n),a=n),n=p,0>a.U(e)?(a=e,n=l):0<a.U(r)&&(a=r,n=l),a=Y.k(a.toString()),B[qb>>2]=a.h,B[qb+4>>2]=a.j,n&&g("range error")}};lc=$;var cd,dd;if(s.callMain=s.$d=function(e){function t(){for(var e=0;3>e;e++)n.push(0)}w(0==L,"cannot call main when async dependencies remain! (listen on __ATMAIN__)"),w(0==Wa.length,"cannot call main when preRun functions remain to be called"),e=e||[],ab||(ab=l,Va(Xa));var r=e.length+1,n=[F(J("/bin/this.program"),"i8",Ka)];t();for(var i=0;i<r-1;i+=1)n.push(F(J(e[i]),"i8",Ka)),t();n.push(0),n=F(n,"i32",Ka),cd=u,dd=l;var a;try{a=s._main(r,n,0)}catch(e){if(e&&"object"==typeof e&&"ExitStatus"==e.type)return s.print("Exit Status: "+e.value),e.value;"SimulateInfiniteLoop"==e?s.noExitRuntime=l:g(e)}finally{dd=p}s.noExitRuntime||ed(a)},s.run=s.we=lb,s.exit=s.de=ed,s.abort=s.abort=wa,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();var kb=l;s.noInitialRun&&(kb=p),lb();var scrypt=function(){function e(e){return t(unescape(encodeURIComponent(e)))}function t(e){for(var t=new Uint8Array(e.length),r=0;r<e.length;r++){var n=e.charCodeAt(r);if((255&n)!==n)throw{message:"Cannot encode string in Latin1",str:e};t[r]=255&n}return t}function r(e){return decodeURIComponent(escape(n(e)))}function n(e){for(var t=[],r=0;r<e.length;r++)t.push(String.fromCharCode(e[r]));return t.join("")}function i(e){for(var t=[],r=0;r<e.length;r++)t.push("0123456789abcdef"[e[r]>>4&15]),t.push("0123456789abcdef"[15&e[r]]);return t.join("")}function a(e,t){var r=t||0,n=scrypt_raw._malloc(e.length+r);scrypt_raw.HEAPU8.set(e,n+r);for(var i=n;i<n+r;i++)scrypt_raw.HEAPU8[i]=0;return n}function o(e,t){var r=new Uint8Array(t);return r.set(scrypt_raw.HEAPU8.subarray(e,e+t)),r}function f(e,t){if(0!==t)throw{message:"scrypt_raw."+e+" signalled an error"}}function s(e){this.length=e,this.address=scrypt_raw._malloc(e)}function u(e){for(var t=0;t<e.length;t++)scrypt_raw._free(e[t])}function c(e,t,r,n,i,o){var c=new s(o),h=a(e),d=a(t);return f("_crypto_scrypt",scrypt_raw._crypto_scrypt(h,e.length,d,t.length,r,0,n,i,c.address,c.length)),u([h,d]),c.extractBytes()}var h={};return s.prototype.extractBytes=function(e){var t=o(this.address+(e||0),this.length-(e||0));return scrypt_raw._free(this.address),this.address=null,t},h.encode_utf8=e,h.encode_latin1=t,h.decode_utf8=r,h.decode_latin1=n,h.to_hex=i,h.crypto_scrypt=c,h}();return scrypt}}).call(exports,"/",__webpack_require__(23)(module))},function(e,t){e.exports=require("path")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createInvocationTx=t.createContractTx=t.createClaimTx=void 0;var n=r(9),i=r(30),a=r(13),o=(t.createClaimTx=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=Object.assign({type:2,version:a.TX_VERSION,scripts:[]},r),o=[],f=[],s=0,u=t.claims.slice(0,100).map(function(e){return s+=e.claim,{prevHash:e.txid,prevIndex:e.index}}),c=[{assetId:a.ASSET_ID.GAS,value:s/1e8,scriptHash:(0,n.getScriptHashFromPublicKey)(e)}];return Object.assign(i,{inputs:o,attributes:f,claims:u,outputs:c},r)},t.createContractTx=function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=Object.assign({type:128,version:a.TX_VERSION,scripts:[]},n),f=[],s=o(e,t,r),u=s.inputs,c=s.change;return Object.assign(i,{inputs:u,attributes:f,outputs:r.concat(c)},n)},t.createInvocationTx=function(e,t,r,n,f){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},u=Object.assign({type:209,version:a.TX_VERSION,scripts:[]},s),c=[],h=o(e,t,r,f),d=h.inputs,l=h.change,p="string"==typeof n?n:(0,i.createScript)(n);return Object.assign(u,{inputs:d,attributes:c,outputs:r.concat(l),script:p,gas:f},s)},function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=r.reduce(function(e,t){var r=Math.round(1e8*t.value);return e[t.assetId]?e[t.assetId]+=r:e[t.assetId]=r,e},{});if(i>0){var f=1e8*i;o[a.ASSET_ID.GAS]?o[a.ASSET_ID.GAS]+=f:o[a.ASSET_ID.GAS]=f}var s=[];return{inputs:Object.keys(o).map(function(r){var i=o[r],f=t[a.ASSETS[r]];if(1e8*f.balance<i)throw new Error("Insufficient "+a.ASSETS[r]+"! Need "+i/1e8+" but only found "+f.balance);f.unspent.sort(function(e,t){return e.value-t.value});for(var u=0,c=0;c<i;)u+=1,c+=Math.round(1e8*f.unspent[u-1].value);return c>i&&s.push({assetId:r,value:(c-i)/1e8,scriptHash:(0,n.getScriptHashFromPublicKey)(e)}),f.unspent.slice(0,u).map(function(e){return{prevHash:e.txid,prevIndex:e.index}})}).reduce(function(e,t){return e.concat(t)},[]),change:s}})},function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.createScript=void 0;var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=r(4),u=r(62),c=function(e){return e&&e.__esModule?e:{default:e}}(u),h=function(e){function t(){return n(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return a(t,e),f(t,[{key:"_emitAppCall",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(40!==e.length)throw new Error;return this.emit(t?c.default.TAILCALL:c.default.APPCALL,(0,s.reverseHex)(e))}},{key:"_emitArray",value:function(e){for(var t=e.length-1;t>=0;t--)this.emitPush(e[t]);return this.emitPush(e.length).emit(c.default.PACK)}},{key:"_emitString",value:function(e){var t=e.length/2;return t<=c.default.PUSHBYTES75?(this.str+=(0,s.num2hexstring)(t),this.str+=e):t<256?(this.emit(c.default.PUSHDATA1),this.str+=(0,s.num2hexstring)(t),this.str+=e):t<65536?(this.emit(c.default.PUSHDATA2),this.str+=(0,s.num2hexstring)(t,4),this.str+=e):(this.emit(c.default.PUSHDATA4),this.str+=(0,s.num2hexstring)(t,8),this.str+=e),this}},{key:"_emitNum",value:function(e){return-1===e?this.emit(c.default.PUSHM1):0===e?this.emit(c.default.PUSH0):e>0&&e<=16?this.emit(c.default.PUSH1-1+e):this.emitPush((0,s.reverseHex)((0,s.int2hex)(e)))}},{key:"emit",value:function(e,t){return this.str+=(0,s.num2hexstring)(e),t&&(this.str+=t),this}},{key:"emitAppCall",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this.emitPush(r),t){for(var i="",a=0;a<t.length;a++)i+=(0,s.num2hexstring)(t.charCodeAt(a));this.emitPush(i)}return this._emitAppCall(e,n),this}},{key:"emitSysCall",value:function(e){if(void 0===e||""===e)throw new Error("Invalid SysCall API");var t=(0,s.ab2hexstring)((0,s.str2ab)(e)),r=(0,s.int2hex)(t.length/2);if(2!==r.length)throw new Error("Invalid length for SysCall API");var n=r+t;return this.emit(c.default.SYSCALL,n)}},{key:"emitPush",value:function(e){switch(void 0===e?"undefined":o(e)){case"boolean":return this.emit(e?c.default.PUSHT:c.default.PUSHF);case"string":return this._emitString(e);case"number":return this._emitNum(e);case"object":return this._emitArray(e);case"undefined":return this.emitPush(!1);default:throw new Error}}}]),t}(s.StringStream);t.createScript=function(e){var t=e.scriptHash,r=e.operation,n=void 0===r?null:r,i=e.args,a=void 0===i?void 0:i,o=e.useTailCall,f=void 0!==o&&o;return(new h).emitAppCall(t,n,a,f).str};t.default=h},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deserialize=t.serialize=void 0;var n=r(4),i=r(61),a=function(e){for(var t={claims:[]},r=e.readVarInt(),n=0;n<r;n++)t.claims.push((0,i.deserializeTransactionInput)(e));return t},o=function(e){if(2!==e.type)throw new Error;var t=(0,n.num2VarInt)(e.claims.length),r=!0,a=!1,o=void 0;try{for(var f,s=e.claims[Symbol.iterator]();!(r=(f=s.next()).done);r=!0){var u=f.value;t+=(0,i.serializeTransactionInput)(u)}}catch(e){a=!0,o=e}finally{try{!r&&s.return&&s.return()}finally{if(a)throw o}}return t},f=function(e){return{}},s=function(e){if(128!==e.type)throw new Error;return""},u=function(e){return{script:e.readVarBytes(),gas:parseInt(e.str.substr(2,2),2)>=1?(0,n.fixed82num)(e.read(8)):0}},c=function(e){if(209!==e.type)throw new Error;var t=(0,n.num2VarInt)(e.script.length/2);return t+=e.script,e.version>=1&&(t+=(0,n.num2fixed8)(e.gas)),t};t.serialize={2:o,128:s,209:c},t.deserialize={2:a,128:f,209:u}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VMExtractor=t.VMParser=void 0;var n=r(4);t.VMParser=function(e){return e.result.stack.map(function(e){switch(e.type){case"ByteArray":return(0,n.ab2str)((0,n.hexstring2ab)(e.value));case"Integer":return parseInt(e.value,10);default:throw Error("Unknown type: "+e.type)}})},t.VMExtractor=function(e){return e.result.stack.map(function(e){return e.value})}},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=r(63),f=n(o),s=r(9),u=r(163),c=n(u),h=r(13),d=/NEO:(\d+\.\d+\.\d+)/,l=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.RPC_VERSION;if(i(this,e),t===h.NEO_NETWORK.MAIN?this.net=h.DEFAULT_RPC.MAIN:t===h.NEO_NETWORK.TEST?this.net=h.DEFAULT_RPC.TEST:this.net=t,this.history=[],!c.default.valid(r))throw new Error("Invalid Version: "+r);this.version=c.default.clean(r)}return a(e,[{key:"execute",value:function(e){return this.history.push(e),e.execute(this.net)}},{key:"query",value:function(e){var t=new f.default(e);return this.execute(t)}},{key:"getAccountState",value:function(e){if(!(0,s.isAddress)(e))throw new Error("Invalid address given: "+e);return this.execute(f.default.getAccountState(e)).then(function(e){return e.result})}},{key:"getAssetState",value:function(e){return this.execute(f.default.getAssetState(e)).then(function(e){return e.result})}},{key:"getBlock",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.execute(f.default.getblock(e,t)).then(function(e){return e.result})}},{key:"getBestBlockHash",value:function(){return this.execute(f.default.getBestBlockHash()).then(function(e){return e.result})}},{key:"getBlockCount",value:function(){return this.execute(f.default.getBlockCount()).then(function(e){return e.result})}},{key:"getBlockSysFee",value:function(e){return this.execute(f.default.getBlockSysFee(e)).then(function(e){return e.result})}},{key:"getConnectionCount",value:function(){return this.execute(f.default.getConnectionCount()).then(function(e){return e.result})}},{key:"getContractState",value:function(e){return this.execute(f.default.getContractState(e)).then(function(e){return e.result})}},{key:"getPeers",value:function(){return this.execute(f.default.getPeers()).then(function(e){return e.result})}},{key:"getRawMemPool",value:function(){return this.execute(f.default.getRawMemPool()).then(function(e){return e.result})}},{key:"getRawTransaction",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.execute(f.default.getRawTransaction(e,t)).then(function(e){return e.result})}},{key:"getStorage",value:function(e,t){return this.execute(f.default.getStorage(e,t)).then(function(e){return e.result})}},{key:"getTxOut",value:function(e,t){return this.execute(f.default.getTxOut(e,t)).then(function(e){return e.result})}},{key:"getVersion",value:function(){var e=this;return this.execute(f.default.getVersion()).then(function(t){var r=t.result.useragent.match(d)[1];return e.version=c.default.clean(r),e.version}).catch(function(t){if(!t.message.includes("Method not found"))throw t;e.version=h.RPC_VERSION})}},{key:"invoke",value:function(e,t){return c.default.lt(this.version,"2.3.3")?Promise.reject(new Error("This method is not implemented for this version")):this.execute(f.default.invoke(e,t)).then(function(e){return e.result})}},{key:"invokeFunction",value:function(e,t,r){return c.default.lt(this.version,"2.3.3")?Promise.reject(new Error("This method is not implemented for this version")):this.execute(f.default.invokeFunction(e,t,r)).then(function(e){return e.result})}},{key:"invokeScript",value:function(e){return c.default.lt(this.version,"2.3.3")?Promise.reject(new Error("This method is not implemented for this version")):this.execute(f.default.invokeScript(e)).then(function(e){return e.result})}},{key:"sendRawTransaction",value:function(e){return this.execute(f.default.sendRawTransaction(e)).then(function(e){return e.result})}},{key:"submitBlock",value:function(e){return this.execute(f.default.submitBlock(e)).then(function(e){return e.result})}},{key:"validateAddress",value:function(e){return this.execute(f.default.validateAddress(e)).then(function(e){return e.result.isvalid})}}]),e}();t.default=l},function(e,t,r){function n(e,t){if(e instanceof o)return e;if("string"!=typeof e)return null;if(e.length>G)return null;if(!(t?Q[be]:Q[de]).test(e))return null;try{return new o(e,t)}catch(e){return null}}function i(e,t){var r=n(e,t);return r?r.version:null}function a(e,t){var r=n(e.trim().replace(/^[=v]+/,""),t);return r?r.version:null}function o(e,t){if(e instanceof o){if(e.loose===t)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: "+e);if(e.length>G)throw new TypeError("version is longer than "+G+" characters");if(!(this instanceof o))return new o(e,t);Z("SemVer",e,t),this.loose=t;var r=e.trim().match(t?Q[be]:Q[de]);if(!r)throw new TypeError("Invalid Version: "+e);if(this.raw=e,this.major=+r[1],this.minor=+r[2],this.patch=+r[3],this.major>$||this.major<0)throw new TypeError("Invalid major version");if(this.minor>$||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>$||this.patch<0)throw new TypeError("Invalid patch version");r[4]?this.prerelease=r[4].split(".").map(function(e){if(/^[0-9]+$/.test(e)){var t=+e;if(t>=0&&t<$)return t}return e}):this.prerelease=[],this.build=r[5]?r[5].split("."):[],this.format()}function f(e,t,r,n){"string"==typeof r&&(n=r,r=void 0);try{return new o(e,r).inc(t,n).version}catch(e){return null}}function s(e,t){if(w(e,t))return null;var r=n(e),i=n(t);if(r.prerelease.length||i.prerelease.length){for(var a in r)if(("major"===a||"minor"===a||"patch"===a)&&r[a]!==i[a])return"pre"+a;return"prerelease"}for(var a in r)if(("major"===a||"minor"===a||"patch"===a)&&r[a]!==i[a])return a}function u(e,t){var r=qe.test(e),n=qe.test(t);return r&&n&&(e=+e,t=+t),r&&!n?-1:n&&!r?1:e<t?-1:e>t?1:0}function c(e,t){return u(t,e)}function h(e,t){return new o(e,t).major}function d(e,t){return new o(e,t).minor}function l(e,t){return new o(e,t).patch}function p(e,t,r){return new o(e,r).compare(new o(t,r))}function b(e,t){return p(e,t,!0)}function v(e,t,r){return p(t,e,r)}function m(e,r){return e.sort(function(e,n){return t.compare(e,n,r)})}function g(e,r){return e.sort(function(e,n){return t.rcompare(e,n,r)})}function y(e,t,r){return p(e,t,r)>0}function _(e,t,r){return p(e,t,r)<0}function w(e,t,r){return 0===p(e,t,r)}function x(e,t,r){return 0!==p(e,t,r)}function k(e,t,r){return p(e,t,r)>=0}function S(e,t,r){return p(e,t,r)<=0}function M(e,t,r,n){var i;switch(t){case"===":"object"==typeof e&&(e=e.version),"object"==typeof r&&(r=r.version),i=e===r;break;case"!==":"object"==typeof e&&(e=e.version),"object"==typeof r&&(r=r.version),i=e!==r;break;case"":case"=":case"==":i=w(e,r,n);break;case"!=":i=x(e,r,n);break;case">":i=y(e,r,n);break;case">=":i=k(e,r,n);break;case"<":i=_(e,r,n);break;case"<=":i=S(e,r,n);break;default:throw new TypeError("Invalid operator: "+t)}return i}function A(e,t){if(e instanceof A){if(e.loose===t)return e;e=e.value}if(!(this instanceof A))return new A(e,t);Z("comparator",e,t),this.loose=t,this.parse(e),this.semver===Le?this.value="":this.value=this.operator+this.semver.version,Z("comp",this)}function E(e,t){if(e instanceof E)return e.loose===t?e:new E(e.raw,t);if(e instanceof A)return new E(e.value,t);if(!(this instanceof E))return new E(e,t);if(this.loose=t,this.raw=e,this.set=e.split(/\s*\|\|\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length}),!this.set.length)throw new TypeError("Invalid SemVer Range: "+e);this.format()}function I(e,t){return new E(e,t).set.map(function(e){return e.map(function(e){return e.value}).join(" ").trim().split(" ")})}function T(e,t){return Z("comp",e),e=O(e,t),Z("caret",e),e=R(e,t),Z("tildes",e),e=z(e,t),Z("xrange",e),e=N(e,t),Z("stars",e),e}function B(e){return!e||"x"===e.toLowerCase()||"*"===e}function R(e,t){return e.trim().split(/\s+/).map(function(e){return P(e,t)}).join(" ")}function P(e,t){var r=t?Q[Ae]:Q[Me];return e.replace(r,function(t,r,n,i,a){Z("tilde",e,t,r,n,i,a);var o;return B(r)?o="":B(n)?o=">="+r+".0.0 <"+(+r+1)+".0.0":B(i)?o=">="+r+"."+n+".0 <"+r+"."+(+n+1)+".0":a?(Z("replaceTilde pr",a),"-"!==a.charAt(0)&&(a="-"+a),o=">="+r+"."+n+"."+i+a+" <"+r+"."+(+n+1)+".0"):o=">="+r+"."+n+"."+i+" <"+r+"."+(+n+1)+".0",Z("tilde return",o),o})}function O(e,t){return e.trim().split(/\s+/).map(function(e){return C(e,t)}).join(" ")}function C(e,t){Z("caret",e,t);var r=t?Q[Be]:Q[Te];return e.replace(r,function(t,r,n,i,a){Z("caret",e,t,r,n,i,a);var o;return B(r)?o="":B(n)?o=">="+r+".0.0 <"+(+r+1)+".0.0":B(i)?o="0"===r?">="+r+"."+n+".0 <"+r+"."+(+n+1)+".0":">="+r+"."+n+".0 <"+(+r+1)+".0.0":a?(Z("replaceCaret pr",a),"-"!==a.charAt(0)&&(a="-"+a),o="0"===r?"0"===n?">="+r+"."+n+"."+i+a+" <"+r+"."+n+"."+(+i+1):">="+r+"."+n+"."+i+a+" <"+r+"."+(+n+1)+".0":">="+r+"."+n+"."+i+a+" <"+(+r+1)+".0.0"):(Z("no pr"),o="0"===r?"0"===n?">="+r+"."+n+"."+i+" <"+r+"."+n+"."+(+i+1):">="+r+"."+n+"."+i+" <"+r+"."+(+n+1)+".0":">="+r+"."+n+"."+i+" <"+(+r+1)+".0.0"),Z("caret return",o),o})}function z(e,t){return Z("replaceXRanges",e,t),e.split(/\s+/).map(function(e){return j(e,t)}).join(" ")}function j(e,t){e=e.trim();var r=t?Q[xe]:Q[we];return e.replace(r,function(t,r,n,i,a,o){Z("xRange",e,t,r,n,i,a,o);var f=B(n),s=f||B(i),u=s||B(a),c=u;return"="===r&&c&&(r=""),f?t=">"===r||"<"===r?"<0.0.0":"*":r&&c?(s&&(i=0),u&&(a=0),">"===r?(r=">=",s?(n=+n+1,i=0,a=0):u&&(i=+i+1,a=0)):"<="===r&&(r="<",s?n=+n+1:i=+i+1),t=r+n+"."+i+"."+a):s?t=">="+n+".0.0 <"+(+n+1)+".0.0":u&&(t=">="+n+"."+i+".0 <"+n+"."+(+i+1)+".0"),Z("xRange return",t),t})}function N(e,t){return Z("replaceStars",e,t),e.trim().replace(Q[je],"")}function q(e,t,r,n,i,a,o,f,s,u,c,h,d){return t=B(r)?"":B(n)?">="+r+".0.0":B(i)?">="+r+"."+n+".0":">="+t,f=B(s)?"":B(u)?"<"+(+s+1)+".0.0":B(c)?"<"+s+"."+(+u+1)+".0":h?"<="+s+"."+u+"."+c+"-"+h:"<="+f,(t+" "+f).trim()}function L(e,t){for(var r=0;r<e.length;r++)if(!e[r].test(t))return!1;if(t.prerelease.length){for(var r=0;r<e.length;r++)if(Z(e[r].semver),e[r].semver!==Le&&e[r].semver.prerelease.length>0){var n=e[r].semver;if(n.major===t.major&&n.minor===t.minor&&n.patch===t.patch)return!0}return!1}return!0}function D(e,t,r){try{t=new E(t,r)}catch(e){return!1}return t.test(e)}function H(e,t,r){var n=null,i=null;try{var a=new E(t,r)}catch(e){return null}return e.forEach(function(e){a.test(e)&&(n&&-1!==i.compare(e)||(n=e,i=new o(n,r)))}),n}function F(e,t,r){var n=null,i=null;try{var a=new E(t,r)}catch(e){return null}return e.forEach(function(e){a.test(e)&&(n&&1!==i.compare(e)||(n=e,i=new o(n,r)))}),n}function U(e,t){try{return new E(e,t).range||"*"}catch(e){return null}}function V(e,t,r){return K(e,t,"<",r)}function W(e,t,r){return K(e,t,">",r)}function K(e,t,r,n){e=new o(e,n),t=new E(t,n);var i,a,f,s,u;switch(r){case">":i=y,a=S,f=_,s=">",u=">=";break;case"<":i=_,a=k,f=y,s="<",u="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(D(e,t,n))return!1;for(var c=0;c<t.set.length;++c){var h=t.set[c],d=null,l=null;if(h.forEach(function(e){e.semver===Le&&(e=new A(">=0.0.0")),d=d||e,l=l||e,i(e.semver,d.semver,n)?d=e:f(e.semver,l.semver,n)&&(l=e)}),d.operator===s||d.operator===u)return!1;if((!l.operator||l.operator===s)&&a(e,l.semver))return!1;if(l.operator===u&&f(e,l.semver))return!1}return!0}function Y(e,t){var r=n(e,t);return r&&r.prerelease.length?r.prerelease:null}function X(e,t,r){return e=new E(e,r),t=new E(t,r),e.intersects(t)}t=e.exports=o;var Z;Z="object"==typeof process&&Object({NODE_ENV:"production"})&&Object({NODE_ENV:"production"}).NODE_DEBUG&&/\bsemver\b/i.test(Object({NODE_ENV:"production"}).NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER"),console.log.apply(console,e)}:function(){},t.SEMVER_SPEC_VERSION="2.0.0";var G=256,$=Number.MAX_SAFE_INTEGER||9007199254740991,Q=t.re=[],J=t.src=[],ee=0,te=ee++;J[te]="0|[1-9]\\d*";var re=ee++;J[re]="[0-9]+";var ne=ee++;J[ne]="\\d*[a-zA-Z-][a-zA-Z0-9-]*";var ie=ee++;J[ie]="("+J[te]+")\\.("+J[te]+")\\.("+J[te]+")";var ae=ee++;J[ae]="("+J[re]+")\\.("+J[re]+")\\.("+J[re]+")";var oe=ee++;J[oe]="(?:"+J[te]+"|"+J[ne]+")";var fe=ee++;J[fe]="(?:"+J[re]+"|"+J[ne]+")";var se=ee++;J[se]="(?:-("+J[oe]+"(?:\\."+J[oe]+")*))";var ue=ee++;J[ue]="(?:-?("+J[fe]+"(?:\\."+J[fe]+")*))";var ce=ee++;J[ce]="[0-9A-Za-z-]+";var he=ee++;J[he]="(?:\\+("+J[ce]+"(?:\\."+J[ce]+")*))";var de=ee++,le="v?"+J[ie]+J[se]+"?"+J[he]+"?";J[de]="^"+le+"$";var pe="[v=\\s]*"+J[ae]+J[ue]+"?"+J[he]+"?",be=ee++;J[be]="^"+pe+"$";var ve=ee++;J[ve]="((?:<|>)?=?)";var me=ee++;J[me]=J[re]+"|x|X|\\*";var ge=ee++;J[ge]=J[te]+"|x|X|\\*";var ye=ee++;J[ye]="[v=\\s]*("+J[ge]+")(?:\\.("+J[ge]+")(?:\\.("+J[ge]+")(?:"+J[se]+")?"+J[he]+"?)?)?";var _e=ee++;J[_e]="[v=\\s]*("+J[me]+")(?:\\.("+J[me]+")(?:\\.("+J[me]+")(?:"+J[ue]+")?"+J[he]+"?)?)?";var we=ee++;J[we]="^"+J[ve]+"\\s*"+J[ye]+"$";var xe=ee++;J[xe]="^"+J[ve]+"\\s*"+J[_e]+"$";var ke=ee++;J[ke]="(?:~>?)";var Se=ee++;J[Se]="(\\s*)"+J[ke]+"\\s+",Q[Se]=new RegExp(J[Se],"g");var Me=ee++;J[Me]="^"+J[ke]+J[ye]+"$";var Ae=ee++;J[Ae]="^"+J[ke]+J[_e]+"$";var Ee=ee++;J[Ee]="(?:\\^)";var Ie=ee++;J[Ie]="(\\s*)"+J[Ee]+"\\s+",Q[Ie]=new RegExp(J[Ie],"g");var Te=ee++;J[Te]="^"+J[Ee]+J[ye]+"$";var Be=ee++;J[Be]="^"+J[Ee]+J[_e]+"$";var Re=ee++;J[Re]="^"+J[ve]+"\\s*("+pe+")$|^$";var Pe=ee++;J[Pe]="^"+J[ve]+"\\s*("+le+")$|^$";var Oe=ee++;J[Oe]="(\\s*)"+J[ve]+"\\s*("+pe+"|"+J[ye]+")",Q[Oe]=new RegExp(J[Oe],"g");var Ce=ee++;J[Ce]="^\\s*("+J[ye]+")\\s+-\\s+("+J[ye]+")\\s*$";var ze=ee++;J[ze]="^\\s*("+J[_e]+")\\s+-\\s+("+J[_e]+")\\s*$";var je=ee++;J[je]="(<|>)?=?\\s*\\*";for(var Ne=0;Ne<ee;Ne++)Z(Ne,J[Ne]),Q[Ne]||(Q[Ne]=new RegExp(J[Ne]));t.parse=n,t.valid=i,t.clean=a,t.SemVer=o,o.prototype.format=function(){return this.version=this.major+"."+this.minor+"."+this.patch,this.prerelease.length&&(this.version+="-"+this.prerelease.join(".")),this.version},o.prototype.toString=function(){return this.version},o.prototype.compare=function(e){return Z("SemVer.compare",this.version,this.loose,e),e instanceof o||(e=new o(e,this.loose)),this.compareMain(e)||this.comparePre(e)},o.prototype.compareMain=function(e){return e instanceof o||(e=new o(e,this.loose)),u(this.major,e.major)||u(this.minor,e.minor)||u(this.patch,e.patch)},o.prototype.comparePre=function(e){if(e instanceof o||(e=new o(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var t=0;do{var r=this.prerelease[t],n=e.prerelease[t];if(Z("prerelease compare",t,r,n),void 0===r&&void 0===n)return 0;if(void 0===n)return 1;if(void 0===r)return-1;if(r!==n)return u(r,n)}while(++t)},o.prototype.inc=function(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{for(var r=this.prerelease.length;--r>=0;)"number"==typeof this.prerelease[r]&&(this.prerelease[r]++,r=-2);-1===r&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: "+e)}return this.format(),this.raw=this.version,this},t.inc=f,t.diff=s,t.compareIdentifiers=u;var qe=/^[0-9]+$/;t.rcompareIdentifiers=c,t.major=h,t.minor=d,t.patch=l,t.compare=p,t.compareLoose=b,t.rcompare=v,t.sort=m,t.rsort=g,t.gt=y,t.lt=_,t.eq=w,t.neq=x,t.gte=k,t.lte=S,t.cmp=M,t.Comparator=A;var Le={};A.prototype.parse=function(e){var t=this.loose?Q[Re]:Q[Pe],r=e.match(t);if(!r)throw new TypeError("Invalid comparator: "+e);this.operator=r[1],"="===this.operator&&(this.operator=""),r[2]?this.semver=new o(r[2],this.loose):this.semver=Le},A.prototype.toString=function(){return this.value},A.prototype.test=function(e){return Z("Comparator.test",e,this.loose),this.semver===Le||("string"==typeof e&&(e=new o(e,this.loose)),M(e,this.operator,this.semver,this.loose))},A.prototype.intersects=function(e,t){if(!(e instanceof A))throw new TypeError("a Comparator is required");var r;if(""===this.operator)return r=new E(e.value,t),D(this.value,r,t);if(""===e.operator)return r=new E(this.value,t),D(e.semver,r,t);var n=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),i=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),a=this.semver.version===e.semver.version,o=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),f=M(this.semver,"<",e.semver,t)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),s=M(this.semver,">",e.semver,t)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return n||i||a&&o||f||s},t.Range=E,E.prototype.format=function(){return this.range=this.set.map(function(e){return e.join(" ").trim()}).join("||").trim(),this.range},E.prototype.toString=function(){return this.range},E.prototype.parseRange=function(e){var t=this.loose;e=e.trim(),Z("range",e,t);var r=t?Q[ze]:Q[Ce];e=e.replace(r,q),Z("hyphen replace",e),e=e.replace(Q[Oe],"$1$2$3"),Z("comparator trim",e,Q[Oe]),e=e.replace(Q[Se],"$1~"),e=e.replace(Q[Ie],"$1^"),e=e.split(/\s+/).join(" ");var n=t?Q[Re]:Q[Pe],i=e.split(" ").map(function(e){return T(e,t)}).join(" ").split(/\s+/);return this.loose&&(i=i.filter(function(e){return!!e.match(n)})),i=i.map(function(e){return new A(e,t)})},E.prototype.intersects=function(e,t){if(!(e instanceof E))throw new TypeError("a Range is required");return this.set.some(function(r){return r.every(function(r){return e.set.some(function(e){return e.every(function(e){return r.intersects(e,t)})})})})},t.toComparators=I,E.prototype.test=function(e){if(!e)return!1;"string"==typeof e&&(e=new o(e,this.loose));for(var t=0;t<this.set.length;t++)if(L(this.set[t],e))return!0;return!1},t.satisfies=D,t.maxSatisfying=H,t.minSatisfying=F,t.validRange=U,t.ltr=V,t.gtr=W,t.outside=K,t.prerelease=Y,t.intersects=X},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getPrice=void 0;var n=r(20),i=function(e){return e&&e.__esModule?e:{default:e}}(n),a=["aud","brl","cad","chf","clp","cny","czk","dkk","eur","gbp","hkd","huf","idr","ils","inr","jpy","krw","mxn","myr","nok","nzd","php","pkr","pln","rub","sek","sgd","thb","try","twd","zar"],o=t.getPrice=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"NEO",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"usd";return t=t.toLowerCase(),"usd"===t||a.includes(t)?i.default.get("https://api.coinmarketcap.com/v1/ticker/"+e+"/?convert="+t).then(function(e){var r=e.data;if(r.error)throw new Error(r.error);var n=r[0]["price_"+t.toLowerCase()];if(n)return parseInt(n,10);throw new Error("Something went wrong with the CoinMarketCap API!")}):Promise.reject(new ReferenceError(t+" is not one of the accepted currencies!"))};t.default={get:{price:o}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTokenBalance=t.getTokenInfo=void 0;var n=function(){function e(e,t){var r=[],n=!0,i=!1,a=void 0;try{for(var o,f=e[Symbol.iterator]();!(n=(o=f.next()).done)&&(r.push(o.value),!t||r.length!==t);n=!0);}catch(e){i=!0,a=e}finally{try{!n&&f.return&&f.return()}finally{if(i)throw a}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=r(30),a=r(9),o=r(31),f=r(4),s=t.getTokenInfo=function(e,t){var r=new i.ScriptBuilder;r.emitAppCall(t,"name").emitAppCall(t,"symbol").emitAppCall(t,"decimals").emitAppCall(t,"totalSupply");var a=r.str;return o.Query.invokeScript(a,!1).parseWith(o.VMExtractor).execute(e).then(function(e){var t=e.slice(0,2).map(function(e){return(0,f.ab2str)((0,f.hexstring2ab)(e))}),r=n(t,2);return{name:r[0],symbol:r[1],decimals:parseInt(e[2],10),totalSupply:(0,f.fixed82num)(e[3])}})},u=t.getTokenBalance=function(e,t,r){var n=(0,f.reverseHex)((0,a.getScriptHashFromAddress)(r)),s=new i.ScriptBuilder,u=s.emitAppCall(t,"balanceOf",[n]).str;return o.Query.invokeScript(u,!1).execute(e).then(function(e){return(0,f.fixed82num)(e.result.stack[0].value)})};t.default={get:{tokenInfo:s,tokenBalance:u}}}])});
//# sourceMappingURL=index.js.map
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("assert"),require("crypto"),require("http"),require("https"),require("url"),require("util"),require("fs"),require("buffer"),require("stream"),require("tty"),require("net"),require("zlib"),require("child_process"),require("os"),require("path"));else if("function"==typeof define&&define.amd)define(["assert","crypto","http","https","url","util","fs","buffer","stream","tty","net","zlib","child_process","os","path"],t);else{var r="object"==typeof exports?t(require("assert"),require("crypto"),require("http"),require("https"),require("url"),require("util"),require("fs"),require("buffer"),require("stream"),require("tty"),require("net"),require("zlib"),require("child_process"),require("os"),require("path")):t(e.assert,e.crypto,e.http,e.https,e.url,e.util,e.fs,e.buffer,e.stream,e.tty,e.net,e.zlib,e.child_process,e.os,e.path);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(this,function(__WEBPACK_EXTERNAL_MODULE_14__,__WEBPACK_EXTERNAL_MODULE_25__,__WEBPACK_EXTERNAL_MODULE_36__,__WEBPACK_EXTERNAL_MODULE_37__,__WEBPACK_EXTERNAL_MODULE_39__,__WEBPACK_EXTERNAL_MODULE_41__,__WEBPACK_EXTERNAL_MODULE_42__,__WEBPACK_EXTERNAL_MODULE_46__,__WEBPACK_EXTERNAL_MODULE_77__,__WEBPACK_EXTERNAL_MODULE_82__,__WEBPACK_EXTERNAL_MODULE_83__,__WEBPACK_EXTERNAL_MODULE_84__,__WEBPACK_EXTERNAL_MODULE_152__,__WEBPACK_EXTERNAL_MODULE_154__,__WEBPACK_EXTERNAL_MODULE_157__){return function(e){function t(n){if(r[n])return r[n].exports;var i=r[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=64)}([function(e,t,r){!function(r,n){e.exports=t=n()}(0,function(){var e=e||function(e,t){var r=Object.create||function(){function e(){}return function(t){var r;return e.prototype=t,r=new e,e.prototype=null,r}}(),n={},i=n.lib={},a=i.Base=function(){return{extend:function(e){var t=r(this);return e&&t.mixIn(e),t.hasOwnProperty("init")&&this.init!==t.init||(t.init=function(){t.$super.init.apply(this,arguments)}),t.init.prototype=t,t.$super=this,t},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),o=i.WordArray=a.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=void 0!=t?t:4*e.length},toString:function(e){return(e||s).stringify(this)},concat:function(e){var t=this.words,r=e.words,n=this.sigBytes,i=e.sigBytes;if(this.clamp(),n%4)for(var a=0;a<i;a++){var o=r[a>>>2]>>>24-a%4*8&255;t[n+a>>>2]|=o<<24-(n+a)%4*8}else for(var a=0;a<i;a+=4)t[n+a>>>2]=r[a>>>2];return this.sigBytes+=i,this},clamp:function(){var t=this.words,r=this.sigBytes;t[r>>>2]&=4294967295<<32-r%4*8,t.length=e.ceil(r/4)},clone:function(){var e=a.clone.call(this);return e.words=this.words.slice(0),e},random:function(t){for(var r,n=[],i=0;i<t;i+=4){var a=function(t){var t=t,r=987654321,n=4294967295;return function(){r=36969*(65535&r)+(r>>16)&n,t=18e3*(65535&t)+(t>>16)&n;var i=(r<<16)+t&n;return i/=4294967296,(i+=.5)*(e.random()>.5?1:-1)}}(4294967296*(r||e.random()));r=987654071*a(),n.push(4294967296*a()|0)}return new o.init(n,t)}}),f=n.enc={},s=f.Hex={stringify:function(e){for(var t=e.words,r=e.sigBytes,n=[],i=0;i<r;i++){var a=t[i>>>2]>>>24-i%4*8&255;n.push((a>>>4).toString(16)),n.push((15&a).toString(16))}return n.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n+=2)r[n>>>3]|=parseInt(e.substr(n,2),16)<<24-n%8*4;return new o.init(r,t/2)}},u=f.Latin1={stringify:function(e){for(var t=e.words,r=e.sigBytes,n=[],i=0;i<r;i++){var a=t[i>>>2]>>>24-i%4*8&255;n.push(String.fromCharCode(a))}return n.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n++)r[n>>>2]|=(255&e.charCodeAt(n))<<24-n%4*8;return new o.init(r,t)}},c=f.Utf8={stringify:function(e){try{return decodeURIComponent(escape(u.stringify(e)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(e){return u.parse(unescape(encodeURIComponent(e)))}},h=i.BufferedBlockAlgorithm=a.extend({reset:function(){this._data=new o.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=c.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(t){var r=this._data,n=r.words,i=r.sigBytes,a=this.blockSize,f=4*a,s=i/f;s=t?e.ceil(s):e.max((0|s)-this._minBufferSize,0);var u=s*a,c=e.min(4*u,i);if(u){for(var h=0;h<u;h+=a)this._doProcessBlock(n,h);var d=n.splice(0,u);r.sigBytes-=c}return new o.init(d,c)},clone:function(){var e=a.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0}),d=(i.Hasher=h.extend({cfg:a.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(e){return function(t,r){return new e.init(r).finalize(t)}},_createHmacHelper:function(e){return function(t,r){return new d.HMAC.init(e,r).finalize(t)}}}),n.algo={});return n}(Math);return e})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(8))}(0,function(e){e.lib.Cipher||function(t){var r=e,n=r.lib,i=n.Base,a=n.WordArray,o=n.BufferedBlockAlgorithm,f=r.enc,s=(f.Utf8,f.Base64),u=r.algo,c=u.EvpKDF,h=n.Cipher=o.extend({cfg:i.extend(),createEncryptor:function(e,t){return this.create(this._ENC_XFORM_MODE,e,t)},createDecryptor:function(e,t){return this.create(this._DEC_XFORM_MODE,e,t)},init:function(e,t,r){this.cfg=this.cfg.extend(r),this._xformMode=e,this._key=t,this.reset()},reset:function(){o.reset.call(this),this._doReset()},process:function(e){return this._append(e),this._process()},finalize:function(e){return e&&this._append(e),this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function e(e){return"string"==typeof e?k:_}return function(t){return{encrypt:function(r,n,i){return e(n).encrypt(t,r,n,i)},decrypt:function(r,n,i){return e(n).decrypt(t,r,n,i)}}}}()}),d=(n.StreamCipher=h.extend({_doFinalize:function(){return this._process(!0)},blockSize:1}),r.mode={}),l=n.BlockCipherMode=i.extend({createEncryptor:function(e,t){return this.Encryptor.create(e,t)},createDecryptor:function(e,t){return this.Decryptor.create(e,t)},init:function(e,t){this._cipher=e,this._iv=t}}),p=d.CBC=function(){function e(e,r,n){var i=this._iv;if(i){var a=i;this._iv=t}else var a=this._prevBlock;for(var o=0;o<n;o++)e[r+o]^=a[o]}var r=l.extend();return r.Encryptor=r.extend({processBlock:function(t,r){var n=this._cipher,i=n.blockSize;e.call(this,t,r,i),n.encryptBlock(t,r),this._prevBlock=t.slice(r,r+i)}}),r.Decryptor=r.extend({processBlock:function(t,r){var n=this._cipher,i=n.blockSize,a=t.slice(r,r+i);n.decryptBlock(t,r),e.call(this,t,r,i),this._prevBlock=a}}),r}(),b=r.pad={},v=b.Pkcs7={pad:function(e,t){for(var r=4*t,n=r-e.sigBytes%r,i=n<<24|n<<16|n<<8|n,o=[],f=0;f<n;f+=4)o.push(i);var s=a.create(o,n);e.concat(s)},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},m=(n.BlockCipher=h.extend({cfg:h.cfg.extend({mode:p,padding:v}),reset:function(){h.reset.call(this);var e=this.cfg,t=e.iv,r=e.mode;if(this._xformMode==this._ENC_XFORM_MODE)var n=r.createEncryptor;else{var n=r.createDecryptor;this._minBufferSize=1}this._mode&&this._mode.__creator==n?this._mode.init(this,t&&t.words):(this._mode=n.call(r,this,t&&t.words),this._mode.__creator=n)},_doProcessBlock:function(e,t){this._mode.processBlock(e,t)},_doFinalize:function(){var e=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){e.pad(this._data,this.blockSize);var t=this._process(!0)}else{var t=this._process(!0);e.unpad(t)}return t},blockSize:4}),n.CipherParams=i.extend({init:function(e){this.mixIn(e)},toString:function(e){return(e||this.formatter).stringify(this)}})),g=r.format={},y=g.OpenSSL={stringify:function(e){var t=e.ciphertext,r=e.salt;if(r)var n=a.create([1398893684,1701076831]).concat(r).concat(t);else var n=t;return n.toString(s)},parse:function(e){var t=s.parse(e),r=t.words;if(1398893684==r[0]&&1701076831==r[1]){var n=a.create(r.slice(2,4));r.splice(0,4),t.sigBytes-=16}return m.create({ciphertext:t,salt:n})}},_=n.SerializableCipher=i.extend({cfg:i.extend({format:y}),encrypt:function(e,t,r,n){n=this.cfg.extend(n);var i=e.createEncryptor(r,n),a=i.finalize(t),o=i.cfg;return m.create({ciphertext:a,key:r,iv:o.iv,algorithm:e,mode:o.mode,padding:o.padding,blockSize:e.blockSize,formatter:n.format})},decrypt:function(e,t,r,n){return n=this.cfg.extend(n),t=this._parse(t,n.format),e.createDecryptor(r,n).finalize(t.ciphertext)},_parse:function(e,t){return"string"==typeof e?t.parse(e,this):e}}),w=r.kdf={},x=w.OpenSSL={execute:function(e,t,r,n){n||(n=a.random(8));var i=c.create({keySize:t+r}).compute(e,n),o=a.create(i.words.slice(t),4*r);return i.sigBytes=4*t,m.create({key:i,iv:o,salt:n})}},k=n.PasswordBasedCipher=_.extend({cfg:_.cfg.extend({kdf:x}),encrypt:function(e,t,r,n){n=this.cfg.extend(n);var i=n.kdf.execute(r,e.keySize,e.ivSize);n.iv=i.iv;var a=_.encrypt.call(this,e,t,i.key,n);return a.mixIn(i),a},decrypt:function(e,t,r,n){n=this.cfg.extend(n),t=this._parse(t,n.format);var i=n.kdf.execute(r,e.keySize,e.ivSize,t.salt);return n.iv=i.iv,_.decrypt.call(this,e,t,i.key,n)}})}()})},function(e,t,r){"use strict";function n(e){return"[object Array]"===S.call(e)}function i(e){return"[object ArrayBuffer]"===S.call(e)}function a(e){return"undefined"!=typeof FormData&&e instanceof FormData}function o(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function f(e){return"string"==typeof e}function s(e){return"number"==typeof e}function u(e){return void 0===e}function c(e){return null!==e&&"object"==typeof e}function h(e){return"[object Date]"===S.call(e)}function d(e){return"[object File]"===S.call(e)}function l(e){return"[object Blob]"===S.call(e)}function p(e){return"[object Function]"===S.call(e)}function b(e){return c(e)&&p(e.pipe)}function v(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function m(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}function g(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)}function y(e,t){if(null!==e&&void 0!==e)if("object"==typeof e||n(e)||(e=[e]),n(e))for(var r=0,i=e.length;r<i;r++)t.call(null,e[r],r,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}function _(){function e(e,r){"object"==typeof t[r]&&"object"==typeof e?t[r]=_(t[r],e):t[r]=e}for(var t={},r=0,n=arguments.length;r<n;r++)y(arguments[r],e);return t}function w(e,t,r){return y(t,function(t,n){e[n]=r&&"function"==typeof t?x(t,r):t}),e}var x=r(32),k=r(68),S=Object.prototype.toString;e.exports={isArray:n,isArrayBuffer:i,isBuffer:k,isFormData:a,isArrayBufferView:o,isString:f,isNumber:s,isObject:c,isUndefined:u,isDate:h,isFile:d,isBlob:l,isFunction:p,isStream:b,isURLSearchParams:v,isStandardBrowserEnv:g,forEach:y,merge:_,extend:w,trim:m}},function(e,t,r){"use strict";var n=t;n.version=r(102).version,n.utils=r(103),n.rand=r(104),n.curve=r(17),n.curves=r(110),n.ec=r(118),n.eddsa=r(122)},function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.sha256=t.hash256=t.hash160=t.StringStream=t.reverseHex=t.reverseArray=t.hexXor=t.num2VarInt=t.fixed82num=t.num2fixed8=t.num2hexstring=t.int2hex=t.str2hexstring=t.ab2hexstring=t.hexstring2ab=t.str2ab=t.ab2str=void 0;var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),a=r(55),o=function(e){return e&&e.__esModule?e:{default:e}}(a),f=(t.ab2str=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},t.str2ab=function(e){for(var t=new Uint8Array(e.length),r=0,n=e.length;r<n;r++)t[r]=e.charCodeAt(r);return t}),s=(t.hexstring2ab=function(e){for(var t=[];e.length>=2;)t.push(parseInt(e.substring(0,2),16)),e=e.substring(2,e.length);return t},t.ab2hexstring=function(e){for(var t="",r=0;r<e.length;r++){var n=e[r].toString(16);n=0===n.length?"00":1===n.length?"0"+n:n,t+=n}return t}),u=(t.str2hexstring=function(e){return s(f(e))},t.int2hex=function(e){var t=e.toString(16);return t.length%2?"0"+t:t},t.num2hexstring=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,r=e.toString(16);return r.length%t==0?r:("0".repeat(t)+r).substring(r.length)}),c=(t.num2fixed8=function(e){var t=Math.round(1e8*e).toString(16);return c(("0000000000000000"+t).substring(t.length))},t.fixed82num=function(e){return parseInt(c(e),16)/1e8},t.num2VarInt=function(e){return e<253?u(e):e<=65535?"fd"+u(e,4):e<=4294967295?"fe"+u(e,8):"ff"+u(e,8)+u(e/Math.pow(2,32),8)},t.hexXor=function(e,t){if(e.length!==t.length)throw new Error;if(e.length%2!=0)throw new Error;for(var r=[],n=0;n<e.length;n+=2)r.push(parseInt(e.substr(n,2),16)^parseInt(t.substr(n,2),16));return s(r)},t.reverseArray=function(e){for(var t=new Uint8Array(e.length),r=0;r<e.length;r++)t[r]=e[e.length-1-r];return t},t.reverseHex=function(e){if(e.length%2!=0)throw new Error("Incorrect Length: "+e);for(var t="",r=e.length-2;r>=0;r-=2)t+=e.substr(r,2);return t});t.StringStream=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";n(this,e),this.str=t,this.pter=0}return i(e,[{key:"isEmpty",value:function(){return this.pter>=this.str.length}},{key:"read",value:function(e){if(this.isEmpty())throw new Error;var t=this.str.substr(this.pter,2*e);return this.pter+=2*e,t}},{key:"readVarBytes",value:function(){return this.read(this.readVarInt())}},{key:"readVarInt",value:function(){var e=parseInt(this.read(1),16);return 253===e?e=parseInt(c(this.read(2)),16):254===e?e=parseInt(c(this.read(4)),16):255===e&&(e=parseInt(c(this.read(8)),16)),e}}]),e}(),t.hash160=function(e){var t=o.default.enc.Hex.parse(e),r=o.default.SHA256(t);return o.default.RIPEMD160(r).toString()},t.hash256=function(e){var t=o.default.enc.Hex.parse(e),r=o.default.SHA256(t);return o.default.SHA256(r).toString()},t.sha256=function(e){var t=o.default.enc.Hex.parse(e);return o.default.SHA256(t).toString()}},function(e,t,r){"use strict";function n(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"==typeof e)if(t){if("hex"===t)for(e=e.replace(/[^a-z0-9]+/gi,""),e.length%2!=0&&(e="0"+e),n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}else for(var n=0;n<e.length;n++){var i=e.charCodeAt(n),a=i>>8,o=255&i;a?r.push(a,o):r.push(o)}else for(n=0;n<e.length;n++)r[n]=0|e[n];return r}function i(e){for(var t="",r=0;r<e.length;r++)t+=f(e[r].toString(16));return t}function a(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function o(e,t){for(var r="",n=0;n<e.length;n++){var i=e[n];"little"===t&&(i=a(i)),r+=s(i.toString(16))}return r}function f(e){return 1===e.length?"0"+e:e}function s(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}function u(e,t,r,n){var i=r-t;I(i%4==0);for(var a=new Array(i/4),o=0,f=t;o<a.length;o++,f+=4){var s;s="big"===n?e[f]<<24|e[f+1]<<16|e[f+2]<<8|e[f+3]:e[f+3]<<24|e[f+2]<<16|e[f+1]<<8|e[f],a[o]=s>>>0}return a}function c(e,t){for(var r=new Array(4*e.length),n=0,i=0;n<e.length;n++,i+=4){var a=e[n];"big"===t?(r[i]=a>>>24,r[i+1]=a>>>16&255,r[i+2]=a>>>8&255,r[i+3]=255&a):(r[i+3]=a>>>24,r[i+2]=a>>>16&255,r[i+1]=a>>>8&255,r[i]=255&a)}return r}function h(e,t){return e>>>t|e<<32-t}function d(e,t){return e<<t|e>>>32-t}function l(e,t){return e+t>>>0}function p(e,t,r){return e+t+r>>>0}function b(e,t,r,n){return e+t+r+n>>>0}function v(e,t,r,n,i){return e+t+r+n+i>>>0}function m(e,t,r,n){var i=e[t],a=e[t+1],o=n+a>>>0,f=(o<n?1:0)+r+i;e[t]=f>>>0,e[t+1]=o}function g(e,t,r,n){return(t+n>>>0<t?1:0)+e+r>>>0}function y(e,t,r,n){return t+n>>>0}function _(e,t,r,n,i,a,o,f){var s=0,u=t;return u=u+n>>>0,s+=u<t?1:0,u=u+a>>>0,s+=u<a?1:0,u=u+f>>>0,s+=u<f?1:0,e+r+i+o+s>>>0}function w(e,t,r,n,i,a,o,f){return t+n+a+f>>>0}function x(e,t,r,n,i,a,o,f,s,u){var c=0,h=t;return h=h+n>>>0,c+=h<t?1:0,h=h+a>>>0,c+=h<a?1:0,h=h+f>>>0,c+=h<f?1:0,h=h+u>>>0,c+=h<u?1:0,e+r+i+o+s+c>>>0}function k(e,t,r,n,i,a,o,f,s,u){return t+n+a+f+u>>>0}function S(e,t,r){return(t<<32-r|e>>>r)>>>0}function M(e,t,r){return(e<<32-r|t>>>r)>>>0}function A(e,t,r){return e>>>r}function E(e,t,r){return(e<<32-r|t>>>r)>>>0}var I=r(7),T=r(18);t.inherits=T,t.toArray=n,t.toHex=i,t.htonl=a,t.toHex32=o,t.zero2=f,t.zero8=s,t.join32=u,t.split32=c,t.rotr32=h,t.rotl32=d,t.sum32=l,t.sum32_3=p,t.sum32_4=b,t.sum32_5=v,t.sum64=m,t.sum64_hi=g,t.sum64_lo=y,t.sum64_4_hi=_,t.sum64_4_lo=w,t.sum64_5_hi=x,t.sum64_5_lo=k,t.rotr64_hi=S,t.rotr64_lo=M,t.shr64_hi=A,t.shr64_lo=E},function(e,t,r){(function(e){!function(e,t){"use strict";function n(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function a(e,t,r){if(a.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}function o(e,t,r){for(var n=0,i=Math.min(e.length,r),a=t;a<i;a++){var o=e.charCodeAt(a)-48;n<<=4,n|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return n}function f(e,t,r,n){for(var i=0,a=Math.min(e.length,r),o=t;o<a;o++){var f=e.charCodeAt(o)-48;i*=n,i+=f>=49?f-49+10:f>=17?f-17+10:f}return i}function s(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,i=r%26;t[r]=(e.words[n]&1<<i)>>>i}return t}function u(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var i=0|e.words[0],a=0|t.words[0],o=i*a,f=67108863&o,s=o/67108864|0;r.words[0]=f;for(var u=1;u<n;u++){for(var c=s>>>26,h=67108863&s,d=Math.min(u,t.length-1),l=Math.max(0,u-e.length+1);l<=d;l++){var p=u-l|0;i=0|e.words[p],a=0|t.words[l],o=i*a+h,c+=o/67108864|0,h=67108863&o}r.words[u]=0|h,s=0|c}return 0!==s?r.words[u]=0|s:r.length--,r.strip()}function c(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,i=0,a=0;a<r.length-1;a++){var o=i;i=0;for(var f=67108863&n,s=Math.min(a,t.length-1),u=Math.max(0,a-e.length+1);u<=s;u++){var c=a-u,h=0|e.words[c],d=0|t.words[u],l=h*d,p=67108863&l;o=o+(l/67108864|0)|0,p=p+f|0,f=67108863&p,o=o+(p>>>26)|0,i+=o>>>26,o&=67108863}r.words[a]=f,n=o,o=i}return 0!==n?r.words[a]=n:r.length--,r.strip()}function h(e,t,r){return(new d).mulp(e,t,r)}function d(e,t){this.x=e,this.y=t}function l(e,t){this.name=e,this.p=new a(t,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function p(){l.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function b(){l.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function v(){l.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function m(){l.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function g(e){if("string"==typeof e){var t=a._prime(e);this.m=t.p,this.prime=t}else n(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function y(e){g.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}"object"==typeof e?e.exports=a:t.BN=a,a.BN=a,a.wordSize=26;var _;try{_=r(46).Buffer}catch(e){}a.isBN=function(e){return e instanceof a||null!==e&&"object"==typeof e&&e.constructor.wordSize===a.wordSize&&Array.isArray(e.words)},a.max=function(e,t){return e.cmp(t)>0?e:t},a.min=function(e,t){return e.cmp(t)<0?e:t},a.prototype._init=function(e,t,r){if("number"==typeof e)return this._initNumber(e,t,r);if("object"==typeof e)return this._initArray(e,t,r);"hex"===t&&(t=16),n(t===(0|t)&&t>=2&&t<=36),e=e.toString().replace(/\s+/g,"");var i=0;"-"===e[0]&&i++,16===t?this._parseHex(e,i):this._parseBase(e,t,i),"-"===e[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),t,r)},a.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(n(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),t,r)},a.prototype._initArray=function(e,t,r){if(n("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var a,o,f=0;if("be"===r)for(i=e.length-1,a=0;i>=0;i-=3)o=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[a]|=o<<f&67108863,this.words[a+1]=o>>>26-f&67108863,(f+=24)>=26&&(f-=26,a++);else if("le"===r)for(i=0,a=0;i<e.length;i+=3)o=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[a]|=o<<f&67108863,this.words[a+1]=o>>>26-f&67108863,(f+=24)>=26&&(f-=26,a++);return this.strip()},a.prototype._parseHex=function(e,t){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,a=0;for(r=e.length-6,n=0;r>=t;r-=6)i=o(e,r,r+6),this.words[n]|=i<<a&67108863,this.words[n+1]|=i>>>26-a&4194303,(a+=24)>=26&&(a-=26,n++);r+6!==t&&(i=o(e,t,r+6),this.words[n]|=i<<a&67108863,this.words[n+1]|=i>>>26-a&4194303),this.strip()},a.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=t)n++;n--,i=i/t|0;for(var a=e.length-r,o=a%n,s=Math.min(a,a-o)+r,u=0,c=r;c<s;c+=n)u=f(e,c,c+n,t),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var h=1;for(u=f(e,c,e.length,t),c=0;c<o;c++)h*=t;this.imuln(h),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}},a.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},a.prototype.clone=function(){var e=new a(null);return this.copy(e),e},a.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},a.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},a.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},a.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var w=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],x=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],k=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];a.prototype.toString=function(e,t){e=e||10,t=0|t||1;var r;if(16===e||"hex"===e){r="";for(var i=0,a=0,o=0;o<this.length;o++){var f=this.words[o],s=(16777215&(f<<i|a)).toString(16);a=f>>>24-i&16777215,r=0!==a||o!==this.length-1?w[6-s.length]+s+r:s+r,i+=2,i>=26&&(i-=26,o--)}for(0!==a&&(r=a.toString(16)+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(e===(0|e)&&e>=2&&e<=36){var u=x[e],c=k[e];r="";var h=this.clone();for(h.negative=0;!h.isZero();){var d=h.modn(c).toString(e);h=h.idivn(c),r=h.isZero()?d+r:w[u-d.length]+d+r}for(this.isZero()&&(r="0"+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},a.prototype.toJSON=function(){return this.toString(16)},a.prototype.toBuffer=function(e,t){return n(void 0!==_),this.toArrayLike(_,e,t)},a.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},a.prototype.toArrayLike=function(e,t,r){var i=this.byteLength(),a=r||Math.max(1,i);n(i<=a,"byte array longer than desired length"),n(a>0,"Requested array length <= 0"),this.strip();var o,f,s="le"===t,u=new e(a),c=this.clone();if(s){for(f=0;!c.isZero();f++)o=c.andln(255),c.iushrn(8),u[f]=o;for(;f<a;f++)u[f]=0}else{for(f=0;f<a-i;f++)u[f]=0;for(f=0;!c.isZero();f++)o=c.andln(255),c.iushrn(8),u[a-f-1]=o}return u},Math.clz32?a.prototype._countBits=function(e){return 32-Math.clz32(e)}:a.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},a.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},a.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},a.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return 0!==this.negative},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},a.prototype.ior=function(e){return n(0==(this.negative|e.negative)),this.iuor(e)},a.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},a.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},a.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this.strip()},a.prototype.iand=function(e){return n(0==(this.negative|e.negative)),this.iuand(e)},a.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},a.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},a.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this.strip()},a.prototype.ixor=function(e){return n(0==(this.negative|e.negative)),this.iuxor(e)},a.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},a.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},a.prototype.inotn=function(e){n("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},a.prototype.notn=function(e){return this.clone().inotn(e)},a.prototype.setn=function(e,t){n("number"==typeof e&&e>=0);var r=e/26|0,i=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},a.prototype.iadd=function(e){var t;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();var r,n;this.length>e.length?(r=this,n=e):(r=e,n=this);for(var i=0,a=0;a<n.length;a++)t=(0|r.words[a])+(0|n.words[a])+i,this.words[a]=67108863&t,i=t>>>26;for(;0!==i&&a<r.length;a++)t=(0|r.words[a])+i,this.words[a]=67108863&t,i=t>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;a<r.length;a++)this.words[a]=r.words[a];return this},a.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},a.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r=this.cmp(e);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;var n,i;r>0?(n=this,i=e):(n=e,i=this);for(var a=0,o=0;o<i.length;o++)t=(0|n.words[o])-(0|i.words[o])+a,a=t>>26,this.words[o]=67108863&t;for(;0!==a&&o<n.length;o++)t=(0|n.words[o])+a,a=t>>26,this.words[o]=67108863&t;if(0===a&&o<n.length&&n!==this)for(;o<n.length;o++)this.words[o]=n.words[o];return this.length=Math.max(this.length,o),n!==this&&(this.negative=1),this.strip()},a.prototype.sub=function(e){return this.clone().isub(e)};var S=function(e,t,r){var n,i,a,o=e.words,f=t.words,s=r.words,u=0,c=0|o[0],h=8191&c,d=c>>>13,l=0|o[1],p=8191&l,b=l>>>13,v=0|o[2],m=8191&v,g=v>>>13,y=0|o[3],_=8191&y,w=y>>>13,x=0|o[4],k=8191&x,S=x>>>13,M=0|o[5],A=8191&M,E=M>>>13,I=0|o[6],T=8191&I,B=I>>>13,R=0|o[7],P=8191&R,O=R>>>13,C=0|o[8],z=8191&C,j=C>>>13,N=0|o[9],q=8191&N,L=N>>>13,D=0|f[0],H=8191&D,F=D>>>13,U=0|f[1],V=8191&U,W=U>>>13,K=0|f[2],Y=8191&K,X=K>>>13,Z=0|f[3],G=8191&Z,$=Z>>>13,Q=0|f[4],J=8191&Q,ee=Q>>>13,te=0|f[5],re=8191&te,ne=te>>>13,ie=0|f[6],ae=8191&ie,oe=ie>>>13,fe=0|f[7],se=8191&fe,ue=fe>>>13,ce=0|f[8],he=8191&ce,de=ce>>>13,le=0|f[9],pe=8191&le,be=le>>>13;r.negative=e.negative^t.negative,r.length=19,n=Math.imul(h,H),i=Math.imul(h,F),i=i+Math.imul(d,H)|0,a=Math.imul(d,F);var ve=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(p,H),i=Math.imul(p,F),i=i+Math.imul(b,H)|0,a=Math.imul(b,F),n=n+Math.imul(h,V)|0,i=i+Math.imul(h,W)|0,i=i+Math.imul(d,V)|0,a=a+Math.imul(d,W)|0;var me=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(me>>>26)|0,me&=67108863,n=Math.imul(m,H),i=Math.imul(m,F),i=i+Math.imul(g,H)|0,a=Math.imul(g,F),n=n+Math.imul(p,V)|0,i=i+Math.imul(p,W)|0,i=i+Math.imul(b,V)|0,a=a+Math.imul(b,W)|0,n=n+Math.imul(h,Y)|0,i=i+Math.imul(h,X)|0,i=i+Math.imul(d,Y)|0,a=a+Math.imul(d,X)|0;var ge=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(_,H),i=Math.imul(_,F),i=i+Math.imul(w,H)|0,a=Math.imul(w,F),n=n+Math.imul(m,V)|0,i=i+Math.imul(m,W)|0,i=i+Math.imul(g,V)|0,a=a+Math.imul(g,W)|0,n=n+Math.imul(p,Y)|0,i=i+Math.imul(p,X)|0,i=i+Math.imul(b,Y)|0,a=a+Math.imul(b,X)|0,n=n+Math.imul(h,G)|0,i=i+Math.imul(h,$)|0,i=i+Math.imul(d,G)|0,a=a+Math.imul(d,$)|0;var ye=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(k,H),i=Math.imul(k,F),i=i+Math.imul(S,H)|0,a=Math.imul(S,F),n=n+Math.imul(_,V)|0,i=i+Math.imul(_,W)|0,i=i+Math.imul(w,V)|0,a=a+Math.imul(w,W)|0,n=n+Math.imul(m,Y)|0,i=i+Math.imul(m,X)|0,i=i+Math.imul(g,Y)|0,a=a+Math.imul(g,X)|0,n=n+Math.imul(p,G)|0,i=i+Math.imul(p,$)|0,i=i+Math.imul(b,G)|0,a=a+Math.imul(b,$)|0,n=n+Math.imul(h,J)|0,i=i+Math.imul(h,ee)|0,i=i+Math.imul(d,J)|0,a=a+Math.imul(d,ee)|0;var _e=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(_e>>>26)|0,_e&=67108863,n=Math.imul(A,H),i=Math.imul(A,F),i=i+Math.imul(E,H)|0,a=Math.imul(E,F),n=n+Math.imul(k,V)|0,i=i+Math.imul(k,W)|0,i=i+Math.imul(S,V)|0,a=a+Math.imul(S,W)|0,n=n+Math.imul(_,Y)|0,i=i+Math.imul(_,X)|0,i=i+Math.imul(w,Y)|0,a=a+Math.imul(w,X)|0,n=n+Math.imul(m,G)|0,i=i+Math.imul(m,$)|0,i=i+Math.imul(g,G)|0,a=a+Math.imul(g,$)|0,n=n+Math.imul(p,J)|0,i=i+Math.imul(p,ee)|0,i=i+Math.imul(b,J)|0,a=a+Math.imul(b,ee)|0,n=n+Math.imul(h,re)|0,i=i+Math.imul(h,ne)|0,i=i+Math.imul(d,re)|0,a=a+Math.imul(d,ne)|0;var we=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(T,H),i=Math.imul(T,F),i=i+Math.imul(B,H)|0,a=Math.imul(B,F),n=n+Math.imul(A,V)|0,i=i+Math.imul(A,W)|0,i=i+Math.imul(E,V)|0,a=a+Math.imul(E,W)|0,n=n+Math.imul(k,Y)|0,i=i+Math.imul(k,X)|0,i=i+Math.imul(S,Y)|0,a=a+Math.imul(S,X)|0,n=n+Math.imul(_,G)|0,i=i+Math.imul(_,$)|0,i=i+Math.imul(w,G)|0,a=a+Math.imul(w,$)|0,n=n+Math.imul(m,J)|0,i=i+Math.imul(m,ee)|0,i=i+Math.imul(g,J)|0,a=a+Math.imul(g,ee)|0,n=n+Math.imul(p,re)|0,i=i+Math.imul(p,ne)|0,i=i+Math.imul(b,re)|0,a=a+Math.imul(b,ne)|0,n=n+Math.imul(h,ae)|0,i=i+Math.imul(h,oe)|0,i=i+Math.imul(d,ae)|0,a=a+Math.imul(d,oe)|0;var xe=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(P,H),i=Math.imul(P,F),i=i+Math.imul(O,H)|0,a=Math.imul(O,F),n=n+Math.imul(T,V)|0,i=i+Math.imul(T,W)|0,i=i+Math.imul(B,V)|0,a=a+Math.imul(B,W)|0,n=n+Math.imul(A,Y)|0,i=i+Math.imul(A,X)|0,i=i+Math.imul(E,Y)|0,a=a+Math.imul(E,X)|0,n=n+Math.imul(k,G)|0,i=i+Math.imul(k,$)|0,i=i+Math.imul(S,G)|0,a=a+Math.imul(S,$)|0,n=n+Math.imul(_,J)|0,i=i+Math.imul(_,ee)|0,i=i+Math.imul(w,J)|0,a=a+Math.imul(w,ee)|0,n=n+Math.imul(m,re)|0,i=i+Math.imul(m,ne)|0,i=i+Math.imul(g,re)|0,a=a+Math.imul(g,ne)|0,n=n+Math.imul(p,ae)|0,i=i+Math.imul(p,oe)|0,i=i+Math.imul(b,ae)|0,a=a+Math.imul(b,oe)|0,n=n+Math.imul(h,se)|0,i=i+Math.imul(h,ue)|0,i=i+Math.imul(d,se)|0,a=a+Math.imul(d,ue)|0;var ke=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(z,H),i=Math.imul(z,F),i=i+Math.imul(j,H)|0,a=Math.imul(j,F),n=n+Math.imul(P,V)|0,i=i+Math.imul(P,W)|0,i=i+Math.imul(O,V)|0,a=a+Math.imul(O,W)|0,n=n+Math.imul(T,Y)|0,i=i+Math.imul(T,X)|0,i=i+Math.imul(B,Y)|0,a=a+Math.imul(B,X)|0,n=n+Math.imul(A,G)|0,i=i+Math.imul(A,$)|0,i=i+Math.imul(E,G)|0,a=a+Math.imul(E,$)|0,n=n+Math.imul(k,J)|0,i=i+Math.imul(k,ee)|0,i=i+Math.imul(S,J)|0,a=a+Math.imul(S,ee)|0,n=n+Math.imul(_,re)|0,i=i+Math.imul(_,ne)|0,i=i+Math.imul(w,re)|0,a=a+Math.imul(w,ne)|0,n=n+Math.imul(m,ae)|0,i=i+Math.imul(m,oe)|0,i=i+Math.imul(g,ae)|0,a=a+Math.imul(g,oe)|0,n=n+Math.imul(p,se)|0,i=i+Math.imul(p,ue)|0,i=i+Math.imul(b,se)|0,a=a+Math.imul(b,ue)|0,n=n+Math.imul(h,he)|0,i=i+Math.imul(h,de)|0,i=i+Math.imul(d,he)|0,a=a+Math.imul(d,de)|0;var Se=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(q,H),i=Math.imul(q,F),i=i+Math.imul(L,H)|0,a=Math.imul(L,F),n=n+Math.imul(z,V)|0,i=i+Math.imul(z,W)|0,i=i+Math.imul(j,V)|0,a=a+Math.imul(j,W)|0,n=n+Math.imul(P,Y)|0,i=i+Math.imul(P,X)|0,i=i+Math.imul(O,Y)|0,a=a+Math.imul(O,X)|0,n=n+Math.imul(T,G)|0,i=i+Math.imul(T,$)|0,i=i+Math.imul(B,G)|0,a=a+Math.imul(B,$)|0,n=n+Math.imul(A,J)|0,i=i+Math.imul(A,ee)|0,i=i+Math.imul(E,J)|0,a=a+Math.imul(E,ee)|0,n=n+Math.imul(k,re)|0,i=i+Math.imul(k,ne)|0,i=i+Math.imul(S,re)|0,a=a+Math.imul(S,ne)|0,n=n+Math.imul(_,ae)|0,i=i+Math.imul(_,oe)|0,i=i+Math.imul(w,ae)|0,a=a+Math.imul(w,oe)|0,n=n+Math.imul(m,se)|0,i=i+Math.imul(m,ue)|0,i=i+Math.imul(g,se)|0,a=a+Math.imul(g,ue)|0,n=n+Math.imul(p,he)|0,i=i+Math.imul(p,de)|0,i=i+Math.imul(b,he)|0,a=a+Math.imul(b,de)|0,n=n+Math.imul(h,pe)|0,i=i+Math.imul(h,be)|0,i=i+Math.imul(d,pe)|0,a=a+Math.imul(d,be)|0;var Me=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(q,V),i=Math.imul(q,W),i=i+Math.imul(L,V)|0,a=Math.imul(L,W),n=n+Math.imul(z,Y)|0,i=i+Math.imul(z,X)|0,i=i+Math.imul(j,Y)|0,a=a+Math.imul(j,X)|0,n=n+Math.imul(P,G)|0,i=i+Math.imul(P,$)|0,i=i+Math.imul(O,G)|0,a=a+Math.imul(O,$)|0,n=n+Math.imul(T,J)|0,i=i+Math.imul(T,ee)|0,i=i+Math.imul(B,J)|0,a=a+Math.imul(B,ee)|0,n=n+Math.imul(A,re)|0,i=i+Math.imul(A,ne)|0,i=i+Math.imul(E,re)|0,a=a+Math.imul(E,ne)|0,n=n+Math.imul(k,ae)|0,i=i+Math.imul(k,oe)|0,i=i+Math.imul(S,ae)|0,a=a+Math.imul(S,oe)|0,n=n+Math.imul(_,se)|0,i=i+Math.imul(_,ue)|0,i=i+Math.imul(w,se)|0,a=a+Math.imul(w,ue)|0,n=n+Math.imul(m,he)|0,i=i+Math.imul(m,de)|0,i=i+Math.imul(g,he)|0,a=a+Math.imul(g,de)|0,n=n+Math.imul(p,pe)|0,i=i+Math.imul(p,be)|0,i=i+Math.imul(b,pe)|0,a=a+Math.imul(b,be)|0;var Ae=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(q,Y),i=Math.imul(q,X),i=i+Math.imul(L,Y)|0,a=Math.imul(L,X),n=n+Math.imul(z,G)|0,i=i+Math.imul(z,$)|0,i=i+Math.imul(j,G)|0,a=a+Math.imul(j,$)|0,n=n+Math.imul(P,J)|0,i=i+Math.imul(P,ee)|0,i=i+Math.imul(O,J)|0,a=a+Math.imul(O,ee)|0,n=n+Math.imul(T,re)|0,i=i+Math.imul(T,ne)|0,i=i+Math.imul(B,re)|0,a=a+Math.imul(B,ne)|0,n=n+Math.imul(A,ae)|0,i=i+Math.imul(A,oe)|0,i=i+Math.imul(E,ae)|0,a=a+Math.imul(E,oe)|0,n=n+Math.imul(k,se)|0,i=i+Math.imul(k,ue)|0,i=i+Math.imul(S,se)|0,a=a+Math.imul(S,ue)|0,n=n+Math.imul(_,he)|0,i=i+Math.imul(_,de)|0,i=i+Math.imul(w,he)|0,a=a+Math.imul(w,de)|0,n=n+Math.imul(m,pe)|0,i=i+Math.imul(m,be)|0,i=i+Math.imul(g,pe)|0,a=a+Math.imul(g,be)|0;var Ee=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(q,G),i=Math.imul(q,$),i=i+Math.imul(L,G)|0,a=Math.imul(L,$),n=n+Math.imul(z,J)|0,i=i+Math.imul(z,ee)|0,i=i+Math.imul(j,J)|0,a=a+Math.imul(j,ee)|0,n=n+Math.imul(P,re)|0,i=i+Math.imul(P,ne)|0,i=i+Math.imul(O,re)|0,a=a+Math.imul(O,ne)|0,n=n+Math.imul(T,ae)|0,i=i+Math.imul(T,oe)|0,i=i+Math.imul(B,ae)|0,a=a+Math.imul(B,oe)|0,n=n+Math.imul(A,se)|0,i=i+Math.imul(A,ue)|0,i=i+Math.imul(E,se)|0,a=a+Math.imul(E,ue)|0,n=n+Math.imul(k,he)|0,i=i+Math.imul(k,de)|0,i=i+Math.imul(S,he)|0,a=a+Math.imul(S,de)|0,n=n+Math.imul(_,pe)|0,i=i+Math.imul(_,be)|0,i=i+Math.imul(w,pe)|0,a=a+Math.imul(w,be)|0;var Ie=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,n=Math.imul(q,J),i=Math.imul(q,ee),i=i+Math.imul(L,J)|0,a=Math.imul(L,ee),n=n+Math.imul(z,re)|0,i=i+Math.imul(z,ne)|0,i=i+Math.imul(j,re)|0,a=a+Math.imul(j,ne)|0,n=n+Math.imul(P,ae)|0,i=i+Math.imul(P,oe)|0,i=i+Math.imul(O,ae)|0,a=a+Math.imul(O,oe)|0,n=n+Math.imul(T,se)|0,i=i+Math.imul(T,ue)|0,i=i+Math.imul(B,se)|0,a=a+Math.imul(B,ue)|0,n=n+Math.imul(A,he)|0,i=i+Math.imul(A,de)|0,i=i+Math.imul(E,he)|0,a=a+Math.imul(E,de)|0,n=n+Math.imul(k,pe)|0,i=i+Math.imul(k,be)|0,i=i+Math.imul(S,pe)|0,a=a+Math.imul(S,be)|0;var Te=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(q,re),i=Math.imul(q,ne),i=i+Math.imul(L,re)|0,a=Math.imul(L,ne),n=n+Math.imul(z,ae)|0,i=i+Math.imul(z,oe)|0,i=i+Math.imul(j,ae)|0,a=a+Math.imul(j,oe)|0,n=n+Math.imul(P,se)|0,i=i+Math.imul(P,ue)|0,i=i+Math.imul(O,se)|0,a=a+Math.imul(O,ue)|0,n=n+Math.imul(T,he)|0,i=i+Math.imul(T,de)|0,i=i+Math.imul(B,he)|0,a=a+Math.imul(B,de)|0,n=n+Math.imul(A,pe)|0,i=i+Math.imul(A,be)|0,i=i+Math.imul(E,pe)|0,a=a+Math.imul(E,be)|0;var Be=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Be>>>26)|0,Be&=67108863,n=Math.imul(q,ae),i=Math.imul(q,oe),i=i+Math.imul(L,ae)|0,a=Math.imul(L,oe),n=n+Math.imul(z,se)|0,i=i+Math.imul(z,ue)|0,i=i+Math.imul(j,se)|0,a=a+Math.imul(j,ue)|0,n=n+Math.imul(P,he)|0,i=i+Math.imul(P,de)|0,i=i+Math.imul(O,he)|0,a=a+Math.imul(O,de)|0,n=n+Math.imul(T,pe)|0,i=i+Math.imul(T,be)|0,i=i+Math.imul(B,pe)|0,a=a+Math.imul(B,be)|0;var Re=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Re>>>26)|0,Re&=67108863,n=Math.imul(q,se),i=Math.imul(q,ue),i=i+Math.imul(L,se)|0,a=Math.imul(L,ue),n=n+Math.imul(z,he)|0,i=i+Math.imul(z,de)|0,i=i+Math.imul(j,he)|0,a=a+Math.imul(j,de)|0,n=n+Math.imul(P,pe)|0,i=i+Math.imul(P,be)|0,i=i+Math.imul(O,pe)|0,a=a+Math.imul(O,be)|0;var Pe=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(q,he),i=Math.imul(q,de),i=i+Math.imul(L,he)|0,a=Math.imul(L,de),n=n+Math.imul(z,pe)|0,i=i+Math.imul(z,be)|0,i=i+Math.imul(j,pe)|0,a=a+Math.imul(j,be)|0;var Oe=(u+n|0)+((8191&i)<<13)|0;u=(a+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,n=Math.imul(q,pe),i=Math.imul(q,be),i=i+Math.imul(L,pe)|0,a=Math.imul(L,be);var Ce=(u+n|0)+((8191&i)<<13)|0;return u=(a+(i>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,s[0]=ve,s[1]=me,s[2]=ge,s[3]=ye,s[4]=_e,s[5]=we,s[6]=xe,s[7]=ke,s[8]=Se,s[9]=Me,s[10]=Ae,s[11]=Ee,s[12]=Ie,s[13]=Te,s[14]=Be,s[15]=Re,s[16]=Pe,s[17]=Oe,s[18]=Ce,0!==u&&(s[19]=u,r.length++),r};Math.imul||(S=u),a.prototype.mulTo=function(e,t){var r=this.length+e.length;return 10===this.length&&10===e.length?S(this,e,t):r<63?u(this,e,t):r<1024?c(this,e,t):h(this,e,t)},d.prototype.makeRBT=function(e){for(var t=new Array(e),r=a.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},d.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,i=0;i<t;i++)n|=(1&e)<<t-i-1,e>>=1;return n},d.prototype.permute=function(e,t,r,n,i,a){for(var o=0;o<a;o++)n[o]=t[e[o]],i[o]=r[e[o]]},d.prototype.transform=function(e,t,r,n,i,a){this.permute(a,e,t,r,n,i);for(var o=1;o<i;o<<=1)for(var f=o<<1,s=Math.cos(2*Math.PI/f),u=Math.sin(2*Math.PI/f),c=0;c<i;c+=f)for(var h=s,d=u,l=0;l<o;l++){var p=r[c+l],b=n[c+l],v=r[c+l+o],m=n[c+l+o],g=h*v-d*m;m=h*m+d*v,v=g,r[c+l]=p+v,n[c+l]=b+m,r[c+l+o]=p-v,n[c+l+o]=b-m,l!==f&&(g=s*h-u*d,d=s*d+u*h,h=g)}},d.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},d.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=e[n];e[n]=e[r-n-1],e[r-n-1]=i,i=t[n],t[n]=-t[r-n-1],t[r-n-1]=-i}},d.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var i=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&i,r=i<67108864?0:i/67108864|0}return e},d.prototype.convert13b=function(e,t,r,i){for(var a=0,o=0;o<t;o++)a+=0|e[o],r[2*o]=8191&a,a>>>=13,r[2*o+1]=8191&a,a>>>=13;for(o=2*t;o<i;++o)r[o]=0;n(0===a),n(0==(-8192&a))},d.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},d.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(n),a=this.stub(n),o=new Array(n),f=new Array(n),s=new Array(n),u=new Array(n),c=new Array(n),h=new Array(n),d=r.words;d.length=n,this.convert13b(e.words,e.length,o,n),this.convert13b(t.words,t.length,u,n),this.transform(o,a,f,s,n,i),this.transform(u,a,c,h,n,i);for(var l=0;l<n;l++){var p=f[l]*c[l]-s[l]*h[l];s[l]=f[l]*h[l]+s[l]*c[l],f[l]=p}return this.conjugate(f,s,n),this.transform(f,s,d,a,n,i),this.conjugate(d,a,n),this.normalize13b(d,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r.strip()},a.prototype.mul=function(e){var t=new a(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},a.prototype.mulf=function(e){var t=new a(null);return t.words=new Array(this.length+e.length),h(this,e,t)},a.prototype.imul=function(e){return this.clone().mulTo(e,this)},a.prototype.imuln=function(e){n("number"==typeof e),n(e<67108864);for(var t=0,r=0;r<this.length;r++){var i=(0|this.words[r])*e,a=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=a>>>26,this.words[r]=67108863&a}return 0!==t&&(this.words[r]=t,this.length++),this},a.prototype.muln=function(e){return this.clone().imuln(e)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(e){var t=s(e);if(0===t.length)return new a(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var i=r.sqr();n<t.length;n++,i=i.sqr())0!==t[n]&&(r=r.mul(i));return r},a.prototype.iushln=function(e){n("number"==typeof e&&e>=0);var t,r=e%26,i=(e-r)/26,a=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(t=0;t<this.length;t++){var f=this.words[t]&a,s=(0|this.words[t])-f<<r;this.words[t]=s|o,o=f>>>26-r}o&&(this.words[t]=o,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this.strip()},a.prototype.ishln=function(e){return n(0===this.negative),this.iushln(e)},a.prototype.iushrn=function(e,t,r){n("number"==typeof e&&e>=0);var i;i=t?(t-t%26)/26:0;var a=e%26,o=Math.min((e-a)/26,this.length),f=67108863^67108863>>>a<<a,s=r;if(i-=o,i=Math.max(0,i),s){for(var u=0;u<o;u++)s.words[u]=this.words[u];s.length=o}if(0===o);else if(this.length>o)for(this.length-=o,u=0;u<this.length;u++)this.words[u]=this.words[u+o];else this.words[0]=0,this.length=1;var c=0;for(u=this.length-1;u>=0&&(0!==c||u>=i);u--){var h=0|this.words[u];this.words[u]=c<<26-a|h>>>a,c=h&f}return s&&0!==c&&(s.words[s.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},a.prototype.ishrn=function(e,t,r){return n(0===this.negative),this.iushrn(e,t,r)},a.prototype.shln=function(e){return this.clone().ishln(e)},a.prototype.ushln=function(e){return this.clone().iushln(e)},a.prototype.shrn=function(e){return this.clone().ishrn(e)},a.prototype.ushrn=function(e){return this.clone().iushrn(e)},a.prototype.testn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,i=1<<t;return!(this.length<=r)&&!!(this.words[r]&i)},a.prototype.imaskn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()},a.prototype.maskn=function(e){return this.clone().imaskn(e)},a.prototype.iaddn=function(e){return n("number"==typeof e),n(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},a.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},a.prototype.isubn=function(e){if(n("number"==typeof e),n(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},a.prototype.addn=function(e){return this.clone().iaddn(e)},a.prototype.subn=function(e){return this.clone().isubn(e)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(e,t,r){var i,a=e.length+r;this._expand(a);var o,f=0;for(i=0;i<e.length;i++){o=(0|this.words[i+r])+f;var s=(0|e.words[i])*t;o-=67108863&s,f=(o>>26)-(s/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)o=(0|this.words[i+r])+f,f=o>>26,this.words[i+r]=67108863&o;if(0===f)return this.strip();for(n(-1===f),f=0,i=0;i<this.length;i++)o=-(0|this.words[i])+f,f=o>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},a.prototype._wordDiv=function(e,t){var r=this.length-e.length,n=this.clone(),i=e,o=0|i.words[i.length-1];0!==(r=26-this._countBits(o))&&(i=i.ushln(r),n.iushln(r),o=0|i.words[i.length-1]);var f,s=n.length-i.length;if("mod"!==t){f=new a(null),f.length=s+1,f.words=new Array(f.length);for(var u=0;u<f.length;u++)f.words[u]=0}var c=n.clone()._ishlnsubmul(i,1,s);0===c.negative&&(n=c,f&&(f.words[s]=1));for(var h=s-1;h>=0;h--){var d=67108864*(0|n.words[i.length+h])+(0|n.words[i.length+h-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(i,d,h);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,h),n.isZero()||(n.negative^=1);f&&(f.words[h]=d)}return f&&f.strip(),n.strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:f||null,mod:n}},a.prototype.divmod=function(e,t,r){if(n(!e.isZero()),this.isZero())return{div:new a(0),mod:new a(0)};var i,o,f;return 0!==this.negative&&0===e.negative?(f=this.neg().divmod(e,t),"mod"!==t&&(i=f.div.neg()),"div"!==t&&(o=f.mod.neg(),r&&0!==o.negative&&o.iadd(e)),{div:i,mod:o}):0===this.negative&&0!==e.negative?(f=this.divmod(e.neg(),t),"mod"!==t&&(i=f.div.neg()),{div:i,mod:f.mod}):0!=(this.negative&e.negative)?(f=this.neg().divmod(e.neg(),t),"div"!==t&&(o=f.mod.neg(),r&&0!==o.negative&&o.isub(e)),{div:f.div,mod:o}):e.length>this.length||this.cmp(e)<0?{div:new a(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new a(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new a(this.modn(e.words[0]))}:this._wordDiv(e,t)},a.prototype.div=function(e){return this.divmod(e,"div",!1).div},a.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},a.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},a.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),i=e.andln(1),a=r.cmp(n);return a<0||1===i&&0===a?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},a.prototype.modn=function(e){n(e<=67108863);for(var t=(1<<26)%e,r=0,i=this.length-1;i>=0;i--)r=(t*r+(0|this.words[i]))%e;return r},a.prototype.idivn=function(e){n(e<=67108863);for(var t=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*t;this.words[r]=i/e|0,t=i%e}return this.strip()},a.prototype.divn=function(e){return this.clone().idivn(e)},a.prototype.egcd=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new a(1),o=new a(0),f=new a(0),s=new a(1),u=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++u;for(var c=r.clone(),h=t.clone();!t.isZero();){for(var d=0,l=1;0==(t.words[0]&l)&&d<26;++d,l<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(c),o.isub(h)),i.iushrn(1),o.iushrn(1);for(var p=0,b=1;0==(r.words[0]&b)&&p<26;++p,b<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(f.isOdd()||s.isOdd())&&(f.iadd(c),s.isub(h)),f.iushrn(1),s.iushrn(1);t.cmp(r)>=0?(t.isub(r),i.isub(f),o.isub(s)):(r.isub(t),f.isub(i),s.isub(o))}return{a:f,b:s,gcd:r.iushln(u)}},a.prototype._invmp=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new a(1),o=new a(0),f=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var s=0,u=1;0==(t.words[0]&u)&&s<26;++s,u<<=1);if(s>0)for(t.iushrn(s);s-- >0;)i.isOdd()&&i.iadd(f),i.iushrn(1);for(var c=0,h=1;0==(r.words[0]&h)&&c<26;++c,h<<=1);if(c>0)for(r.iushrn(c);c-- >0;)o.isOdd()&&o.iadd(f),o.iushrn(1);t.cmp(r)>=0?(t.isub(r),i.isub(o)):(r.isub(t),o.isub(i))}var d;return d=0===t.cmpn(1)?i:o,d.cmpn(0)<0&&d.iadd(e),d},a.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=t.cmp(r);if(i<0){var a=t;t=r,r=a}else if(0===i||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},a.prototype.invm=function(e){return this.egcd(e).a.umod(e)},a.prototype.isEven=function(){return 0==(1&this.words[0])},a.prototype.isOdd=function(){return 1==(1&this.words[0])},a.prototype.andln=function(e){return this.words[0]&e},a.prototype.bincn=function(e){n("number"==typeof e);var t=e%26,r=(e-t)/26,i=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var a=i,o=r;0!==a&&o<this.length;o++){var f=0|this.words[o];f+=a,a=f>>>26,f&=67108863,this.words[o]=f}return 0!==a&&(this.words[o]=a,this.length++),this},a.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},a.prototype.cmpn=function(e){var t=e<0;if(0!==this.negative&&!t)return-1;if(0===this.negative&&t)return 1;this.strip();var r;if(this.length>1)r=1;else{t&&(e=-e),n(e<=67108863,"Number is too big");var i=0|this.words[0];r=i===e?0:i<e?-1:1}return 0!==this.negative?0|-r:r},a.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},a.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|e.words[r];if(n!==i){n<i?t=-1:n>i&&(t=1);break}}return t},a.prototype.gtn=function(e){return 1===this.cmpn(e)},a.prototype.gt=function(e){return 1===this.cmp(e)},a.prototype.gten=function(e){return this.cmpn(e)>=0},a.prototype.gte=function(e){return this.cmp(e)>=0},a.prototype.ltn=function(e){return-1===this.cmpn(e)},a.prototype.lt=function(e){return-1===this.cmp(e)},a.prototype.lten=function(e){return this.cmpn(e)<=0},a.prototype.lte=function(e){return this.cmp(e)<=0},a.prototype.eqn=function(e){return 0===this.cmpn(e)},a.prototype.eq=function(e){return 0===this.cmp(e)},a.red=function(e){return new g(e)},a.prototype.toRed=function(e){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},a.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(e){return this.red=e,this},a.prototype.forceRed=function(e){return n(!this.red,"Already a number in reduction context"),this._forceRed(e)},a.prototype.redAdd=function(e){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},a.prototype.redIAdd=function(e){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},a.prototype.redSub=function(e){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},a.prototype.redISub=function(e){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},a.prototype.redShl=function(e){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},a.prototype.redMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},a.prototype.redIMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},a.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(e){return n(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var M={k256:null,p224:null,p192:null,p25519:null};l.prototype._tmp=function(){var e=new a(null);return e.words=new Array(Math.ceil(this.n/13)),e},l.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),r=this.imulK(r),r=r.iadd(this.tmp),t=r.bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},l.prototype.split=function(e,t){e.iushrn(this.n,0,t)},l.prototype.imulK=function(e){return e.imul(this.k)},i(p,l),p.prototype.split=function(e,t){for(var r=Math.min(e.length,9),n=0;n<r;n++)t.words[n]=e.words[n];if(t.length=r,e.length<=9)return e.words[0]=0,void(e.length=1);var i=e.words[9];for(t.words[t.length++]=4194303&i,n=10;n<e.length;n++){var a=0|e.words[n];e.words[n-10]=(4194303&a)<<4|i>>>22,i=a}i>>>=22,e.words[n-10]=i,0===i&&e.length>10?e.length-=10:e.length-=9},p.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(b,l),i(v,l),i(m,l),m.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,i=67108863&n;n>>>=26,e.words[r]=i,t=n}return 0!==t&&(e.words[e.length++]=t),e},a._prime=function(e){if(M[e])return M[e];var t;if("k256"===e)t=new p;else if("p224"===e)t=new b;else if("p192"===e)t=new v;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new m}return M[e]=t,t},g.prototype._verify1=function(e){n(0===e.negative,"red works only with positives"),n(e.red,"red works only with red numbers")},g.prototype._verify2=function(e,t){n(0==(e.negative|t.negative),"red works only with positives"),n(e.red&&e.red===t.red,"red works only with red numbers")},g.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},g.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},g.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},g.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},g.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},g.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},g.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},g.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},g.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},g.prototype.isqr=function(e){return this.imul(e,e.clone())},g.prototype.sqr=function(e){return this.mul(e,e)},g.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(n(t%2==1),3===t){var r=this.m.add(new a(1)).iushrn(2);return this.pow(e,r)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);n(!i.isZero());var f=new a(1).toRed(this),s=f.redNeg(),u=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new a(2*c*c).toRed(this);0!==this.pow(c,u).cmp(s);)c.redIAdd(s);for(var h=this.pow(c,i),d=this.pow(e,i.addn(1).iushrn(1)),l=this.pow(e,i),p=o;0!==l.cmp(f);){for(var b=l,v=0;0!==b.cmp(f);v++)b=b.redSqr();n(v<p);var m=this.pow(h,new a(1).iushln(p-v-1));d=d.redMul(m),h=m.redSqr(),l=l.redMul(h),p=v}return d},g.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},g.prototype.pow=function(e,t){if(t.isZero())return new a(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new a(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var i=r[0],o=0,f=0,s=t.bitLength()%26;for(0===s&&(s=26),n=t.length-1;n>=0;n--){for(var u=t.words[n],c=s-1;c>=0;c--){var h=u>>c&1;i!==r[0]&&(i=this.sqr(i)),0!==h||0!==o?(o<<=1,o|=h,(4===++f||0===n&&0===c)&&(i=this.mul(i,r[o]),f=0,o=0)):f=0}s=26}return i},g.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},g.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},a.mont=function(e){return new y(e)},i(y,g),y.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},y.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},y.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),a=i;return i.cmp(this.m)>=0?a=i.isub(this.m):i.cmpn(0)<0&&(a=i.iadd(this.m)),a._forceRed(this)},y.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new a(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},y.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(void 0===e||e,this)}).call(t,r(23)(e))},function(e,t){function r(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=r,r.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)}},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(27),r(28))}(0,function(e){return function(){var t=e,r=t.lib,n=r.Base,i=r.WordArray,a=t.algo,o=a.MD5,f=a.EvpKDF=n.extend({cfg:n.extend({keySize:4,hasher:o,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var r=this.cfg,n=r.hasher.create(),a=i.create(),o=a.words,f=r.keySize,s=r.iterations;o.length<f;){u&&n.update(u);var u=n.update(e).finalize(t);n.reset();for(var c=1;c<s;c++)u=n.finalize(u),n.reset();a.concat(u)}return a.sigBytes=4*f,a}});t.EvpKDF=function(e,t,r){return f.create(r).compute(e,t)}}(),e.EvpKDF})},function(e,t,r){"use strict";function n(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}Object.defineProperty(t,"__esModule",{value:!0}),t.Account=void 0;var i=r(15);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var a=r(58);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})});var o=r(149);Object.keys(o).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}})});var f=n(i),s=n(a),u=n(o),c=r(60),h=function(e){return e&&e.__esModule?e:{default:e}}(c);t.default={create:{account:function(e){return new h.default(e)},privateKey:f.generatePrivateKey,signature:f.generateSignature},is:{address:s.isAddress,publicKey:s.isPublicKey,encryptedKey:s.isNEP2,privateKey:s.isPrivateKey,wif:s.isWIF},encrypt:{privateKey:u.encrypt},decrypt:{privateKey:u.decrypt},get:{privateKeyFromWIF:f.getPrivateKeyFromWIF,WIFFromPrivateKey:f.getWIFFromPrivateKey,publicKeyFromPrivateKey:f.getPublicKeyFromPrivateKey,scriptHashFromPublicKey:f.getScriptHashFromPublicKey,addressFromScriptHash:f.getAddressFromScriptHash,scriptHashFromAddress:f.getScriptHashFromAddress}},t.Account=h.default},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(){function t(e,t,r){for(var n=[],a=0,o=0;o<t;o++)if(o%4){var f=r[e.charCodeAt(o-1)]<<o%4*2,s=r[e.charCodeAt(o)]>>>6-o%4*2;n[a>>>2]|=(f|s)<<24-a%4*8,a++}return i.create(n,a)}var r=e,n=r.lib,i=n.WordArray,a=r.enc;a.Base64={stringify:function(e){var t=e.words,r=e.sigBytes,n=this._map;e.clamp();for(var i=[],a=0;a<r;a+=3)for(var o=t[a>>>2]>>>24-a%4*8&255,f=t[a+1>>>2]>>>24-(a+1)%4*8&255,s=t[a+2>>>2]>>>24-(a+2)%4*8&255,u=o<<16|f<<8|s,c=0;c<4&&a+.75*c<r;c++)i.push(n.charAt(u>>>6*(3-c)&63));var h=n.charAt(64);if(h)for(;i.length%4;)i.push(h);return i.join("")},parse:function(e){var r=e.length,n=this._map,i=this._reverseMap;if(!i){i=this._reverseMap=[];for(var a=0;a<n.length;a++)i[n.charCodeAt(a)]=a}var o=n.charAt(64);if(o){var f=e.indexOf(o);-1!==f&&(r=f)}return t(e,r,i)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),e.enc.Base64})},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(t){function r(e,t,r,n,i,a,o){var f=e+(t&r|~t&n)+i+o;return(f<<a|f>>>32-a)+t}function n(e,t,r,n,i,a,o){var f=e+(t&n|r&~n)+i+o;return(f<<a|f>>>32-a)+t}function i(e,t,r,n,i,a,o){var f=e+(t^r^n)+i+o;return(f<<a|f>>>32-a)+t}function a(e,t,r,n,i,a,o){var f=e+(r^(t|~n))+i+o;return(f<<a|f>>>32-a)+t}var o=e,f=o.lib,s=f.WordArray,u=f.Hasher,c=o.algo,h=[];!function(){for(var e=0;e<64;e++)h[e]=4294967296*t.abs(t.sin(e+1))|0}();var d=c.MD5=u.extend({_doReset:function(){this._hash=new s.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(e,t){for(var o=0;o<16;o++){var f=t+o,s=e[f];e[f]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8)}var u=this._hash.words,c=e[t+0],d=e[t+1],l=e[t+2],p=e[t+3],b=e[t+4],v=e[t+5],m=e[t+6],g=e[t+7],y=e[t+8],_=e[t+9],w=e[t+10],x=e[t+11],k=e[t+12],S=e[t+13],M=e[t+14],A=e[t+15],E=u[0],I=u[1],T=u[2],B=u[3];E=r(E,I,T,B,c,7,h[0]),B=r(B,E,I,T,d,12,h[1]),T=r(T,B,E,I,l,17,h[2]),I=r(I,T,B,E,p,22,h[3]),E=r(E,I,T,B,b,7,h[4]),B=r(B,E,I,T,v,12,h[5]),T=r(T,B,E,I,m,17,h[6]),I=r(I,T,B,E,g,22,h[7]),E=r(E,I,T,B,y,7,h[8]),B=r(B,E,I,T,_,12,h[9]),T=r(T,B,E,I,w,17,h[10]),I=r(I,T,B,E,x,22,h[11]),E=r(E,I,T,B,k,7,h[12]),B=r(B,E,I,T,S,12,h[13]),T=r(T,B,E,I,M,17,h[14]),I=r(I,T,B,E,A,22,h[15]),E=n(E,I,T,B,d,5,h[16]),B=n(B,E,I,T,m,9,h[17]),T=n(T,B,E,I,x,14,h[18]),I=n(I,T,B,E,c,20,h[19]),E=n(E,I,T,B,v,5,h[20]),B=n(B,E,I,T,w,9,h[21]),T=n(T,B,E,I,A,14,h[22]),I=n(I,T,B,E,b,20,h[23]),E=n(E,I,T,B,_,5,h[24]),B=n(B,E,I,T,M,9,h[25]),T=n(T,B,E,I,p,14,h[26]),I=n(I,T,B,E,y,20,h[27]),E=n(E,I,T,B,S,5,h[28]),B=n(B,E,I,T,l,9,h[29]),T=n(T,B,E,I,g,14,h[30]),I=n(I,T,B,E,k,20,h[31]),E=i(E,I,T,B,v,4,h[32]),B=i(B,E,I,T,y,11,h[33]),T=i(T,B,E,I,x,16,h[34]),I=i(I,T,B,E,M,23,h[35]),E=i(E,I,T,B,d,4,h[36]),B=i(B,E,I,T,b,11,h[37]),T=i(T,B,E,I,g,16,h[38]),I=i(I,T,B,E,w,23,h[39]),E=i(E,I,T,B,S,4,h[40]),B=i(B,E,I,T,c,11,h[41]),T=i(T,B,E,I,p,16,h[42]),I=i(I,T,B,E,m,23,h[43]),E=i(E,I,T,B,_,4,h[44]),B=i(B,E,I,T,k,11,h[45]),T=i(T,B,E,I,A,16,h[46]),I=i(I,T,B,E,l,23,h[47]),E=a(E,I,T,B,c,6,h[48]),B=a(B,E,I,T,g,10,h[49]),T=a(T,B,E,I,M,15,h[50]),I=a(I,T,B,E,v,21,h[51]),E=a(E,I,T,B,k,6,h[52]),B=a(B,E,I,T,p,10,h[53]),T=a(T,B,E,I,w,15,h[54]),I=a(I,T,B,E,d,21,h[55]),E=a(E,I,T,B,y,6,h[56]),B=a(B,E,I,T,A,10,h[57]),T=a(T,B,E,I,m,15,h[58]),I=a(I,T,B,E,S,21,h[59]),E=a(E,I,T,B,b,6,h[60]),B=a(B,E,I,T,x,10,h[61]),T=a(T,B,E,I,l,15,h[62]),I=a(I,T,B,E,_,21,h[63]),u[0]=u[0]+E|0,u[1]=u[1]+I|0,u[2]=u[2]+T|0,u[3]=u[3]+B|0},_doFinalize:function(){var e=this._data,r=e.words,n=8*this._nDataBytes,i=8*e.sigBytes;r[i>>>5]|=128<<24-i%32;var a=t.floor(n/4294967296),o=n;r[15+(i+64>>>9<<4)]=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),r[14+(i+64>>>9<<4)]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),e.sigBytes=4*(r.length+1),this._process();for(var f=this._hash,s=f.words,u=0;u<4;u++){var c=s[u];s[u]=16711935&(c<<8|c>>>24)|4278255360&(c<<24|c>>>8)}return f},clone:function(){var e=u.clone.call(this);return e._hash=this._hash.clone(),e}});o.MD5=u._createHelper(d),o.HmacMD5=u._createHmacHelper(d)}(Math),e.MD5})},function(e,t,r){"use strict";function n(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}var i=r(5),a=r(7);t.BlockHash=n,n.prototype.update=function(e,t){if(e=i.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){e=this.pending;var r=e.length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=i.join32(e,0,e.length-r,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this},n.prototype.digest=function(e){return this.update(this._pad()),a(null===this.pending),this._digest(e)},n.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(e<<=3,"big"===this.endian){for(var a=8;a<this.padLength;a++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=e>>>24&255,n[i++]=e>>>16&255,n[i++]=e>>>8&255,n[i++]=255&e}else for(n[i++]=255&e,n[i++]=e>>>8&255,n[i++]=e>>>16&255,n[i++]=e>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,a=8;a<this.padLength;a++)n[i++]=0;return n}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.ASSETS={NEO:"NEO",c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b:"NEO",GAS:"GAS","602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7":"GAS"},t.ASSET_ID={NEO:"c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b",GAS:"602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7"},t.CONTRACTS={TEST_RPX:"5b7074e873973a6ed3708862f219a6fbf4d1c411"},t.DEFAULT_RPC={MAIN:"http://seed1.neo.org:10332",TEST:"http://seed1.neo.org:20332"},t.DEFAULT_REQ={jsonrpc:"2.0",method:"getblockcount",params:[],id:1234},t.NEO_NETWORK={MAIN:"MainNet",TEST:"TestNet"},t.RPC_VERSION="2.3.2",t.TX_VERSION=0},function(e,t){e.exports=require("assert")},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.generateRandomArray=t.generatePrivateKey=t.generateSignature=t.getScriptHashFromAddress=t.getAddressFromScriptHash=t.getScriptHashFromPublicKey=t.getVerificationScriptFromPublicKey=t.getPublicKeyFromPrivateKey=t.getWIFFromPrivateKey=t.getPrivateKeyFromWIF=t.getPublicKeyEncoded=void 0;var i=r(94),a=n(i),o=r(47),f=n(o),s=r(3),u=r(16),c=n(u),h=r(24),d=n(h),l=r(4),p=r(148),b=n(p),v=t.getPublicKeyEncoded=function(e){var t=(0,l.hexstring2ab)(e);return t[64]%2==1?"03"+(0,l.ab2hexstring)(t.slice(1,33)):"02"+(0,l.ab2hexstring)(t.slice(1,33))},m=(t.getPrivateKeyFromWIF=function(e){return(0,l.ab2hexstring)(a.default.decode(e,128).privateKey)},t.getWIFFromPrivateKey=function(e){return a.default.encode(128,Buffer.from(e,"hex"),!0)},t.getPublicKeyFromPrivateKey=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=f.default.getCurveByName("secp256r1"),n=r.G.multiply(c.default.fromBuffer((0,l.hexstring2ab)(e)));return(0,l.ab2hexstring)(n.getEncoded(t))},t.getVerificationScriptFromPublicKey=function(e){return"21"+e+"ac"});t.getScriptHashFromPublicKey=function(e){"04"==e.substring(0,2)&&(e=v(e));var t=m(e);return(0,l.reverseHex)((0,l.hash160)(t))},t.getAddressFromScriptHash=function(e){e=(0,l.reverseHex)(e);var t=(0,l.hash256)("17"+e).substr(0,8);return d.default.encode(Buffer.from("17"+e+t,"hex"))},t.getScriptHashFromAddress=function(e){var t=(0,l.ab2hexstring)(d.default.decode(e));return(0,l.reverseHex)(t.substr(2,40))},t.generateSignature=function(e,t){var r=(0,l.sha256)(e),n=Buffer.from(r,"hex"),i=new s.ec("p256"),a=i.sign(n,t,null);return Buffer.concat([a.r.toArrayLike(Buffer,"be",32),a.s.toArrayLike(Buffer,"be",32)]).toString("hex")},t.generatePrivateKey=function(){return(0,l.ab2hexstring)((0,b.default)(32))},t.generateRandomArray=function(e){return(0,b.default)(e)}},function(e,t,r){var n=r(49);r(99),e.exports=n},function(e,t,r){"use strict";var n=t;n.base=r(105),n.short=r(106),n.mont=r(108),n.edwards=r(109)},function(e,t,r){try{var n=r(41);if("function"!=typeof n.inherits)throw"";e.exports=n.inherits}catch(t){e.exports=r(107)}},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(t){var r=e,n=r.lib,i=n.Base,a=n.WordArray,o=r.x64={};o.Word=i.extend({init:function(e,t){this.high=e,this.low=t}}),o.WordArray=i.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=void 0!=t?t:8*e.length},toX32:function(){for(var e=this.words,t=e.length,r=[],n=0;n<t;n++){var i=e[n];r.push(i.high),r.push(i.low)}return a.create(r,this.sigBytes)},clone:function(){for(var e=i.clone.call(this),t=e.words=this.words.slice(0),r=t.length,n=0;n<r;n++)t[n]=t[n].clone();return e}})}(),e})},function(e,t,r){e.exports=r(67)},function(e,t,r){"use strict";function n(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var i=r(2),a=r(70),o={"Content-Type":"application/x-www-form-urlencoded"},f={adapter:function(){var e;return"undefined"!=typeof XMLHttpRequest?e=r(71):"undefined"!=typeof process&&(e=r(76)),e}(),transformRequest:[function(e,t){return a(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(n(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(n(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};f.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){f.headers[e]={}}),i.forEach(["post","put","patch"],function(e){f.headers[e]=i.merge(o)}),e.exports=f},function(e,t,r){"use strict";var n=r(34);e.exports=function(e,t,r,i,a){var o=new Error(e);return n(o,t,r,i,a)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){var n=r(95);e.exports=n("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},function(e,t){e.exports=require("crypto")},function(e,t,r){var n=t;n.utils=r(5),n.common=r(12),n.sha=r(111),n.ripemd=r(115),n.hmac=r(116),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(){var t=e,r=t.lib,n=r.WordArray,i=r.Hasher,a=t.algo,o=[],f=a.SHA1=i.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,t){for(var r=this._hash.words,n=r[0],i=r[1],a=r[2],f=r[3],s=r[4],u=0;u<80;u++){if(u<16)o[u]=0|e[t+u];else{var c=o[u-3]^o[u-8]^o[u-14]^o[u-16];o[u]=c<<1|c>>>31}var h=(n<<5|n>>>27)+s+o[u];h+=u<20?1518500249+(i&a|~i&f):u<40?1859775393+(i^a^f):u<60?(i&a|i&f|a&f)-1894007588:(i^a^f)-899497514,s=f,f=a,a=i<<30|i>>>2,i=n,n=h}r[0]=r[0]+n|0,r[1]=r[1]+i|0,r[2]=r[2]+a|0,r[3]=r[3]+f|0,r[4]=r[4]+s|0},_doFinalize:function(){var e=this._data,t=e.words,r=8*this._nDataBytes,n=8*e.sigBytes;return t[n>>>5]|=128<<24-n%32,t[14+(n+64>>>9<<4)]=Math.floor(r/4294967296),t[15+(n+64>>>9<<4)]=r,e.sigBytes=4*t.length,this._process(),this._hash},clone:function(){var e=i.clone.call(this);return e._hash=this._hash.clone(),e}});t.SHA1=i._createHelper(f),t.HmacSHA1=i._createHmacHelper(f)}(),e.SHA1})},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){!function(){var t=e,r=t.lib,n=r.Base,i=t.enc,a=i.Utf8,o=t.algo;o.HMAC=n.extend({init:function(e,t){e=this._hasher=new e.init,"string"==typeof t&&(t=a.parse(t));var r=e.blockSize,n=4*r;t.sigBytes>n&&(t=e.finalize(t)),t.clamp();for(var i=this._oKey=t.clone(),o=this._iKey=t.clone(),f=i.words,s=o.words,u=0;u<r;u++)f[u]^=1549556828,s[u]^=909522486;i.sigBytes=o.sigBytes=n,this.reset()},reset:function(){var e=this._hasher;e.reset(),e.update(this._iKey)},update:function(e){return this._hasher.update(e),this},finalize:function(e){var t=this._hasher,r=t.finalize(e);return t.reset(),t.finalize(this._oKey.clone().concat(r))}})}()})},function(e,t,r){"use strict";function n(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}Object.defineProperty(t,"__esModule",{value:!0}),t.getTransactionHash=t.signTransaction=t.deserializeTransaction=t.serializeTransaction=void 0;var i=r(61);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var a=r(158);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})});var o=r(160);Object.keys(o).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}})});var f=r(4),s=r(9),u=n(i),c=n(o),h=n(a),d=t.serializeTransaction=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r="";r+=(0,f.num2hexstring)(e.type),r+=(0,f.num2hexstring)(e.version),r+=m.exclusiveData[e.type](e),r+=(0,f.num2VarInt)(e.attributes.length);var n=!0,i=!1,a=void 0;try{for(var o,s=e.attributes[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value;r+=m.attribute(u)}}catch(e){i=!0,a=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw a}}r+=(0,f.num2VarInt)(e.inputs.length);var c=!0,h=!1,d=void 0;try{for(var l,p=e.inputs[Symbol.iterator]();!(c=(l=p.next()).done);c=!0){var b=l.value;r+=m.input(b)}}catch(e){h=!0,d=e}finally{try{!c&&p.return&&p.return()}finally{if(h)throw d}}r+=(0,f.num2VarInt)(e.outputs.length);var v=!0,g=!1,y=void 0;try{for(var _,w=e.outputs[Symbol.iterator]();!(v=(_=w.next()).done);v=!0){var x=_.value;r+=m.output(x)}}catch(e){g=!0,y=e}finally{try{!v&&w.return&&w.return()}finally{if(g)throw y}}if(t&&e.scripts&&e.scripts.length>0){r+=(0,f.num2VarInt)(e.scripts.length);var k=!0,S=!1,M=void 0;try{for(var A,E=e.scripts[Symbol.iterator]();!(k=(A=E.next()).done);k=!0){var I=A.value;r+=m.script(I)}}catch(e){S=!0,M=e}finally{try{!k&&E.return&&E.return()}finally{if(S)throw M}}}return r},l=t.deserializeTransaction=function(e){var t=new f.StringStream(e),r={};r.type=parseInt(t.read(1),16),r.version=parseInt(t.read(1),16);var n=g.exclusiveData[r.type](t);r.attributes=[],r.inputs=[],r.outputs=[],r.scripts=[];for(var i=t.readVarInt(),a=0;a<i;a++)r.inputs.push(g.attribute(t));for(var o=t.readVarInt(),s=0;s<o;s++)r.inputs.push(g.input(t));for(var u=t.readVarInt(),c=0;c<u;c++)r.outputs.push(g.output(t));if(!t.isEmpty())for(var h=t.readVarInt(),d=0;d<h;d++)r.scripts.push(g.script(t));return Object.assign(r,n)},p=t.signTransaction=function(e,t){var r="40"+(0,s.generateSignature)(d(e,!1),t),n=(0,s.getVerificationScriptFromPublicKey)((0,s.getPublicKeyFromPrivateKey)(t)),i={invocationScript:r,verificationScript:n};return e.scripts?e.scripts.push(i):e.scripts=[i],e},b=t.getTransactionHash=function(e){return(0,f.reverseHex)((0,f.hash256)(d(e,!1)))},v={claim:h.createClaimTx,contract:h.createContractTx,invocation:h.createInvocationTx},m={attribute:u.serializeTransactionAttribute,input:u.serializeTransactionInput,output:u.serializeTransactionOutput,script:u.serializeWitness,exclusiveData:c.serialize,tx:d},g={attribute:u.deserializeTransactionAttribute,input:u.deserializeTransactionInput,output:u.deserializeTransactionOutput,script:u.deserializeWitness,exclusiveData:c.deserialize,tx:l};t.default={create:v,serialize:m,deserialize:g,get:{transactionHash:b},sign:{transaction:p}}},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.generateDeployScript=t.createScript=t.ScriptBuilder=t.OpCode=void 0;var i=r(62),a=n(i),o=r(159),f=n(o),s=r(4);t.default={create:{script:o.createScript,scriptBuilder:function(){return new f.default}}};var u=function(e){var t=e.script,r=e.name,n=e.version,i=e.author,a=e.email,o=e.description,u=e.needsStorage,c=void 0!==u&&u,h=e.returnType,d=void 0===h?"ff":h,l=e.paramaterList,p=void 0===l?void 0:l,b=new f.default;return b.emitPush((0,s.str2hexstring)(o)).emitPush((0,s.str2hexstring)(a)).emitPush((0,s.str2hexstring)(i)).emitPush((0,s.str2hexstring)(n)).emitPush((0,s.str2hexstring)(r)).emitPush(c).emitPush(d).emitPush(p).emitPush(t).emitSysCall("Neo.Contract.Create"),b};t.OpCode=a.default,t.ScriptBuilder=f.default,t.createScript=o.createScript,t.generateDeployScript=u},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.queryRPC=t.Query=t.RPCClient=void 0;var i=r(161);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var a=r(162),o=n(a),f=r(63),s=n(f);t.default={create:{rpcClient:function(e){return new o.default(e)},query:function(e){return new s.default(e)}}},t.RPCClient=o.default,t.Query=s.default,t.queryRPC=f.queryRPC},function(e,t,r){"use strict";e.exports=function(e,t){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return e.apply(t,r)}}},function(e,t,r){"use strict";var n=r(22);e.exports=function(e,t,r){var i=r.config.validateStatus;r.status&&i&&!i(r.status)?t(n("Request failed with status code "+r.status,r.config,null,r.request,r)):e(r)}},function(e,t,r){"use strict";e.exports=function(e,t,r,n,i){return e.config=t,r&&(e.code=r),e.request=n,e.response=i,e}},function(e,t,r){"use strict";function n(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var i=r(2);e.exports=function(e,t,r){if(!t)return e;var a;if(r)a=r(t);else if(i.isURLSearchParams(t))a=t.toString();else{var o=[];i.forEach(t,function(e,t){null!==e&&void 0!==e&&(i.isArray(e)&&(t+="[]"),i.isArray(e)||(e=[e]),i.forEach(e,function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),o.push(n(t)+"="+n(e))}))}),a=o.join("&")}return a&&(e+=(-1===e.indexOf("?")?"?":"&")+a),e}},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("https")},function(e,t,r){"use strict";function n(e,t){s.call(this),this._options=e,this._redirectCount=0,this._bufferedWrites=[],t&&this.on("response",t);var r=this;if(this._onNativeResponse=function(e){r._processResponse(e)},!e.pathname&&e.path){var n=e.path.indexOf("?");n<0?e.pathname=e.path:(e.pathname=e.path.substring(0,n),e.search=e.path.substring(n))}this._performRequest()}var i=r(39),a=r(14),o=r(36),f=r(37),s=r(77).Writable,u=r(78)("follow-redirects"),c={"http:":o,"https:":f},h={},t=e.exports={maxRedirects:21},d={GET:!0,HEAD:!0,OPTIONS:!0,TRACE:!0},l=Object.create(null);["abort","aborted","error","socket"].forEach(function(e){l[e]=function(t){this._redirectable.emit(e,t)}}),n.prototype=Object.create(s.prototype),n.prototype._performRequest=function(){var e=this._options.protocol;this._options.agents&&(this._options.agent=this._options.agents[h[e]]);var t=c[e],r=this._currentRequest=t.request(this._options,this._onNativeResponse);this._currentUrl=i.format(this._options),r._redirectable=this;for(var n in l)n&&r.on(n,l[n]);if(this._isRedirect){var a=this._bufferedWrites;if(0===a.length)r.end();else{var o=0;!function e(){if(o<a.length){var t=a[o++];r.write(t.data,t.encoding,e)}else r.end()}()}}},n.prototype._processResponse=function(e){var t=e.headers.location;if(t&&!1!==this._options.followRedirects&&e.statusCode>=300&&e.statusCode<400){if(++this._redirectCount>this._options.maxRedirects)return this.emit("error",new Error("Max redirects exceeded."));var r,n=this._options.headers;if(307!==e.statusCode&&!(this._options.method in d)){this._options.method="GET",this._bufferedWrites=[];for(r in n)/^content-/i.test(r)&&delete n[r]}if(!this._isRedirect)for(r in n)/^host$/i.test(r)&&delete n[r];var a=i.resolve(this._currentUrl,t);u("redirecting to",a),Object.assign(this._options,i.parse(a)),this._isRedirect=!0,this._performRequest()}else e.responseUrl=this._currentUrl,this.emit("response",e),delete this._options,delete this._bufferedWrites},n.prototype.abort=function(){this._currentRequest.abort()},n.prototype.flushHeaders=function(){this._currentRequest.flushHeaders()},n.prototype.setNoDelay=function(e){this._currentRequest.setNoDelay(e)},n.prototype.setSocketKeepAlive=function(e,t){this._currentRequest.setSocketKeepAlive(e,t)},n.prototype.setTimeout=function(e,t){this._currentRequest.setTimeout(e,t)},n.prototype.write=function(e,t,r){this._currentRequest.write(e,t,r),this._bufferedWrites.push({data:e,encoding:t})},n.prototype.end=function(e,t,r){this._currentRequest.end(e,t,r),e&&this._bufferedWrites.push({data:e,encoding:t})},Object.keys(c).forEach(function(e){var r=h[e]=e.substr(0,e.length-1),o=c[e],f=t[r]=Object.create(o);f.request=function(r,o){return"string"==typeof r?(r=i.parse(r),r.maxRedirects=t.maxRedirects):r=Object.assign({maxRedirects:t.maxRedirects,protocol:e},r),a.equal(r.protocol,e,"protocol mismatch"),u("options",r),new n(r,o)},f.get=function(e,t){var r=f.request(e,t);return r.end(),r}})},function(e,t){e.exports=require("url")},function(e,t,r){function n(e){var r,n=0;for(r in e)n=(n<<5)-n+e.charCodeAt(r),n|=0;return t.colors[Math.abs(n)%t.colors.length]}function i(e){function r(){if(r.enabled){var e=r,n=+new Date,i=n-(u||n);e.diff=i,e.prev=u,e.curr=n,u=n;for(var a=new Array(arguments.length),o=0;o<a.length;o++)a[o]=arguments[o];a[0]=t.coerce(a[0]),"string"!=typeof a[0]&&a.unshift("%O");var f=0;a[0]=a[0].replace(/%([a-zA-Z%])/g,function(r,n){if("%%"===r)return r;f++;var i=t.formatters[n];if("function"==typeof i){var o=a[f];r=i.call(e,o),a.splice(f,1),f--}return r}),t.formatArgs.call(e,a);(r.log||t.log||console.log.bind(console)).apply(e,a)}}return r.namespace=e,r.enabled=t.enabled(e),r.useColors=t.useColors(),r.color=n(e),"function"==typeof t.init&&t.init(r),r}function a(e){t.save(e),t.names=[],t.skips=[];for(var r=("string"==typeof e?e:"").split(/[\s,]+/),n=r.length,i=0;i<n;i++)r[i]&&(e=r[i].replace(/\*/g,".*?"),"-"===e[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))}function o(){t.enable("")}function f(e){var r,n;for(r=0,n=t.skips.length;r<n;r++)if(t.skips[r].test(e))return!1;for(r=0,n=t.names.length;r<n;r++)if(t.names[r].test(e))return!0;return!1}function s(e){return e instanceof Error?e.stack||e.message:e}t=e.exports=i.debug=i.default=i,t.coerce=s,t.disable=o,t.enable=a,t.enabled=f,t.humanize=r(80),t.names=[],t.skips=[],t.formatters={};var u},function(e,t){e.exports=require("util")},function(e,t){e.exports=require("fs")},function(e,t,r){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,r){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},function(e,t,r){"use strict";function n(e){var t=u("sha256").update(e).digest();return u("sha256").update(t).digest()}function i(e){var t=n(e);return s.encode(Buffer.concat([e,t],e.length+4))}function a(e){var t=e.slice(0,-4),r=e.slice(-4),i=n(t);if(!(r[0]^i[0]|r[1]^i[1]|r[2]^i[2]|r[3]^i[3]))return t}function o(e){var t=s.decodeUnsafe(e);if(t)return a(t)}function f(e){var t=s.decode(e),r=a(t);if(!r)throw new Error("Invalid checksum");return r}var s=r(24),u=r(97);e.exports={encode:i,decode:f,decodeUnsafe:o}},function(e,t){e.exports=require("buffer")},function(e,t,r){var n=r(48),i=r(50),a=r(100);e.exports={Curve:i,Point:n,getCurveByName:a}},function(e,t,r){function n(e,t,r,n){i.notStrictEqual(n,void 0,"Missing Z coordinate"),this.curve=e,this.x=t,this.y=r,this.z=n,this._zInv=null,this.compressed=!0}var i=r(14),a=r(16),o=a.valueOf(3);Object.defineProperty(n.prototype,"zInv",{get:function(){return null===this._zInv&&(this._zInv=this.z.modInverse(this.curve.p)),this._zInv}}),Object.defineProperty(n.prototype,"affineX",{get:function(){return this.x.multiply(this.zInv).mod(this.curve.p)}}),Object.defineProperty(n.prototype,"affineY",{get:function(){return this.y.multiply(this.zInv).mod(this.curve.p)}}),n.fromAffine=function(e,t,r){return new n(e,t,r,a.ONE)},n.prototype.equals=function(e){return e===this||(this.curve.isInfinity(this)?this.curve.isInfinity(e):this.curve.isInfinity(e)?this.curve.isInfinity(this):0===e.y.multiply(this.z).subtract(this.y.multiply(e.z)).mod(this.curve.p).signum()&&0===e.x.multiply(this.z).subtract(this.x.multiply(e.z)).mod(this.curve.p).signum())},n.prototype.negate=function(){var e=this.curve.p.subtract(this.y);return new n(this.curve,this.x,e,this.z)},n.prototype.add=function(e){if(this.curve.isInfinity(this))return e;if(this.curve.isInfinity(e))return this;var t=this.x,r=this.y,i=e.x,a=e.y,f=a.multiply(this.z).subtract(r.multiply(e.z)).mod(this.curve.p),s=i.multiply(this.z).subtract(t.multiply(e.z)).mod(this.curve.p);if(0===s.signum())return 0===f.signum()?this.twice():this.curve.infinity;var u=s.square(),c=u.multiply(s),h=t.multiply(u),d=f.square().multiply(this.z),l=d.subtract(h.shiftLeft(1)).multiply(e.z).subtract(c).multiply(s).mod(this.curve.p),p=h.multiply(o).multiply(f).subtract(r.multiply(c)).subtract(d.multiply(f)).multiply(e.z).add(f.multiply(c)).mod(this.curve.p),b=c.multiply(this.z).multiply(e.z).mod(this.curve.p);return new n(this.curve,l,p,b)},n.prototype.twice=function(){if(this.curve.isInfinity(this))return this;if(0===this.y.signum())return this.curve.infinity;var e=this.x,t=this.y,r=t.multiply(this.z).mod(this.curve.p),i=r.multiply(t).mod(this.curve.p),a=this.curve.a,f=e.square().multiply(o);0!==a.signum()&&(f=f.add(this.z.square().multiply(a))),f=f.mod(this.curve.p);var s=f.square().subtract(e.shiftLeft(3).multiply(i)).shiftLeft(1).multiply(r).mod(this.curve.p),u=f.multiply(o).multiply(e).subtract(i.shiftLeft(1)).shiftLeft(2).multiply(i).subtract(f.pow(3)).mod(this.curve.p),c=r.pow(3).shiftLeft(3).mod(this.curve.p);return new n(this.curve,s,u,c)},n.prototype.multiply=function(e){if(this.curve.isInfinity(this))return this;if(0===e.signum())return this.curve.infinity;for(var t=e,r=t.multiply(o),n=this.negate(),i=this,a=r.bitLength()-2;a>0;--a){var f=r.testBit(a),s=t.testBit(a);i=i.twice(),f!==s&&(i=i.add(f?this:n))}return i},n.prototype.multiplyTwo=function(e,t,r){for(var n=Math.max(e.bitLength(),r.bitLength())-1,i=this.curve.infinity,a=this.add(t);n>=0;){var o=e.testBit(n),f=r.testBit(n);i=i.twice(),o?i=f?i.add(a):i.add(this):f&&(i=i.add(t)),--n}return i},n.prototype.getEncoded=function(e){if(null==e&&(e=this.compressed),this.curve.isInfinity(this))return new Buffer("00","hex");var t,r=this.affineX,n=this.affineY,i=this.curve.pLength;return e?(t=new Buffer(1+i),t.writeUInt8(n.isEven()?2:3,0)):(t=new Buffer(1+i+i),t.writeUInt8(4,0),n.toBuffer(i).copy(t,1+i)),r.toBuffer(i).copy(t,1),t},n.decodeFrom=function(e,t){var r,o=t.readUInt8(0),f=4!==o,s=Math.floor((e.p.bitLength()+7)/8),u=a.fromBuffer(t.slice(1,1+s));if(f){i.equal(t.length,s+1,"Invalid sequence length"),i(2===o||3===o,"Invalid sequence tag");var c=3===o;r=e.pointFromX(c,u)}else{i.equal(t.length,1+s+s,"Invalid sequence length");var h=a.fromBuffer(t.slice(1+s));r=n.fromAffine(e,u,h)}return r.compressed=f,r},n.prototype.toString=function(){return this.curve.isInfinity(this)?"(INFINITY)":"("+this.affineX.toString()+","+this.affineY.toString()+")"},e.exports=n},function(e,t,r){function n(e,t,r){if(!(this instanceof n))return new n(e,t,r);null!=e&&("number"==typeof e?this.fromNumber(e,t,r):null==t&&"string"!=typeof e?this.fromString(e,256):this.fromString(e,t))}function i(e,t,r,n,i,a){for(;--a>=0;){var o=t*this[e++]+r[n]+i;i=Math.floor(o/67108864),r[n++]=67108863&o}return i}function a(e){return it.charAt(e)}function o(e,t){var r=at[e.charCodeAt(t)];return null==r?-1:r}function f(e){for(var t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.s=this.s}function s(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+tt:this.t=0}function u(e){var t=new n;return t.fromInt(e),t}function c(e,t){var r,i=this;if(16==t)r=4;else if(8==t)r=3;else if(256==t)r=8;else if(2==t)r=1;else if(32==t)r=5;else{if(4!=t)return void i.fromRadix(e,t);r=2}i.t=0,i.s=0;for(var a=e.length,f=!1,s=0;--a>=0;){var u=8==r?255&e[a]:o(e,a);u<0?"-"==e.charAt(a)&&(f=!0):(f=!1,0==s?i[i.t++]=u:s+r>i.DB?(i[i.t-1]|=(u&(1<<i.DB-s)-1)<<s,i[i.t++]=u>>i.DB-s):i[i.t-1]|=u<<s,(s+=r)>=i.DB&&(s-=i.DB))}8==r&&0!=(128&e[0])&&(i.s=-1,s>0&&(i[i.t-1]|=(1<<i.DB-s)-1<<s)),i.clamp(),f&&n.ZERO.subTo(i,i)}function h(){for(var e=this.s&this.DM;this.t>0&&this[this.t-1]==e;)--this.t}function d(e){var t=this;if(t.s<0)return"-"+t.negate().toString(e);var r;if(16==e)r=4;else if(8==e)r=3;else if(2==e)r=1;else if(32==e)r=5;else{if(4!=e)return t.toRadix(e);r=2}var n,i=(1<<r)-1,o=!1,f="",s=t.t,u=t.DB-s*t.DB%r;if(s-- >0)for(u<t.DB&&(n=t[s]>>u)>0&&(o=!0,f=a(n));s>=0;)u<r?(n=(t[s]&(1<<u)-1)<<r-u,n|=t[--s]>>(u+=t.DB-r)):(n=t[s]>>(u-=r)&i,u<=0&&(u+=t.DB,--s)),n>0&&(o=!0),o&&(f+=a(n));return o?f:"0"}function l(){var e=new n;return n.ZERO.subTo(this,e),e}function p(){return this.s<0?this.negate():this}function b(e){var t=this.s-e.s;if(0!=t)return t;var r=this.t;if(0!=(t=r-e.t))return this.s<0?-t:t;for(;--r>=0;)if(0!=(t=this[r]-e[r]))return t;return 0}function v(e){var t,r=1;return 0!=(t=e>>>16)&&(e=t,r+=16),0!=(t=e>>8)&&(e=t,r+=8),0!=(t=e>>4)&&(e=t,r+=4),0!=(t=e>>2)&&(e=t,r+=2),0!=(t=e>>1)&&(e=t,r+=1),r}function m(){return this.t<=0?0:this.DB*(this.t-1)+v(this[this.t-1]^this.s&this.DM)}function g(){return this.bitLength()>>3}function y(e,t){var r;for(r=this.t-1;r>=0;--r)t[r+e]=this[r];for(r=e-1;r>=0;--r)t[r]=0;t.t=this.t+e,t.s=this.s}function _(e,t){for(var r=e;r<this.t;++r)t[r-e]=this[r];t.t=Math.max(this.t-e,0),t.s=this.s}function w(e,t){var r,n=this,i=e%n.DB,a=n.DB-i,o=(1<<a)-1,f=Math.floor(e/n.DB),s=n.s<<i&n.DM;for(r=n.t-1;r>=0;--r)t[r+f+1]=n[r]>>a|s,s=(n[r]&o)<<i;for(r=f-1;r>=0;--r)t[r]=0;t[f]=s,t.t=n.t+f+1,t.s=n.s,t.clamp()}function x(e,t){var r=this;t.s=r.s;var n=Math.floor(e/r.DB);if(n>=r.t)return void(t.t=0);var i=e%r.DB,a=r.DB-i,o=(1<<i)-1;t[0]=r[n]>>i;for(var f=n+1;f<r.t;++f)t[f-n-1]|=(r[f]&o)<<a,t[f-n]=r[f]>>i;i>0&&(t[r.t-n-1]|=(r.s&o)<<a),t.t=r.t-n,t.clamp()}function k(e,t){for(var r=this,n=0,i=0,a=Math.min(e.t,r.t);n<a;)i+=r[n]-e[n],t[n++]=i&r.DM,i>>=r.DB;if(e.t<r.t){for(i-=e.s;n<r.t;)i+=r[n],t[n++]=i&r.DM,i>>=r.DB;i+=r.s}else{for(i+=r.s;n<e.t;)i-=e[n],t[n++]=i&r.DM,i>>=r.DB;i-=e.s}t.s=i<0?-1:0,i<-1?t[n++]=r.DV+i:i>0&&(t[n++]=i),t.t=n,t.clamp()}function S(e,t){var r=this.abs(),i=e.abs(),a=r.t;for(t.t=a+i.t;--a>=0;)t[a]=0;for(a=0;a<i.t;++a)t[a+r.t]=r.am(0,i[a],t,a,0,r.t);t.s=0,t.clamp(),this.s!=e.s&&n.ZERO.subTo(t,t)}function M(e){for(var t=this.abs(),r=e.t=2*t.t;--r>=0;)e[r]=0;for(r=0;r<t.t-1;++r){var n=t.am(r,t[r],e,2*r,0,1);(e[r+t.t]+=t.am(r+1,2*t[r],e,2*r+1,n,t.t-r-1))>=t.DV&&(e[r+t.t]-=t.DV,e[r+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.am(r,t[r],e,2*r,0,1)),e.s=0,e.clamp()}function A(e,t,r){var i=this,a=e.abs();if(!(a.t<=0)){var o=i.abs();if(o.t<a.t)return null!=t&&t.fromInt(0),void(null!=r&&i.copyTo(r));null==r&&(r=new n);var f=new n,s=i.s,u=e.s,c=i.DB-v(a[a.t-1]);c>0?(a.lShiftTo(c,f),o.lShiftTo(c,r)):(a.copyTo(f),o.copyTo(r));var h=f.t,d=f[h-1];if(0!=d){var l=d*(1<<i.F1)+(h>1?f[h-2]>>i.F2:0),p=i.FV/l,b=(1<<i.F1)/l,m=1<<i.F2,g=r.t,y=g-h,_=null==t?new n:t;for(f.dlShiftTo(y,_),r.compareTo(_)>=0&&(r[r.t++]=1,r.subTo(_,r)),n.ONE.dlShiftTo(h,_),_.subTo(f,f);f.t<h;)f[f.t++]=0;for(;--y>=0;){var w=r[--g]==d?i.DM:Math.floor(r[g]*p+(r[g-1]+m)*b);if((r[g]+=f.am(0,w,r,y,0,h))<w)for(f.dlShiftTo(y,_),r.subTo(_,r);r[g]<--w;)r.subTo(_,r)}null!=t&&(r.drShiftTo(h,t),s!=u&&n.ZERO.subTo(t,t)),r.t=h,r.clamp(),c>0&&r.rShiftTo(c,r),s<0&&n.ZERO.subTo(r,r)}}}function E(e){var t=new n;return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(n.ZERO)>0&&e.subTo(t,t),t}function I(e){this.m=e}function T(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}function B(e){return e}function R(e){e.divRemTo(this.m,null,e)}function P(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function O(e,t){e.squareTo(t),this.reduce(t)}function C(){if(this.t<1)return 0;var e=this[0];if(0==(1&e))return 0;var t=3&e;return t=t*(2-(15&e)*t)&15,t=t*(2-(255&e)*t)&255,t=t*(2-((65535&e)*t&65535))&65535,t=t*(2-e*t%this.DV)%this.DV,t>0?this.DV-t:-t}function z(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}function j(e){var t=new n;return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(n.ZERO)>0&&this.m.subTo(t,t),t}function N(e){var t=new n;return e.copyTo(t),this.reduce(t),t}function q(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(var t=0;t<this.m.t;++t){var r=32767&e[t],n=r*this.mpl+((r*this.mph+(e[t]>>15)*this.mpl&this.um)<<15)&e.DM;for(r=t+this.m.t,e[r]+=this.m.am(0,n,e,t,0,this.m.t);e[r]>=e.DV;)e[r]-=e.DV,e[++r]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}function L(e,t){e.squareTo(t),this.reduce(t)}function D(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function H(){return 0==(this.t>0?1&this[0]:this.s)}function F(e,t){if(e>4294967295||e<1)return n.ONE;var r=new n,i=new n,a=t.convert(this),o=v(e)-1;for(a.copyTo(r);--o>=0;)if(t.sqrTo(r,i),(e&1<<o)>0)t.mulTo(i,a,r);else{var f=r;r=i,i=f}return t.revert(r)}function U(e,t){var r;return r=e<256||t.isEven()?new I(t):new z(t),this.exp(e,r)}function V(){var e=new n;return this.copyTo(e),e}function W(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this[0];if(0==this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function K(){return 0==this.t?this.s:this[0]<<24>>24}function Y(){return 0==this.t?this.s:this[0]<<16>>16}function X(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}function Z(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1}function G(e){if(null==e&&(e=10),0==this.signum()||e<2||e>36)return"0";var t=this.chunkSize(e),r=Math.pow(e,t),i=u(r),a=new n,o=new n,f="";for(this.divRemTo(i,a,o);a.signum()>0;)f=(r+o.intValue()).toString(e).substr(1)+f,a.divRemTo(i,a,o);return o.intValue().toString(e)+f}function $(e,t){var r=this;r.fromInt(0),null==t&&(t=10);for(var i=r.chunkSize(t),a=Math.pow(t,i),f=!1,s=0,u=0,c=0;c<e.length;++c){var h=o(e,c);h<0?"-"==e.charAt(c)&&0==r.signum()&&(f=!0):(u=t*u+h,++s>=i&&(r.dMultiply(a),r.dAddOffset(u,0),s=0,u=0))}s>0&&(r.dMultiply(Math.pow(t,s)),r.dAddOffset(u,0)),f&&n.ZERO.subTo(r,r)}function Q(e,t,r){var i=this;if("number"==typeof t)if(e<2)i.fromInt(1);else for(i.fromNumber(e,r),i.testBit(e-1)||i.bitwiseTo(n.ONE.shiftLeft(e-1),oe,i),i.isEven()&&i.dAddOffset(1,0);!i.isProbablePrime(t);)i.dAddOffset(2,0),i.bitLength()>e&&i.subTo(n.ONE.shiftLeft(e-1),i);else{var a=new Array,o=7&e;a.length=1+(e>>3),t.nextBytes(a),o>0?a[0]&=(1<<o)-1:a[0]=0,i.fromString(a,256)}}function J(){var e=this,t=e.t,r=new Array;r[0]=e.s;var n,i=e.DB-t*e.DB%8,a=0;if(t-- >0)for(i<e.DB&&(n=e[t]>>i)!=(e.s&e.DM)>>i&&(r[a++]=n|e.s<<e.DB-i);t>=0;)i<8?(n=(e[t]&(1<<i)-1)<<8-i,n|=e[--t]>>(i+=e.DB-8)):(n=e[t]>>(i-=8)&255,i<=0&&(i+=e.DB,--t)),0!=(128&n)&&(n|=-256),0===a&&(128&e.s)!=(128&n)&&++a,(a>0||n!=e.s)&&(r[a++]=n);return r}function ee(e){return 0==this.compareTo(e)}function te(e){return this.compareTo(e)<0?this:e}function re(e){return this.compareTo(e)>0?this:e}function ne(e,t,r){var n,i,a=this,o=Math.min(e.t,a.t);for(n=0;n<o;++n)r[n]=t(a[n],e[n]);if(e.t<a.t){for(i=e.s&a.DM,n=o;n<a.t;++n)r[n]=t(a[n],i);r.t=a.t}else{for(i=a.s&a.DM,n=o;n<e.t;++n)r[n]=t(i,e[n]);r.t=e.t}r.s=t(a.s,e.s),r.clamp()}function ie(e,t){return e&t}function ae(e){var t=new n;return this.bitwiseTo(e,ie,t),t}function oe(e,t){return e|t}function fe(e){var t=new n;return this.bitwiseTo(e,oe,t),t}function se(e,t){return e^t}function ue(e){var t=new n;return this.bitwiseTo(e,se,t),t}function ce(e,t){return e&~t}function he(e){var t=new n;return this.bitwiseTo(e,ce,t),t}function de(){for(var e=new n,t=0;t<this.t;++t)e[t]=this.DM&~this[t];return e.t=this.t,e.s=~this.s,e}function le(e){var t=new n;return e<0?this.rShiftTo(-e,t):this.lShiftTo(e,t),t}function pe(e){var t=new n;return e<0?this.lShiftTo(-e,t):this.rShiftTo(e,t),t}function be(e){if(0==e)return-1;var t=0;return 0==(65535&e)&&(e>>=16,t+=16),0==(255&e)&&(e>>=8,t+=8),0==(15&e)&&(e>>=4,t+=4),0==(3&e)&&(e>>=2,t+=2),0==(1&e)&&++t,t}function ve(){for(var e=0;e<this.t;++e)if(0!=this[e])return e*this.DB+be(this[e]);return this.s<0?this.t*this.DB:-1}function me(e){for(var t=0;0!=e;)e&=e-1,++t;return t}function ge(){for(var e=0,t=this.s&this.DM,r=0;r<this.t;++r)e+=me(this[r]^t);return e}function ye(e){var t=Math.floor(e/this.DB);return t>=this.t?0!=this.s:0!=(this[t]&1<<e%this.DB)}function _e(e,t){var r=n.ONE.shiftLeft(e);return this.bitwiseTo(r,t,r),r}function we(e){return this.changeBit(e,oe)}function xe(e){return this.changeBit(e,ce)}function ke(e){return this.changeBit(e,se)}function Se(e,t){for(var r=this,n=0,i=0,a=Math.min(e.t,r.t);n<a;)i+=r[n]+e[n],t[n++]=i&r.DM,i>>=r.DB;if(e.t<r.t){for(i+=e.s;n<r.t;)i+=r[n],t[n++]=i&r.DM,i>>=r.DB;i+=r.s}else{for(i+=r.s;n<e.t;)i+=e[n],t[n++]=i&r.DM,i>>=r.DB;i+=e.s}t.s=i<0?-1:0,i>0?t[n++]=i:i<-1&&(t[n++]=r.DV+i),t.t=n,t.clamp()}function Me(e){var t=new n;return this.addTo(e,t),t}function Ae(e){var t=new n;return this.subTo(e,t),t}function Ee(e){var t=new n;return this.multiplyTo(e,t),t}function Ie(){var e=new n;return this.squareTo(e),e}function Te(e){var t=new n;return this.divRemTo(e,t,null),t}function Be(e){var t=new n;return this.divRemTo(e,null,t),t}function Re(e){var t=new n,r=new n;return this.divRemTo(e,t,r),new Array(t,r)}function Pe(e){this[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}function Oe(e,t){if(0!=e){for(;this.t<=t;)this[this.t++]=0;for(this[t]+=e;this[t]>=this.DV;)this[t]-=this.DV,++t>=this.t&&(this[this.t++]=0),++this[t]}}function Ce(){}function ze(e){return e}function je(e,t,r){e.multiplyTo(t,r)}function Ne(e,t){e.squareTo(t)}function qe(e){return this.exp(e,new Ce)}function Le(e,t,r){var n=Math.min(this.t+e.t,t);for(r.s=0,r.t=n;n>0;)r[--n]=0;var i;for(i=r.t-this.t;n<i;++n)r[n+this.t]=this.am(0,e[n],r,n,0,this.t);for(i=Math.min(e.t,t);n<i;++n)this.am(0,e[n],r,n,0,t-n);r.clamp()}function De(e,t,r){--t;var n=r.t=this.t+e.t-t;for(r.s=0;--n>=0;)r[n]=0;for(n=Math.max(t-this.t,0);n<e.t;++n)r[this.t+n-t]=this.am(t-n,e[n],r,0,0,this.t+n-t);r.clamp(),r.drShiftTo(1,r)}function He(e){this.r2=new n,this.q3=new n,n.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e),this.m=e}function Fe(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(e.compareTo(this.m)<0)return e;var t=new n;return e.copyTo(t),this.reduce(t),t}function Ue(e){return e}function Ve(e){var t=this;for(e.drShiftTo(t.m.t-1,t.r2),e.t>t.m.t+1&&(e.t=t.m.t+1,e.clamp()),t.mu.multiplyUpperTo(t.r2,t.m.t+1,t.q3),t.m.multiplyLowerTo(t.q3,t.m.t+1,t.r2);e.compareTo(t.r2)<0;)e.dAddOffset(1,t.m.t+1);for(e.subTo(t.r2,e);e.compareTo(t.m)>=0;)e.subTo(t.m,e)}function We(e,t){e.squareTo(t),this.reduce(t)}function Ke(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function Ye(e,t){var r,i,a=e.bitLength(),o=u(1);if(a<=0)return o;r=a<18?1:a<48?3:a<144?4:a<768?5:6,i=a<8?new I(t):t.isEven()?new He(t):new z(t);var f=new Array,s=3,c=r-1,h=(1<<r)-1;if(f[1]=i.convert(this),r>1){var d=new n;for(i.sqrTo(f[1],d);s<=h;)f[s]=new n,i.mulTo(d,f[s-2],f[s]),s+=2}var l,p,b=e.t-1,m=!0,g=new n;for(a=v(e[b])-1;b>=0;){for(a>=c?l=e[b]>>a-c&h:(l=(e[b]&(1<<a+1)-1)<<c-a,b>0&&(l|=e[b-1]>>this.DB+a-c)),s=r;0==(1&l);)l>>=1,--s;if((a-=s)<0&&(a+=this.DB,--b),m)f[l].copyTo(o),m=!1;else{for(;s>1;)i.sqrTo(o,g),i.sqrTo(g,o),s-=2;s>0?i.sqrTo(o,g):(p=o,o=g,g=p),i.mulTo(g,f[l],o)}for(;b>=0&&0==(e[b]&1<<a);)i.sqrTo(o,g),p=o,o=g,g=p,--a<0&&(a=this.DB-1,--b)}return i.revert(o)}function Xe(e){var t=this.s<0?this.negate():this.clone(),r=e.s<0?e.negate():e.clone();if(t.compareTo(r)<0){var n=t;t=r,r=n}var i=t.getLowestSetBit(),a=r.getLowestSetBit();if(a<0)return t;for(i<a&&(a=i),a>0&&(t.rShiftTo(a,t),r.rShiftTo(a,r));t.signum()>0;)(i=t.getLowestSetBit())>0&&t.rShiftTo(i,t),(i=r.getLowestSetBit())>0&&r.rShiftTo(i,r),t.compareTo(r)>=0?(t.subTo(r,t),t.rShiftTo(1,t)):(r.subTo(t,r),r.rShiftTo(1,r));return a>0&&r.lShiftTo(a,r),r}function Ze(e){if(e<=0)return 0;var t=this.DV%e,r=this.s<0?e-1:0;if(this.t>0)if(0==t)r=this[0]%e;else for(var n=this.t-1;n>=0;--n)r=(t*r+this[n])%e;return r}function Ge(e){var t=e.isEven();if(0===this.signum())throw new Error("division by zero");if(this.isEven()&&t||0==e.signum())return n.ZERO;for(var r=e.clone(),i=this.clone(),a=u(1),o=u(0),f=u(0),s=u(1);0!=r.signum();){for(;r.isEven();)r.rShiftTo(1,r),t?(a.isEven()&&o.isEven()||(a.addTo(this,a),o.subTo(e,o)),a.rShiftTo(1,a)):o.isEven()||o.subTo(e,o),o.rShiftTo(1,o);for(;i.isEven();)i.rShiftTo(1,i),t?(f.isEven()&&s.isEven()||(f.addTo(this,f),s.subTo(e,s)),f.rShiftTo(1,f)):s.isEven()||s.subTo(e,s),s.rShiftTo(1,s);r.compareTo(i)>=0?(r.subTo(i,r),t&&a.subTo(f,a),o.subTo(s,o)):(i.subTo(r,i),t&&f.subTo(a,f),s.subTo(o,s))}if(0!=i.compareTo(n.ONE))return n.ZERO;for(;s.compareTo(e)>=0;)s.subTo(e,s);for(;s.signum()<0;)s.addTo(e,s);return s}function $e(e){var t,r=this.abs();if(1==r.t&&r[0]<=ot[ot.length-1]){for(t=0;t<ot.length;++t)if(r[0]==ot[t])return!0;return!1}if(r.isEven())return!1;for(t=1;t<ot.length;){for(var n=ot[t],i=t+1;i<ot.length&&n<ft;)n*=ot[i++];for(n=r.modInt(n);t<i;)if(n%ot[t++]==0)return!1}return r.millerRabin(e)}function Qe(e){var t=this.subtract(n.ONE),r=t.getLowestSetBit();if(r<=0)return!1;var i=t.shiftRight(r);(e=e+1>>1)>ot.length&&(e=ot.length);for(var a,o=new n(null),f=[],s=0;s<e;++s){for(;a=ot[Math.floor(Math.random()*ot.length)],-1!=f.indexOf(a););f.push(a),o.fromInt(a);var u=o.modPow(i,this);if(0!=u.compareTo(n.ONE)&&0!=u.compareTo(t)){for(var a=1;a++<r&&0!=u.compareTo(t);)if(u=u.modPowInt(2,this),0==u.compareTo(n.ONE))return!1;if(0!=u.compareTo(t))return!1}}return!0}var Je=n.prototype;Je.__bigi=r(98).version,n.isBigInteger=function(e,t){return e&&e.__bigi&&(!t||e.__bigi===Je.__bigi)};var et;n.prototype.am=i,et=26,n.prototype.DB=et,n.prototype.DM=(1<<et)-1;var tt=n.prototype.DV=1<<et;n.prototype.FV=Math.pow(2,52),n.prototype.F1=52-et,n.prototype.F2=2*et-52;var rt,nt,it="0123456789abcdefghijklmnopqrstuvwxyz",at=new Array;for(rt="0".charCodeAt(0),nt=0;nt<=9;++nt)at[rt++]=nt;for(rt="a".charCodeAt(0),nt=10;nt<36;++nt)at[rt++]=nt;for(rt="A".charCodeAt(0),nt=10;nt<36;++nt)at[rt++]=nt;I.prototype.convert=T,I.prototype.revert=B,I.prototype.reduce=R,I.prototype.mulTo=P,I.prototype.sqrTo=O,z.prototype.convert=j,z.prototype.revert=N,z.prototype.reduce=q,z.prototype.mulTo=D,z.prototype.sqrTo=L,Je.copyTo=f,Je.fromInt=s,Je.fromString=c,Je.clamp=h,Je.dlShiftTo=y,Je.drShiftTo=_,Je.lShiftTo=w,Je.rShiftTo=x,Je.subTo=k,Je.multiplyTo=S,Je.squareTo=M,Je.divRemTo=A,Je.invDigit=C,Je.isEven=H,Je.exp=F,Je.toString=d,Je.negate=l,Je.abs=p,Je.compareTo=b,Je.bitLength=m,Je.byteLength=g,Je.mod=E,Je.modPowInt=U,Ce.prototype.convert=ze,Ce.prototype.revert=ze,Ce.prototype.mulTo=je,Ce.prototype.sqrTo=Ne,He.prototype.convert=Fe,He.prototype.revert=Ue,He.prototype.reduce=Ve,He.prototype.mulTo=Ke,He.prototype.sqrTo=We;var ot=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],ft=(1<<26)/ot[ot.length-1];Je.chunkSize=X,Je.toRadix=G,Je.fromRadix=$,Je.fromNumber=Q,Je.bitwiseTo=ne,Je.changeBit=_e,Je.addTo=Se,Je.dMultiply=Pe,Je.dAddOffset=Oe,Je.multiplyLowerTo=Le,Je.multiplyUpperTo=De,Je.modInt=Ze,Je.millerRabin=Qe,Je.clone=V,Je.intValue=W,Je.byteValue=K,Je.shortValue=Y,Je.signum=Z,Je.toByteArray=J,Je.equals=ee,Je.min=te,Je.max=re,Je.and=ae,Je.or=fe,Je.xor=ue,Je.andNot=he,Je.not=de,Je.shiftLeft=le,Je.shiftRight=pe,Je.getLowestSetBit=ve,Je.bitCount=ge,Je.testBit=ye,Je.setBit=we,Je.clearBit=xe,Je.flipBit=ke,Je.add=Me,Je.subtract=Ae,Je.multiply=Ee,Je.divide=Te,Je.remainder=Be,Je.divideAndRemainder=Re,Je.modPow=Ye,Je.modInverse=Ge,Je.pow=qe,Je.gcd=Xe,Je.isProbablePrime=$e,Je.square=Ie,n.ZERO=u(0),n.ONE=u(1),n.valueOf=u,e.exports=n},function(e,t,r){function n(e,t,r,n,i,f,s){this.p=e,this.a=t,this.b=r,this.G=o.fromAffine(this,n,i),this.n=f,this.h=s,this.infinity=new o(this,null,null,a.ZERO),this.pOverFour=e.add(a.ONE).shiftRight(2),this.pLength=Math.floor((this.p.bitLength()+7)/8)}var i=r(14),a=r(16),o=r(48);n.prototype.pointFromX=function(e,t){var r=t.pow(3).add(this.a.multiply(t)).add(this.b).mod(this.p),n=r.modPow(this.pOverFour,this.p),i=n;return n.isEven()^!e&&(i=this.p.subtract(i)),o.fromAffine(this,t,i)},n.prototype.isInfinity=function(e){return e===this.infinity||0===e.z.signum()&&0!==e.y.signum()},n.prototype.isOnCurve=function(e){if(this.isInfinity(e))return!0;var t=e.affineX,r=e.affineY,n=this.a,i=this.b,a=this.p;if(t.signum()<0||t.compareTo(a)>=0)return!1;if(r.signum()<0||r.compareTo(a)>=0)return!1;var o=r.square().mod(a),f=t.pow(3).add(n.multiply(t)).add(i).mod(a);return o.equals(f)},n.prototype.validate=function(e){i(!this.isInfinity(e),"Point is at infinity"),i(this.isOnCurve(e),"Point is not on the curve");var t=e.multiply(this.n);return i(this.isInfinity(t),"Point is not a scalar multiple of G"),!0},e.exports=n},function(e,t,r){"use strict";function n(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"!=typeof e){for(var n=0;n<e.length;n++)r[n]=0|e[n];return r}if("hex"===t){e=e.replace(/[^a-z0-9]+/gi,""),e.length%2!=0&&(e="0"+e);for(var n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}else for(var n=0;n<e.length;n++){var i=e.charCodeAt(n),a=i>>8,o=255&i;a?r.push(a,o):r.push(o)}return r}function i(e){return 1===e.length?"0"+e:e}function a(e){for(var t="",r=0;r<e.length;r++)t+=i(e[r].toString(16));return t}var o=t;o.toArray=n,o.zero2=i,o.toHex=a,o.encode=function(e,t){return"hex"===t?a(e):e}},function(e,t,r){"use strict";function n(e,t,r,n){return 0===e?i(t,r,n):1===e||3===e?o(t,r,n):2===e?a(t,r,n):void 0}function i(e,t,r){return e&t^~e&r}function a(e,t,r){return e&t^e&r^t&r}function o(e,t,r){return e^t^r}function f(e){return d(e,2)^d(e,13)^d(e,22)}function s(e){return d(e,6)^d(e,11)^d(e,25)}function u(e){return d(e,7)^d(e,18)^e>>>3}function c(e){return d(e,17)^d(e,19)^e>>>10}var h=r(5),d=h.rotr32;t.ft_1=n,t.ch32=i,t.maj32=a,t.p32=o,t.s0_256=f,t.s1_256=s,t.g0_256=u,t.g1_256=c},function(e,t,r){"use strict";function n(){if(!(this instanceof n))return new n;m.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=g,this.W=new Array(64)}var i=r(5),a=r(12),o=r(52),f=r(7),s=i.sum32,u=i.sum32_4,c=i.sum32_5,h=o.ch32,d=o.maj32,l=o.s0_256,p=o.s1_256,b=o.g0_256,v=o.g1_256,m=a.BlockHash,g=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];i.inherits(n,m),e.exports=n,n.blockSize=512,n.outSize=256,n.hmacStrength=192,n.padLength=64,n.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=u(v(r[n-2]),r[n-7],b(r[n-15]),r[n-16]);var i=this.h[0],a=this.h[1],o=this.h[2],m=this.h[3],g=this.h[4],y=this.h[5],_=this.h[6],w=this.h[7];for(f(this.k.length===r.length),n=0;n<r.length;n++){var x=c(w,p(g),h(g,y,_),this.k[n],r[n]),k=s(l(i),d(i,a,o));w=_,_=y,y=g,g=s(m,x),m=o,o=a,a=i,i=s(x,k)}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],a),this.h[2]=s(this.h[2],o),this.h[3]=s(this.h[3],m),this.h[4]=s(this.h[4],g),this.h[5]=s(this.h[5],y),this.h[6]=s(this.h[6],_),this.h[7]=s(this.h[7],w)},n.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},function(e,t,r){"use strict";function n(){if(!(this instanceof n))return new n;B.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=R,this.W=new Array(160)}function i(e,t,r,n,i){var a=e&r^~e&i;return a<0&&(a+=4294967296),a}function a(e,t,r,n,i,a){var o=t&n^~t&a;return o<0&&(o+=4294967296),o}function o(e,t,r,n,i){var a=e&r^e&i^r&i;return a<0&&(a+=4294967296),a}function f(e,t,r,n,i,a){var o=t&n^t&a^n&a;return o<0&&(o+=4294967296),o}function s(e,t){var r=y(e,t,28),n=y(t,e,2),i=y(t,e,7),a=r^n^i;return a<0&&(a+=4294967296),a}function u(e,t){var r=_(e,t,28),n=_(t,e,2),i=_(t,e,7),a=r^n^i;return a<0&&(a+=4294967296),a}function c(e,t){var r=y(e,t,14),n=y(e,t,18),i=y(t,e,9),a=r^n^i;return a<0&&(a+=4294967296),a}function h(e,t){var r=_(e,t,14),n=_(e,t,18),i=_(t,e,9),a=r^n^i;return a<0&&(a+=4294967296),a}function d(e,t){var r=y(e,t,1),n=y(e,t,8),i=w(e,t,7),a=r^n^i;return a<0&&(a+=4294967296),a}function l(e,t){var r=_(e,t,1),n=_(e,t,8),i=x(e,t,7),a=r^n^i;return a<0&&(a+=4294967296),a}function p(e,t){var r=y(e,t,19),n=y(t,e,29),i=w(e,t,6),a=r^n^i;return a<0&&(a+=4294967296),a}function b(e,t){var r=_(e,t,19),n=_(t,e,29),i=x(e,t,6),a=r^n^i;return a<0&&(a+=4294967296),a}var v=r(5),m=r(12),g=r(7),y=v.rotr64_hi,_=v.rotr64_lo,w=v.shr64_hi,x=v.shr64_lo,k=v.sum64,S=v.sum64_hi,M=v.sum64_lo,A=v.sum64_4_hi,E=v.sum64_4_lo,I=v.sum64_5_hi,T=v.sum64_5_lo,B=m.BlockHash,R=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];v.inherits(n,B),e.exports=n,n.blockSize=1024,n.outSize=512,n.hmacStrength=192,n.padLength=128,n.prototype._prepareBlock=function(e,t){for(var r=this.W,n=0;n<32;n++)r[n]=e[t+n];for(;n<r.length;n+=2){var i=p(r[n-4],r[n-3]),a=b(r[n-4],r[n-3]),o=r[n-14],f=r[n-13],s=d(r[n-30],r[n-29]),u=l(r[n-30],r[n-29]),c=r[n-32],h=r[n-31];r[n]=A(i,a,o,f,s,u,c,h),r[n+1]=E(i,a,o,f,s,u,c,h)}},n.prototype._update=function(e,t){this._prepareBlock(e,t);var r=this.W,n=this.h[0],d=this.h[1],l=this.h[2],p=this.h[3],b=this.h[4],v=this.h[5],m=this.h[6],y=this.h[7],_=this.h[8],w=this.h[9],x=this.h[10],A=this.h[11],E=this.h[12],B=this.h[13],R=this.h[14],P=this.h[15];g(this.k.length===r.length);for(var O=0;O<r.length;O+=2){var C=R,z=P,j=c(_,w),N=h(_,w),q=i(_,w,x,A,E),L=a(_,w,x,A,E,B),D=this.k[O],H=this.k[O+1],F=r[O],U=r[O+1],V=I(C,z,j,N,q,L,D,H,F,U),W=T(C,z,j,N,q,L,D,H,F,U);C=s(n,d),z=u(n,d),j=o(n,d,l,p,b),N=f(n,d,l,p,b,v);var K=S(C,z,j,N),Y=M(C,z,j,N);R=E,P=B,E=x,B=A,x=_,A=w,_=S(m,y,V,W),w=M(y,y,V,W),m=b,y=v,b=l,v=p,l=n,p=d,n=S(V,W,K,Y),d=M(V,W,K,Y)}k(this.h,0,n,d),k(this.h,2,l,p),k(this.h,4,b,v),k(this.h,6,m,y),k(this.h,8,_,w),k(this.h,10,x,A),k(this.h,12,E,B),k(this.h,14,R,P)},n.prototype._digest=function(e){return"hex"===e?v.toHex32(this.h,"big"):v.split32(this.h,"big")}},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(19),r(125),r(126),r(10),r(11),r(27),r(56),r(127),r(57),r(128),r(129),r(130),r(28),r(131),r(8),r(1),r(132),r(133),r(134),r(135),r(136),r(137),r(138),r(139),r(140),r(141),r(142),r(143),r(144),r(145),r(146),r(147))}(0,function(e){return e})},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(t){var r=e,n=r.lib,i=n.WordArray,a=n.Hasher,o=r.algo,f=[],s=[];!function(){function e(e){return 4294967296*(e-(0|e))|0}for(var r=2,n=0;n<64;)(function(e){for(var r=t.sqrt(e),n=2;n<=r;n++)if(!(e%n))return!1;return!0})(r)&&(n<8&&(f[n]=e(t.pow(r,.5))),s[n]=e(t.pow(r,1/3)),n++),r++}();var u=[],c=o.SHA256=a.extend({_doReset:function(){this._hash=new i.init(f.slice(0))},_doProcessBlock:function(e,t){for(var r=this._hash.words,n=r[0],i=r[1],a=r[2],o=r[3],f=r[4],c=r[5],h=r[6],d=r[7],l=0;l<64;l++){if(l<16)u[l]=0|e[t+l];else{var p=u[l-15],b=(p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3,v=u[l-2],m=(v<<15|v>>>17)^(v<<13|v>>>19)^v>>>10;u[l]=b+u[l-7]+m+u[l-16]}var g=f&c^~f&h,y=n&i^n&a^i&a,_=(n<<30|n>>>2)^(n<<19|n>>>13)^(n<<10|n>>>22),w=(f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25),x=d+w+g+s[l]+u[l],k=_+y;d=h,h=c,c=f,f=o+x|0,o=a,a=i,i=n,n=x+k|0}r[0]=r[0]+n|0,r[1]=r[1]+i|0,r[2]=r[2]+a|0,r[3]=r[3]+o|0,r[4]=r[4]+f|0,r[5]=r[5]+c|0,r[6]=r[6]+h|0,r[7]=r[7]+d|0},_doFinalize:function(){var e=this._data,r=e.words,n=8*this._nDataBytes,i=8*e.sigBytes;return r[i>>>5]|=128<<24-i%32,r[14+(i+64>>>9<<4)]=t.floor(n/4294967296),r[15+(i+64>>>9<<4)]=n,e.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var e=a.clone.call(this);return e._hash=this._hash.clone(),e}});r.SHA256=a._createHelper(c),r.HmacSHA256=a._createHmacHelper(c)}(Math),e.SHA256})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(19))}(0,function(e){return function(){function t(){return o.create.apply(o,arguments)}var r=e,n=r.lib,i=n.Hasher,a=r.x64,o=a.Word,f=a.WordArray,s=r.algo,u=[t(1116352408,3609767458),t(1899447441,602891725),t(3049323471,3964484399),t(3921009573,2173295548),t(961987163,4081628472),t(1508970993,3053834265),t(2453635748,2937671579),t(2870763221,3664609560),t(3624381080,2734883394),t(310598401,1164996542),t(607225278,1323610764),t(1426881987,3590304994),t(1925078388,4068182383),t(2162078206,991336113),t(2614888103,633803317),t(3248222580,3479774868),t(3835390401,2666613458),t(4022224774,944711139),t(264347078,2341262773),t(604807628,2007800933),t(770255983,1495990901),t(1249150122,1856431235),t(1555081692,3175218132),t(1996064986,2198950837),t(2554220882,3999719339),t(2821834349,766784016),t(2952996808,2566594879),t(3210313671,3203337956),t(3336571891,1034457026),t(3584528711,2466948901),t(113926993,3758326383),t(338241895,168717936),t(666307205,1188179964),t(773529912,1546045734),t(1294757372,1522805485),t(1396182291,2643833823),t(1695183700,2343527390),t(1986661051,1014477480),t(2177026350,1206759142),t(2456956037,344077627),t(2730485921,1290863460),t(2820302411,3158454273),t(3259730800,3505952657),t(3345764771,106217008),t(3516065817,3606008344),t(3600352804,1432725776),t(4094571909,1467031594),t(275423344,851169720),t(430227734,3100823752),t(506948616,1363258195),t(659060556,3750685593),t(883997877,3785050280),t(958139571,3318307427),t(1322822218,3812723403),t(1537002063,2003034995),t(1747873779,3602036899),t(1955562222,1575990012),t(2024104815,1125592928),t(2227730452,2716904306),t(2361852424,442776044),t(2428436474,593698344),t(2756734187,3733110249),t(3204031479,2999351573),t(3329325298,3815920427),t(3391569614,3928383900),t(3515267271,566280711),t(3940187606,3454069534),t(4118630271,4000239992),t(116418474,1914138554),t(174292421,2731055270),t(289380356,3203993006),t(460393269,320620315),t(685471733,587496836),t(852142971,1086792851),t(1017036298,365543100),t(1126000580,2618297676),t(1288033470,3409855158),t(1501505948,4234509866),t(1607167915,987167468),t(1816402316,1246189591)],c=[];!function(){for(var e=0;e<80;e++)c[e]=t()}();var h=s.SHA512=i.extend({_doReset:function(){this._hash=new f.init([new o.init(1779033703,4089235720),new o.init(3144134277,2227873595),new o.init(1013904242,4271175723),new o.init(2773480762,1595750129),new o.init(1359893119,2917565137),new o.init(2600822924,725511199),new o.init(528734635,4215389547),new o.init(1541459225,327033209)])},_doProcessBlock:function(e,t){for(var r=this._hash.words,n=r[0],i=r[1],a=r[2],o=r[3],f=r[4],s=r[5],h=r[6],d=r[7],l=n.high,p=n.low,b=i.high,v=i.low,m=a.high,g=a.low,y=o.high,_=o.low,w=f.high,x=f.low,k=s.high,S=s.low,M=h.high,A=h.low,E=d.high,I=d.low,T=l,B=p,R=b,P=v,O=m,C=g,z=y,j=_,N=w,q=x,L=k,D=S,H=M,F=A,U=E,V=I,W=0;W<80;W++){var K=c[W];if(W<16)var Y=K.high=0|e[t+2*W],X=K.low=0|e[t+2*W+1];else{var Z=c[W-15],G=Z.high,$=Z.low,Q=(G>>>1|$<<31)^(G>>>8|$<<24)^G>>>7,J=($>>>1|G<<31)^($>>>8|G<<24)^($>>>7|G<<25),ee=c[W-2],te=ee.high,re=ee.low,ne=(te>>>19|re<<13)^(te<<3|re>>>29)^te>>>6,ie=(re>>>19|te<<13)^(re<<3|te>>>29)^(re>>>6|te<<26),ae=c[W-7],oe=ae.high,fe=ae.low,se=c[W-16],ue=se.high,ce=se.low,X=J+fe,Y=Q+oe+(X>>>0<J>>>0?1:0),X=X+ie,Y=Y+ne+(X>>>0<ie>>>0?1:0),X=X+ce,Y=Y+ue+(X>>>0<ce>>>0?1:0);K.high=Y,K.low=X}var he=N&L^~N&H,de=q&D^~q&F,le=T&R^T&O^R&O,pe=B&P^B&C^P&C,be=(T>>>28|B<<4)^(T<<30|B>>>2)^(T<<25|B>>>7),ve=(B>>>28|T<<4)^(B<<30|T>>>2)^(B<<25|T>>>7),me=(N>>>14|q<<18)^(N>>>18|q<<14)^(N<<23|q>>>9),ge=(q>>>14|N<<18)^(q>>>18|N<<14)^(q<<23|N>>>9),ye=u[W],_e=ye.high,we=ye.low,xe=V+ge,ke=U+me+(xe>>>0<V>>>0?1:0),xe=xe+de,ke=ke+he+(xe>>>0<de>>>0?1:0),xe=xe+we,ke=ke+_e+(xe>>>0<we>>>0?1:0),xe=xe+X,ke=ke+Y+(xe>>>0<X>>>0?1:0),Se=ve+pe,Me=be+le+(Se>>>0<ve>>>0?1:0);U=H,V=F,H=L,F=D,L=N,D=q,q=j+xe|0,N=z+ke+(q>>>0<j>>>0?1:0)|0,z=O,j=C,O=R,C=P,R=T,P=B,B=xe+Se|0,T=ke+Me+(B>>>0<xe>>>0?1:0)|0}p=n.low=p+B,n.high=l+T+(p>>>0<B>>>0?1:0),v=i.low=v+P,i.high=b+R+(v>>>0<P>>>0?1:0),g=a.low=g+C,a.high=m+O+(g>>>0<C>>>0?1:0),_=o.low=_+j,o.high=y+z+(_>>>0<j>>>0?1:0),x=f.low=x+q,f.high=w+N+(x>>>0<q>>>0?1:0),S=s.low=S+D,s.high=k+L+(S>>>0<D>>>0?1:0),A=h.low=A+F,h.high=M+H+(A>>>0<F>>>0?1:0),I=d.low=I+V,d.high=E+U+(I>>>0<V>>>0?1:0)},_doFinalize:function(){var e=this._data,t=e.words,r=8*this._nDataBytes,n=8*e.sigBytes;return t[n>>>5]|=128<<24-n%32,t[30+(n+128>>>10<<5)]=Math.floor(r/4294967296),t[31+(n+128>>>10<<5)]=r,e.sigBytes=4*t.length,this._process(),this._hash.toX32()},clone:function(){var e=i.clone.call(this);return e._hash=this._hash.clone(),e},blockSize:32});r.SHA512=i._createHelper(h),r.HmacSHA512=i._createHmacHelper(h)}(),e.SHA512})},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.isAddress=t.isPublicKey=t.isPrivateKey=t.isWIF=t.isNEP2=void 0;var i=r(47),a=n(i),o=r(24),f=n(o),s=r(4),u=r(15);t.isNEP2=function(e){try{if(58!==e.length)return!1;var t=(0,s.ab2hexstring)(f.default.decode(e));return!!t&&(86===t.length&&("01"===t.substr(0,2)&&("42"===t.substr(2,2)&&"e0"===t.substr(4,2))))}catch(e){return!1}},t.isWIF=function(e){try{if(52!==e.length)return!1;var t=(0,s.ab2hexstring)(f.default.decode(e));return(0,s.hash256)(t.substr(0,t.length-8)).substr(0,8)===t.substr(t.length-8,8)}catch(e){return!1}},t.isPrivateKey=function(e){return/^[0-9A-Fa-f]{64}$/.test(e)},t.isPublicKey=function(e){try{var t=(0,s.hexstring2ab)(e);if(2!==t[0]&&3!==t[0]){if(4!==t[0])return!1;e=(0,u.getPublicKeyEncoded)(e),t=(0,s.hexstring2ab)(e)}var r=a.default.getCurveByName("secp256r1"),n=a.default.Point.decodeFrom(r,Buffer.from(e,"hex")),i=n.affineY.toBuffer(32);if(2===t[0]&&i[31]%2==0)return!0;if(3===t[0]&&i[31]%2==1)return!0}catch(e){}return!1},t.isAddress=function(e){try{var t=(0,s.ab2hexstring)(f.default.decode(e));if((0,s.hash256)(t.slice(0,42)).substr(0,8)!==t.substr(42,8))return!1;var r=(0,s.reverseHex)(t.slice(2,42));return(0,u.getAddressFromScriptHash)(r)===e}catch(e){return!1}}},function(e,t){function r(e,t,r,o){return{password:n(e),salt:n(t),options:i(r),callback:a(arguments[arguments.length-1])}}function n(e){return"function"==typeof e?Buffer("","utf8"):e instanceof Buffer?e:"string"==typeof e?new Buffer(e,"utf8"):new Buffer(String(e||""),"utf8")}function i(e){return e=null!==e&&"object"==typeof e?e:{},{maxmem:o(e.maxmem)||33554432,cost:f(e.cost)||Math.pow(2,14),blockSize:s(e.blockSize)||8,parallel:s(e.parallel)||1,size:u(e.size)||64}}function a(e){return"function"==typeof e?e:null}function o(e){if("number"!=typeof e)return null;for(var t=4;t<=2048;t*=2){var r=1048576*t;if(r>e)return null;if(r==e)return r}return null}function f(e){if("number"!=typeof e)return null;for(var t=8;t<=64;t++){var r=Math.pow(2,t);if(r>e)return null;if(r==e)return r}return null}function s(e){return"number"!=typeof e?null:(e=Math.round(e),e<1?null:e>256?null:e)}function u(e){return"number"!=typeof e?null:(e=Math.round(e),e<1?null:e>2048?null:e)}e.exports=r},function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),a=r(15),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(a),f=r(58),s=function(){function e(t){if(n(this,e),(0,f.isPrivateKey)(t))this._privateKey=t;else if((0,f.isPublicKey)(t))this._publicKey=t;else if((0,f.isAddress)(t))this._address=t;else{if(!(0,f.isWIF)(t))throw(0,f.isNEP2)(t)?new ReferenceError("Account does not support NEP2. Please decode first."):new ReferenceError("Invalid input: "+t);this._privateKey=o.getPrivateKeyFromWIF(t),this._WIF=t}}return i(e,[{key:"WIF",get:function(){return this._WIF?this._WIF:(this._WIF=o.getWIFFromPrivateKey(this._privateKey),this._WIF)}},{key:"privateKey",get:function(){if(this._privateKey)return this._privateKey;throw new ReferenceError("No Private Key provided!")}},{key:"publicKey",get:function(){return this._publicKey?this._publicKey:(this._publicKey=o.getPublicKeyFromPrivateKey(this.privateKey),this._publicKey)}},{key:"scriptHash",get:function(){return this._scriptHash?this._scriptHash:this._address?(this._scriptHash=o.getScriptHashFromAddress(this.address),this._scriptHash):(this._scriptHash=o.getScriptHashFromPublicKey(this.publicKey),this._scriptHash)}},{key:"address",get:function(){return this._address?this._address:(this._address=o.getAddressFromScriptHash(this.scriptHash),this._address)}}]),e}();t.default=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deserializeWitness=t.serializeWitness=t.deserializeTransactionAttribute=t.serializeTransactionAttribute=t.deserializeTransactionOutput=t.serializeTransactionOutput=t.deserializeTransactionInput=t.serializeTransactionInput=void 0;var n=r(4);t.serializeTransactionInput=function(e){return(0,n.reverseHex)(e.prevHash)+(0,n.reverseHex)((0,n.num2hexstring)(e.prevIndex,4))},t.deserializeTransactionInput=function(e){return{prevHash:(0,n.reverseHex)(e.read(32)),prevIndex:parseInt((0,n.reverseHex)(e.read(2)),16)}},t.serializeTransactionOutput=function(e){var t=(0,n.num2fixed8)(e.value);return(0,n.reverseHex)(e.assetId)+t+(0,n.reverseHex)(e.scriptHash)},t.deserializeTransactionOutput=function(e){return{assetId:(0,n.reverseHex)(e.read(32)),value:(0,n.fixed82num)(e.read(8)),scriptHash:(0,n.reverseHex)(e.read(20))}},t.serializeTransactionAttribute=function(e){if(e.data.length>65535)throw new Error;var t=(0,n.num2hexstring)(e.usage);return 129===e.usage?t+=(0,n.num2hexstring)(e.data.length):(144===e.usage||e.usage>=240)&&(t+=(0,n.num2VarInt)(e.data.length)),2===e.usage||3===e.usage?t+=e.data.substr(2,64):t+=e.data,t},t.deserializeTransactionAttribute=function(e){var t={usage:parseInt(e.read(1),16)};if(0===t.usage||48===t.usage||t.usage>=161&&t.usage<=175)t.data=e.read(32);else if(2===t.usage||3===t.usage)t.data=(0,n.num2hexstring)(t.usage)+e.read(32);else if(32===t.usage)t.data=e.read(20);else if(129===t.usage)t.data=e.read(parseInt(e.read(1),16));else{if(!(144===t.usage||t.usage>=240))throw new Error;t.data=e.readVarBytes()}return t},t.serializeWitness=function(e){var t=(e.invocationScript.length/2).toString(16),r=(e.verificationScript.length/2).toString(16);return t+e.invocationScript+r+e.verificationScript},t.deserializeWitness=function(e){return{invocationScript:e.readVarBytes(),verificationScript:e.readVarBytes()}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={PUSH0:0,PUSHF:0,PUSHBYTES1:1,PUSHBYTES75:75,PUSHDATA1:76,PUSHDATA2:77,PUSHDATA4:78,PUSHM1:79,PUSH1:81,PUSHT:81,PUSH2:82,PUSH3:83,PUSH4:84,PUSH5:85,PUSH6:86,PUSH7:87,PUSH8:88,PUSH9:89,PUSH10:90,PUSH11:91,PUSH12:92,PUSH13:93,PUSH14:94,PUSH15:95,PUSH16:96,NOP:97,JMP:98,JMPIF:99,JMPIFNOT:100,CALL:101,RET:102,APPCALL:103,SYSCALL:104,TAILCALL:105,DUPFROMALTSTACK:106,TOALTSTACK:107,FROMALTSTACK:108,XDROP:109,XSWAP:114,XTUCK:115,DEPTH:116,DROP:117,DUP:118,NIP:119,OVER:120,PICK:121,ROLL:122,ROT:123,SWAP:124,TUCK:125,CAT:126,SUBSTR:127,LEFT:128,RIGHT:129,SIZE:130,INVERT:131,AND:132,OR:133,XOR:134,EQUAL:135,INC:139,DEC:140,SIGN:141,NEGATE:143,ABS:144,NOT:145,NZ:146,ADD:147,SUB:148,MUL:149,DIV:150,MOD:151,SHL:152,SHR:153,BOOLAND:154,BOOLOR:155,NUMEQUAL:156,NUMNOTEQUAL:158,LT:159,GT:160,LTE:161,GTE:162,MIN:163,MAX:164,WITHIN:165,SHA1:167,SHA256:168,HASH160:169,HASH256:170,CHECKSIG:172,CHECKMULTISIG:174,ARRAYSIZE:192,PACK:193,UNPACK:194,PICKITEM:195,SETITEM:196,NEWARRAY:197,NEWSTRUCT:198,THROW:240,THROWIFNOT:241};t.default=n},function(e,t,r){"use strict";function n(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.queryRPC=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),f=r(20),s=function(e){return e&&e.__esModule?e:{default:e}}(f),u=r(29),c=r(13),h=r(4),d=function(){function e(t){i(this,e),this.req=Object.assign({},c.DEFAULT_REQ,t),this.completed=!1,this.parse=null}return o(e,[{key:"parseWith",value:function(e){return this.parse=e,this}},{key:"execute",value:function(e){var t=this;if(this.completed)throw new Error("This request has been sent");return l(e,this.req).then(function(e){if(t.res=e,t.completed=!0,e.error)throw new Error(e.error.message);return t.parse?t.parse(e):e})}}],[{key:"getAccountState",value:function(t){return new e({method:"getaccountstate",params:[t]})}},{key:"getAssetState",value:function(t){return new e({method:"getassetstate",params:[t]})}},{key:"getBlock",value:function(t){return new e({method:"getblock",params:[t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1]})}},{key:"getBestBlockHash",value:function(){return new e({method:"getbestblockhash"})}},{key:"getBlockCount",value:function(){return new e({method:"getblockcount"})}},{key:"getBlockSysFee",value:function(t){return new e({method:"getblocksysfee",params:[t]})}},{key:"getConnectionCount",value:function(){return new e({method:"getconnectioncount"})}},{key:"getContractState",value:function(t){return new e({method:"getcontractstate",params:[t]})}},{key:"getPeers",value:function(){return new e({method:"getpeers"})}},{key:"getRawMemPool",value:function(){return new e({method:"getrawmempool"})}},{key:"getRawTransaction",value:function(t){return new e({method:"getrawtransaction",params:[t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1]})}},{key:"getStorage",value:function(t,r){return new e({method:"getstorage",params:[t,(0,h.str2hexstring)(r)]})}},{key:"getTxOut",value:function(t,r){return new e({method:"gettxout",params:[t,r]})}},{key:"getVersion",value:function(){return new e({method:"getversion"})}},{key:"invoke",value:function(t,r){return new e({method:"invoke",params:[t].concat(n(r))})}},{key:"invokeFunction",value:function(t,r,i){return new e({method:"invokefunction",params:[t,r].concat(n(i))})}},{key:"invokeScript",value:function(t){return new e({method:"invokescript",params:[t]})}},{key:"sendRawTransaction",value:function(t){return new e({method:"sendrawtransaction",params:["object"===(void 0===t?"undefined":a(t))?(0,u.serializeTransaction)(t):t]})}},{key:"submitBlock",value:function(t){return new e({method:"submitblock",params:[t]})}},{key:"validateAddress",value:function(t){return new e({method:"validateAddress",params:[t]})}}]),e}();t.default=d;var l=t.queryRPC=function(e,t){var r=s.default.create({headers:{"Content-Type":"application/json"}}),n=Object.assign({},c.DEFAULT_REQ,t);return r.post(e,n).then(function(e){return e.data})}},function(e,t,r){"use strict";function n(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}Object.defineProperty(t,"__esModule",{value:!0}),t.CONST=t.u=t.wallet=t.tx=t.sc=t.api=void 0;var i=r(65),a=n(i),o=r(31),f=n(o),s=r(13),u=n(s),c=r(30),h=n(c),d=r(29),l=n(d),p=r(9),b=n(p),v=r(4),m=n(v),g=[h.default,l.default,b.default,a.default,f.default],y=g.reduce(function(e,t){return Object.keys(t).map(function(r){e[r]?Object.assign(e[r],t[r]):e[r]=t[r]}),e},{CONST:u,u:m});t.default=y,t.api=a,t.sc=h,t.tx=l,t.wallet=b,t.u=m,t.CONST=u},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=r(66);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var a=r(164);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})});var o=r(165);Object.keys(o).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}})});var f=n(i),s=n(a),u=n(o),c=[f.default,s.default,u.default],h=c.reduce(function(e,t){return Object.keys(t).map(function(r){e[r]?Object.assign(e[r],t[r]):e[r]=t[r]}),e},{});t.default=h},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.doSendAsset=t.doMintTokens=t.doClaimAllGas=t.getWalletDBHeight=t.getTransactionHistory=t.getRPCEndpoint=t.getClaimAmounts=t.getBalance=t.getAPIEndpoint=void 0;var i=function(){function e(e,t){var r=[],n=!0,i=!1,a=void 0;try{for(var o,f=e[Symbol.iterator]();!(n=(o=f.next()).done)&&(r.push(o.value),!t||r.length!==t);n=!0);}catch(e){i=!0,a=e}finally{try{!n&&f.return&&f.return()}finally{if(i)throw a}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),a=r(20),o=n(a),f=r(93),s=n(f),u=r(9),c=r(29),h=r(31),d=r(13),l=t.getAPIEndpoint=function(e){return"MainNet"===e?"http://api.wallet.cityofzion.io":"http://testnet-api.wallet.cityofzion.io"},p=t.getBalance=function(e,t){var r=l(e);return o.default.get(r+"/v2/address/balance/"+t).then(function(e){return e.data})},b=t.getClaimAmounts=function(e,t){var r=l(e);return o.default.get(r+"/v2/address/claims/"+t).then(function(e){return e.data})},v=t.getRPCEndpoint=function(e){if("TestNet"!==e&&"MainNet"!==e)return Promise.resolve(e);var t=l(e);return o.default.get(t+"/v2/network/best_node").then(function(e){return e.data.node})},m=t.getTransactionHistory=function(e,t){var r=l(e);return o.default.get(r+"/v2/address/history/"+t).then(function(e){return e.data.history})},g=t.getWalletDBHeight=function(e){var t=l(e);return o.default.get(t+"/v2/block/height").then(function(e){return parseInt(e.data.block_height)})},y=t.doClaimAllGas=function(e,t){var r=new u.Account(t),n=v(e),a=b(e,r.address),o=void 0;return Promise.all([n,a]).then(function(e){var t=i(e,2),n=t[0],a=t[1],f=(0,c.createClaimTx)(r.publicKey,a);return o=(0,c.signTransaction)(f,r.privateKey),h.Query.sendRawTransaction(o).execute(n)}).then(function(e){return!0===e.result&&(e.txid=(0,c.getTransactionHash)(o)),e})},_=t.doMintTokens=function(e,t,r,n,a){var o=new u.Account(r),f=[{assetId:d.ASSET_ID.NEO,value:n,scriptHash:t}],s={operation:"mintTokens",scriptHash:t},l=v(e),b=p(e,o.address),m=void 0;return Promise.all([l,b]).then(function(e){var t=i(e,2),r=t[0],n=t[1],u=(0,c.createInvocationTx)(o.publicKey,n,f,s,a,{version:1});return m=(0,c.signTransaction)(u,o.privateKey),h.Query.sendRawTransaction(m).execute(r)}).then(function(e){return!0===e.result&&(e.txid=(0,c.getTransactionHash)(m)),e})},w=t.doSendAsset=function(e,t,r,n){var a=new u.Account(r),o=new u.Account(t),f=v(e),l=p(e,a.address),b=s.default.map(n,function(e,t){return{assetId:d.ASSET_ID[t],value:e,scriptHash:o.scriptHash}}),m=void 0;return Promise.all([f,l]).then(function(e){var t=i(e,2),r=t[0],n=t[1],o=(0,c.createContractTx)(a.publicKey,n,b);return m=(0,c.signTransaction)(o,a.privateKey),h.Query.sendRawTransaction(m).execute(r)}).then(function(e){return!0===e.result&&(e.txid=(0,c.getTransactionHash)(m)),e})};t.default={get:{APIEndPoint:l,RPCEndPoint:v,claimAmounts:b,balance:p,walletDBHeight:g,transactionHistory:m},do:{sendAsset:w,claimAllGas:y,mintTokens:_}}},function(e,t,r){"use strict";function n(e){var t=new o(e),r=a(o.prototype.request,t);return i.extend(r,o.prototype,t),i.extend(r,t),r}var i=r(2),a=r(32),o=r(69),f=r(21),s=n(f);s.Axios=o,s.create=function(e){return n(i.merge(f,e))},s.Cancel=r(44),s.CancelToken=r(91),s.isCancel=r(43),s.all=function(e){return Promise.all(e)},s.spread=r(92),e.exports=s,e.exports.default=s},function(e,t){function r(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function n(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&r(e.slice(0,0))}/*!
e.exports=function(e){return null!=e&&(r(e)||n(e)||!!e._isBuffer)}},function(e,t,r){"use strict";function n(e){this.defaults=e,this.interceptors={request:new o,response:new o}}var i=r(21),a=r(2),o=r(86),f=r(87),s=r(89),u=r(90);n.prototype.request=function(e){"string"==typeof e&&(e=a.merge({url:arguments[0]},arguments[1])),e=a.merge(i,this.defaults,{method:"get"},e),e.method=e.method.toLowerCase(),e.baseURL&&!s(e.url)&&(e.url=u(e.baseURL,e.url));var t=[f,void 0],r=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)r=r.then(t.shift(),t.shift());return r},a.forEach(["delete","get","head","options"],function(e){n.prototype[e]=function(t,r){return this.request(a.merge(r||{},{method:e,url:t}))}}),a.forEach(["post","put","patch"],function(e){n.prototype[e]=function(t,r,n){return this.request(a.merge(n||{},{method:e,url:t,data:r}))}}),e.exports=n},function(e,t,r){"use strict";var n=r(2);e.exports=function(e,t){n.forEach(e,function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])})}},function(e,t,r){"use strict";var n=r(2),i=r(33),a=r(35),o=r(72),f=r(73),s=r(22),u="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||r(74);e.exports=function(e){return new Promise(function(t,c){var h=e.data,d=e.headers;n.isFormData(h)&&delete d["Content-Type"];var l=new XMLHttpRequest,p="onreadystatechange",b=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in l||f(e.url)||(l=new window.XDomainRequest,p="onload",b=!0,l.onprogress=function(){},l.ontimeout=function(){}),e.auth){var v=e.auth.username||"",m=e.auth.password||"";d.Authorization="Basic "+u(v+":"+m)}if(l.open(e.method.toUpperCase(),a(e.url,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,l[p]=function(){if(l&&(4===l.readyState||b)&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in l?o(l.getAllResponseHeaders()):null,n=e.responseType&&"text"!==e.responseType?l.response:l.responseText,a={data:n,status:1223===l.status?204:l.status,statusText:1223===l.status?"No Content":l.statusText,headers:r,config:e,request:l};i(t,c,a),l=null}},l.onerror=function(){c(s("Network Error",e,null,l)),l=null},l.ontimeout=function(){c(s("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",l)),l=null},n.isStandardBrowserEnv()){var g=r(75),y=(e.withCredentials||f(e.url))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;y&&(d[e.xsrfHeaderName]=y)}if("setRequestHeader"in l&&n.forEach(d,function(e,t){void 0===h&&"content-type"===t.toLowerCase()?delete d[t]:l.setRequestHeader(t,e)}),e.withCredentials&&(l.withCredentials=!0),e.responseType)try{l.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&l.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){l&&(l.abort(),c(e),l=null)}),void 0===h&&(h=null),l.send(h)})}},function(e,t,r){"use strict";var n=r(2);e.exports=function(e){var t,r,i,a={};return e?(n.forEach(e.split("\n"),function(e){i=e.indexOf(":"),t=n.trim(e.substr(0,i)).toLowerCase(),r=n.trim(e.substr(i+1)),t&&(a[t]=a[t]?a[t]+", "+r:r)}),a):a}},function(e,t,r){"use strict";var n=r(2);e.exports=n.isStandardBrowserEnv()?function(){function e(e){var t=e;return r&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}var t,r=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");return t=e(window.location.href),function(r){var i=n.isString(r)?e(r):r;return i.protocol===t.protocol&&i.host===t.host}}():function(){return function(){return!0}}()},function(e,t,r){"use strict";function n(){this.message="String contains an invalid character"}function i(e){for(var t,r,i=String(e),o="",f=0,s=a;i.charAt(0|f)||(s="=",f%1);o+=s.charAt(63&t>>8-f%1*8)){if((r=i.charCodeAt(f+=.75))>255)throw new n;t=t<<8|r}return o}var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.prototype=new Error,n.prototype.code=5,n.prototype.name="InvalidCharacterError",e.exports=i},function(e,t,r){"use strict";var n=r(2);e.exports=n.isStandardBrowserEnv()?function(){return{write:function(e,t,r,i,a,o){var f=[];f.push(e+"="+encodeURIComponent(t)),n.isNumber(r)&&f.push("expires="+new Date(r).toGMTString()),n.isString(i)&&f.push("path="+i),n.isString(a)&&f.push("domain="+a),!0===o&&f.push("secure"),document.cookie=f.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()},function(e,t,r){"use strict";var n=r(2),i=r(33),a=r(35),o=r(36),f=r(37),s=r(38).http,u=r(38).https,c=r(39),h=r(84),d=r(85),l=r(22),p=r(34);e.exports=function(e){return new Promise(function(t,r){var b,v=e.data,m=e.headers,g=!1;if(m["User-Agent"]||m["user-agent"]||(m["User-Agent"]="axios/"+d.version),v&&!n.isStream(v)){if(Buffer.isBuffer(v));else if(n.isArrayBuffer(v))v=new Buffer(new Uint8Array(v));else{if(!n.isString(v))return r(l("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",e));v=new Buffer(v,"utf-8")}m["Content-Length"]=v.length}var y=void 0;if(e.auth){y=(e.auth.username||"")+":"+(e.auth.password||"")}var _=c.parse(e.url),w=_.protocol||"http:";if(!y&&_.auth){var x=_.auth.split(":");y=(x[0]||"")+":"+(x[1]||"")}y&&delete m.Authorization;var k="https:"===w,S=k?e.httpsAgent:e.httpAgent,M={hostname:_.hostname,port:_.port,path:a(_.path,e.params,e.paramsSerializer).replace(/^\?/,""),method:e.method,headers:m,agent:S,auth:y},A=e.proxy;if(!A){var E=w.slice(0,-1)+"_proxy",I=Object({NODE_ENV:"production"})[E]||Object({NODE_ENV:"production"})[E.toUpperCase()];if(I){var T=c.parse(I);if(A={host:T.hostname,port:T.port},T.auth){var B=T.auth.split(":");A.auth={username:B[0],password:B[1]}}}}if(A&&(M.hostname=A.host,M.host=A.host,M.headers.host=_.hostname+(_.port?":"+_.port:""),M.port=A.port,M.path=w+"//"+_.hostname+(_.port?":"+_.port:"")+M.path,A.auth)){var R=new Buffer(A.auth.username+":"+A.auth.password,"utf8").toString("base64");M.headers["Proxy-Authorization"]="Basic "+R}var P;0===e.maxRedirects?P=k?f:o:(e.maxRedirects&&(M.maxRedirects=e.maxRedirects),P=k?u:s);var O=P.request(M,function(n){if(!g){clearTimeout(b),b=null;var a=n;switch(n.headers["content-encoding"]){case"gzip":case"compress":case"deflate":a=a.pipe(h.createUnzip()),delete n.headers["content-encoding"]}var o=n.req||O,f={status:n.statusCode,statusText:n.statusMessage,headers:n.headers,config:e,request:o};if("stream"===e.responseType)f.data=a,i(t,r,f);else{var s=[];a.on("data",function(t){s.push(t),e.maxContentLength>-1&&Buffer.concat(s).length>e.maxContentLength&&r(l("maxContentLength size of "+e.maxContentLength+" exceeded",e,null,o))}),a.on("error",function(t){g||r(p(t,e,null,o))}),a.on("end",function(){var n=Buffer.concat(s);"arraybuffer"!==e.responseType&&(n=n.toString("utf8")),f.data=n,i(t,r,f)})}}});O.on("error",function(t){g||r(p(t,e,null,O))}),e.timeout&&!b&&(b=setTimeout(function(){O.abort(),r(l("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",O)),g=!0},e.timeout)),e.cancelToken&&e.cancelToken.promise.then(function(e){g||(O.abort(),r(e),g=!0)}),n.isStream(v)?v.pipe(O):O.end(v)})}},function(e,t){e.exports=require("stream")},function(e,t,r){"undefined"!=typeof process&&"renderer"===process.type?e.exports=r(79):e.exports=r(81)},function(e,t,r){function n(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type)||("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))}function i(e){var r=this.useColors;if(e[0]=(r?"%c":"")+this.namespace+(r?" %c":" ")+e[0]+(r?"%c ":" ")+"+"+t.humanize(this.diff),r){var n="color: "+this.color;e.splice(1,0,n,"color: inherit");var i=0,a=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(i++,"%c"===e&&(a=i))}),e.splice(a,0,n)}}function a(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function o(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}}function f(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=Object({NODE_ENV:"production"}).DEBUG),e}t=e.exports=r(40),t.log=a,t.formatArgs=i,t.save=o,t.load=f,t.useColors=n,t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(f())},function(e,t){function r(e){if(e=String(e),!(e.length>100)){var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return r*c;case"days":case"day":case"d":return r*u;case"hours":case"hour":case"hrs":case"hr":case"h":return r*s;case"minutes":case"minute":case"mins":case"min":case"m":return r*f;case"seconds":case"second":case"secs":case"sec":case"s":return r*o;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function n(e){return e>=u?Math.round(e/u)+"d":e>=s?Math.round(e/s)+"h":e>=f?Math.round(e/f)+"m":e>=o?Math.round(e/o)+"s":e+"ms"}function i(e){return a(e,u,"day")||a(e,s,"hour")||a(e,f,"minute")||a(e,o,"second")||e+" ms"}function a(e,t,r){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+r:Math.ceil(e/t)+" "+r+"s"}var o=1e3,f=60*o,s=60*f,u=24*s,c=365.25*u;e.exports=function(e,t){t=t||{};var a=typeof e;if("string"===a&&e.length>0)return r(e);if("number"===a&&!1===isNaN(e))return t.long?i(e):n(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,r){function n(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):u.isatty(h)}function i(e){var r=this.namespace;if(this.useColors){var n=this.color,i="  [3"+n+";1m"+r+" [0m";e[0]=i+e[0].split("\n").join("\n"+i),e.push("[3"+n+"m+"+t.humanize(this.diff)+"[0m")}else e[0]=(new Date).toUTCString()+" "+r+" "+e[0]}function a(){return d.write(c.format.apply(c,arguments)+"\n")}function o(e){null==e?delete Object({NODE_ENV:"production"}).DEBUG:Object({NODE_ENV:"production"}).DEBUG=e}function f(){return Object({NODE_ENV:"production"}).DEBUG}function s(e){e.inspectOpts={};for(var r=Object.keys(t.inspectOpts),n=0;n<r.length;n++)e.inspectOpts[r[n]]=t.inspectOpts[r[n]]}var u=r(82),c=r(41);t=e.exports=r(40),t.init=s,t.log=a,t.formatArgs=i,t.save=o,t.load=f,t.useColors=n,t.colors=[6,2,3,4,5,1],t.inspectOpts=Object.keys(Object({NODE_ENV:"production"})).filter(function(e){return/^debug_/i.test(e)}).reduce(function(e,t){var r=t.substring(6).toLowerCase().replace(/_([a-z])/g,function(e,t){return t.toUpperCase()}),n=Object({NODE_ENV:"production"})[t];return n=!!/^(yes|on|true|enabled)$/i.test(n)||!/^(no|off|false|disabled)$/i.test(n)&&("null"===n?null:Number(n)),e[r]=n,e},{});var h=parseInt(Object({NODE_ENV:"production"}).DEBUG_FD,10)||2;1!==h&&2!==h&&c.deprecate(function(){},"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")();var d=1===h?process.stdout:2===h?process.stderr:function(e){var t;switch(process.binding("tty_wrap").guessHandleType(e)){case"TTY":t=new u.WriteStream(e),t._type="tty",t._handle&&t._handle.unref&&t._handle.unref();break;case"FILE":t=new(r(42).SyncWriteStream)(e,{autoClose:!1}),t._type="fs";break;case"PIPE":case"TCP":t=new(r(83).Socket)({fd:e,readable:!1,writable:!0}),t.readable=!1,t.read=null,t._type="pipe",t._handle&&t._handle.unref&&t._handle.unref();break;default:throw new Error("Implement me. Unknown stream file type!")}return t.fd=e,t._isStdio=!0,t}(h);t.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,c.inspect(e,this.inspectOpts).split("\n").map(function(e){return e.trim()}).join(" ")},t.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,c.inspect(e,this.inspectOpts)},t.enable(f())},function(e,t){e.exports=require("tty")},function(e,t){e.exports=require("net")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports={_from:"axios@^0.16.2",_id:"axios@0.16.2",_inBundle:!1,_integrity:"sha1-uk+S8XFn37q0CYN4VFS5rBScPG0=",_location:"/axios",_phantomChildren:{},_requested:{type:"range",registry:!0,raw:"axios@^0.16.2",name:"axios",escapedName:"axios",rawSpec:"^0.16.2",saveSpec:null,fetchSpec:"^0.16.2"},_requiredBy:["/"],_resolved:"https://registry.npmjs.org/axios/-/axios-0.16.2.tgz",_shasum:"ba4f92f17167dfbab40983785454b9ac149c3c6d",_spec:"axios@^0.16.2",_where:"/Users/ethanfast/Desktop/Code/NEO/neon-js",author:{name:"Matt Zabriskie"},browser:{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},bugs:{url:"https://github.com/mzabriskie/axios/issues"},bundleDependencies:!1,dependencies:{"follow-redirects":"^1.2.3","is-buffer":"^1.1.5"},deprecated:!1,description:"Promise based HTTP client for the browser and node.js",devDependencies:{coveralls:"^2.11.9","es6-promise":"^4.0.5",grunt:"^1.0.1","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.0.0","grunt-contrib-nodeunit":"^1.0.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^19.0.0","grunt-karma":"^2.0.0","grunt-ts":"^6.0.0-beta.3","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1",karma:"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.0.0","karma-firefox-launcher":"^1.0.0","karma-jasmine":"^1.0.2","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-phantomjs-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.1.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2",minimist:"^1.2.0","phantomjs-prebuilt":"^2.1.7",sinon:"^1.17.4",typescript:"^2.0.3","url-search-params":"^0.6.1",webpack:"^1.13.1","webpack-dev-server":"^1.14.1"},homepage:"https://github.com/mzabriskie/axios",keywords:["xhr","http","ajax","promise","node"],license:"MIT",main:"index.js",name:"axios",repository:{type:"git",url:"git+https://github.com/mzabriskie/axios.git"},scripts:{build:"NODE_ENV=production grunt build",coveralls:"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",examples:"node ./examples/server.js",postversion:"git push && git push --tags",preversion:"npm test",start:"node ./sandbox/server.js",test:"grunt test",version:"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},typings:"./index.d.ts",version:"0.16.2"}},function(e,t,r){"use strict";function n(){this.handlers=[]}var i=r(2);n.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},n.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},n.prototype.forEach=function(e){i.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=n},function(e,t,r){"use strict";function n(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var i=r(2),a=r(88),o=r(43),f=r(21);e.exports=function(e){return n(e),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),i.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||f.adapter)(e).then(function(t){return n(e),t.data=a(t.data,t.headers,e.transformResponse),t},function(t){return o(t)||(n(e),t&&t.response&&(t.response.data=a(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,r){"use strict";var n=r(2);e.exports=function(e,t,r){return n.forEach(r,function(r){e=r(e,t)}),e}},function(e,t,r){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,r){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,r){"use strict";function n(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var r=this;e(function(e){r.reason||(r.reason=new i(e),t(r.reason))})}var i=r(44);n.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},n.source=function(){var e;return{token:new n(function(t){e=t}),cancel:e}},e.exports=n},function(e,t,r){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,r){(function(e){var n;(function(){function i(e,t){return e.set(t[0],t[1]),e}function a(e,t){return e.add(t),e}function o(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}function f(e,t,r,n){for(var i=-1,a=null==e?0:e.length;++i<a;){var o=e[i];t(n,o,r(o),e)}return n}function s(e,t){for(var r=-1,n=null==e?0:e.length;++r<n&&!1!==t(e[r],r,e););return e}function u(e,t){for(var r=null==e?0:e.length;r--&&!1!==t(e[r],r,e););return e}function c(e,t){for(var r=-1,n=null==e?0:e.length;++r<n;)if(!t(e[r],r,e))return!1;return!0}function h(e,t){for(var r=-1,n=null==e?0:e.length,i=0,a=[];++r<n;){var o=e[r];t(o,r,e)&&(a[i++]=o)}return a}function d(e,t){return!!(null==e?0:e.length)&&k(e,t,0)>-1}function l(e,t,r){for(var n=-1,i=null==e?0:e.length;++n<i;)if(r(t,e[n]))return!0;return!1}function p(e,t){for(var r=-1,n=null==e?0:e.length,i=Array(n);++r<n;)i[r]=t(e[r],r,e);return i}function b(e,t){for(var r=-1,n=t.length,i=e.length;++r<n;)e[i+r]=t[r];return e}function v(e,t,r,n){var i=-1,a=null==e?0:e.length;for(n&&a&&(r=e[++i]);++i<a;)r=t(r,e[i],i,e);return r}function m(e,t,r,n){var i=null==e?0:e.length;for(n&&i&&(r=e[--i]);i--;)r=t(r,e[i],i,e);return r}function g(e,t){for(var r=-1,n=null==e?0:e.length;++r<n;)if(t(e[r],r,e))return!0;return!1}function y(e){return e.split("")}function _(e){return e.match(Lt)||[]}function w(e,t,r){var n;return r(e,function(e,r,i){if(t(e,r,i))return n=r,!1}),n}function x(e,t,r,n){for(var i=e.length,a=r+(n?1:-1);n?a--:++a<i;)if(t(e[a],a,e))return a;return-1}function k(e,t,r){return t===t?G(e,t,r):x(e,M,r)}function S(e,t,r,n){for(var i=r-1,a=e.length;++i<a;)if(n(e[i],t))return i;return-1}function M(e){return e!==e}function A(e,t){var r=null==e?0:e.length;return r?R(e,t)/r:Ce}function E(e){return function(t){return null==t?ne:t[e]}}function I(e){return function(t){return null==e?ne:e[t]}}function T(e,t,r,n,i){return i(e,function(e,i,a){r=n?(n=!1,e):t(r,e,i,a)}),r}function B(e,t){var r=e.length;for(e.sort(t);r--;)e[r]=e[r].value;return e}function R(e,t){for(var r,n=-1,i=e.length;++n<i;){var a=t(e[n]);a!==ne&&(r=r===ne?a:r+a)}return r}function P(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}function O(e,t){return p(t,function(t){return[t,e[t]]})}function C(e){return function(t){return e(t)}}function z(e,t){return p(t,function(t){return e[t]})}function j(e,t){return e.has(t)}function N(e,t){for(var r=-1,n=e.length;++r<n&&k(t,e[r],0)>-1;);return r}function q(e,t){for(var r=e.length;r--&&k(t,e[r],0)>-1;);return r}function L(e,t){for(var r=e.length,n=0;r--;)e[r]===t&&++n;return n}function D(e){return"\\"+Ar[e]}function H(e,t){return null==e?ne:e[t]}function F(e){return mr.test(e)}function U(e){return gr.test(e)}function V(e){for(var t,r=[];!(t=e.next()).done;)r.push(t.value);return r}function W(e){var t=-1,r=Array(e.size);return e.forEach(function(e,n){r[++t]=[n,e]}),r}function K(e,t){return function(r){return e(t(r))}}function Y(e,t){for(var r=-1,n=e.length,i=0,a=[];++r<n;){var o=e[r];o!==t&&o!==ue||(e[r]=ue,a[i++]=r)}return a}function X(e){var t=-1,r=Array(e.size);return e.forEach(function(e){r[++t]=e}),r}function Z(e){var t=-1,r=Array(e.size);return e.forEach(function(e){r[++t]=[e,e]}),r}function G(e,t,r){for(var n=r-1,i=e.length;++n<i;)if(e[n]===t)return n;return-1}function $(e,t,r){for(var n=r+1;n--;)if(e[n]===t)return n;return n}function Q(e){return F(e)?ee(e):Ur(e)}function J(e){return F(e)?te(e):y(e)}function ee(e){for(var t=br.lastIndex=0;br.test(e);)++t;return t}function te(e){return e.match(br)||[]}function re(e){return e.match(vr)||[]}var ne,ie=200,ae="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",oe="Expected a function",fe="__lodash_hash_undefined__",se=500,ue="__lodash_placeholder__",ce=1,he=2,de=4,le=1,pe=2,be=1,ve=2,me=4,ge=8,ye=16,_e=32,we=64,xe=128,ke=256,Se=512,Me=30,Ae="...",Ee=800,Ie=16,Te=1,Be=2,Re=1/0,Pe=9007199254740991,Oe=1.7976931348623157e308,Ce=NaN,ze=4294967295,je=ze-1,Ne=ze>>>1,qe=[["ary",xe],["bind",be],["bindKey",ve],["curry",ge],["curryRight",ye],["flip",Se],["partial",_e],["partialRight",we],["rearg",ke]],Le="[object Arguments]",De="[object Array]",He="[object AsyncFunction]",Fe="[object Boolean]",Ue="[object Date]",Ve="[object DOMException]",We="[object Error]",Ke="[object Function]",Ye="[object GeneratorFunction]",Xe="[object Map]",Ze="[object Number]",Ge="[object Null]",$e="[object Object]",Qe="[object Proxy]",Je="[object RegExp]",et="[object Set]",tt="[object String]",rt="[object Symbol]",nt="[object Undefined]",it="[object WeakMap]",at="[object WeakSet]",ot="[object ArrayBuffer]",ft="[object DataView]",st="[object Float32Array]",ut="[object Float64Array]",ct="[object Int8Array]",ht="[object Int16Array]",dt="[object Int32Array]",lt="[object Uint8Array]",pt="[object Uint8ClampedArray]",bt="[object Uint16Array]",vt="[object Uint32Array]",mt=/\b__p \+= '';/g,gt=/\b(__p \+=) '' \+/g,yt=/(__e\(.*?\)|\b__t\)) \+\n'';/g,_t=/&(?:amp|lt|gt|quot|#39);/g,wt=/[&<>"']/g,xt=RegExp(_t.source),kt=RegExp(wt.source),St=/<%-([\s\S]+?)%>/g,Mt=/<%([\s\S]+?)%>/g,At=/<%=([\s\S]+?)%>/g,Et=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,It=/^\w*$/,Tt=/^\./,Bt=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Rt=/[\\^$.*+?()[\]{}|]/g,Pt=RegExp(Rt.source),Ot=/^\s+|\s+$/g,Ct=/^\s+/,zt=/\s+$/,jt=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Nt=/\{\n\/\* \[wrapped with (.+)\] \*/,qt=/,? & /,Lt=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Dt=/\\(\\)?/g,Ht=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Ft=/\w*$/,Ut=/^[-+]0x[0-9a-f]+$/i,Vt=/^0b[01]+$/i,Wt=/^\[object .+?Constructor\]$/,Kt=/^0o[0-7]+$/i,Yt=/^(?:0|[1-9]\d*)$/,Xt=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Zt=/($^)/,Gt=/['\n\r\u2028\u2029\\]/g,$t="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Qt="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Jt="["+Qt+"]",er="["+$t+"]",tr="[a-z\\xdf-\\xf6\\xf8-\\xff]",rr="[^\\ud800-\\udfff"+Qt+"\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",nr="\\ud83c[\\udffb-\\udfff]",ir="(?:\\ud83c[\\udde6-\\uddff]){2}",ar="[\\ud800-\\udbff][\\udc00-\\udfff]",or="[A-Z\\xc0-\\xd6\\xd8-\\xde]",fr="(?:"+tr+"|"+rr+")",sr="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",ur="(?:\\u200d(?:"+["[^\\ud800-\\udfff]",ir,ar].join("|")+")[\\ufe0e\\ufe0f]?"+sr+")*",cr="[\\ufe0e\\ufe0f]?"+sr+ur,hr="(?:"+["[\\u2700-\\u27bf]",ir,ar].join("|")+")"+cr,dr="(?:"+["[^\\ud800-\\udfff]"+er+"?",er,ir,ar,"[\\ud800-\\udfff]"].join("|")+")",lr=RegExp("['’]","g"),pr=RegExp(er,"g"),br=RegExp(nr+"(?="+nr+")|"+dr+cr,"g"),vr=RegExp([or+"?"+tr+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[Jt,or,"$"].join("|")+")","(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[Jt,or+fr,"$"].join("|")+")",or+"?"+fr+"+(?:['’](?:d|ll|m|re|s|t|ve))?",or+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)","\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)","\\d+",hr].join("|"),"g"),mr=RegExp("[\\u200d\\ud800-\\udfff"+$t+"\\ufe0e\\ufe0f]"),gr=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,yr=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],_r=-1,wr={};wr[st]=wr[ut]=wr[ct]=wr[ht]=wr[dt]=wr[lt]=wr[pt]=wr[bt]=wr[vt]=!0,wr[Le]=wr[De]=wr[ot]=wr[Fe]=wr[ft]=wr[Ue]=wr[We]=wr[Ke]=wr[Xe]=wr[Ze]=wr[$e]=wr[Je]=wr[et]=wr[tt]=wr[it]=!1;var xr={};xr[Le]=xr[De]=xr[ot]=xr[ft]=xr[Fe]=xr[Ue]=xr[st]=xr[ut]=xr[ct]=xr[ht]=xr[dt]=xr[Xe]=xr[Ze]=xr[$e]=xr[Je]=xr[et]=xr[tt]=xr[rt]=xr[lt]=xr[pt]=xr[bt]=xr[vt]=!0,xr[We]=xr[Ke]=xr[it]=!1;var kr={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"},Sr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Mr={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Ar={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Er=parseFloat,Ir=parseInt,Tr="object"==typeof global&&global&&global.Object===Object&&global,Br="object"==typeof self&&self&&self.Object===Object&&self,Rr=Tr||Br||Function("return this")(),Pr="object"==typeof t&&t&&!t.nodeType&&t,Or=Pr&&"object"==typeof e&&e&&!e.nodeType&&e,Cr=Or&&Or.exports===Pr,zr=Cr&&Tr.process,jr=function(){try{return zr&&zr.binding&&zr.binding("util")}catch(e){}}(),Nr=jr&&jr.isArrayBuffer,qr=jr&&jr.isDate,Lr=jr&&jr.isMap,Dr=jr&&jr.isRegExp,Hr=jr&&jr.isSet,Fr=jr&&jr.isTypedArray,Ur=E("length"),Vr=I(kr),Wr=I(Sr),Kr=I(Mr),Yr=function e(t){function r(e){if(os(e)&&!md(e)&&!(e instanceof I)){if(e instanceof y)return e;if(mc.call(e,"__wrapped__"))return to(e)}return new y(e)}function n(){}function y(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=ne}function I(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=ze,this.__views__=[]}function G(){var e=new I(this.__wrapped__);return e.__actions__=Ni(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Ni(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Ni(this.__views__),e}function ee(){if(this.__filtered__){var e=new I(this);e.__dir__=-1,e.__filtered__=!0}else e=this.clone(),e.__dir__*=-1;return e}function te(){var e=this.__wrapped__.value(),t=this.__dir__,r=md(e),n=t<0,i=r?e.length:0,a=Aa(0,i,this.__views__),o=a.start,f=a.end,s=f-o,u=n?f:o-1,c=this.__iteratees__,h=c.length,d=0,l=Yc(s,this.__takeCount__);if(!r||!n&&i==s&&l==s)return gi(e,this.__actions__);var p=[];e:for(;s--&&d<l;){u+=t;for(var b=-1,v=e[u];++b<h;){var m=c[b],g=m.iteratee,y=m.type,_=g(v);if(y==Be)v=_;else if(!_){if(y==Te)continue e;break e}}p[d++]=v}return p}function Lt(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function $t(){this.__data__=nh?nh(null):{},this.size=0}function Qt(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}function Jt(e){var t=this.__data__;if(nh){var r=t[e];return r===fe?ne:r}return mc.call(t,e)?t[e]:ne}function er(e){var t=this.__data__;return nh?t[e]!==ne:mc.call(t,e)}function tr(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=nh&&t===ne?fe:t,this}function rr(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function nr(){this.__data__=[],this.size=0}function ir(e){var t=this.__data__,r=Zr(t,e);return!(r<0)&&(r==t.length-1?t.pop():Rc.call(t,r,1),--this.size,!0)}function ar(e){var t=this.__data__,r=Zr(t,e);return r<0?ne:t[r][1]}function or(e){return Zr(this.__data__,e)>-1}function fr(e,t){var r=this.__data__,n=Zr(r,e);return n<0?(++this.size,r.push([e,t])):r[n][1]=t,this}function sr(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ur(){this.size=0,this.__data__={hash:new Lt,map:new(Jc||rr),string:new Lt}}function cr(e){var t=xa(this,e).delete(e);return this.size-=t?1:0,t}function hr(e){return xa(this,e).get(e)}function dr(e){return xa(this,e).has(e)}function br(e,t){var r=xa(this,e),n=r.size;return r.set(e,t),this.size+=r.size==n?0:1,this}function vr(e){var t=-1,r=null==e?0:e.length;for(this.__data__=new sr;++t<r;)this.add(e[t])}function mr(e){return this.__data__.set(e,fe),this}function gr(e){return this.__data__.has(e)}function kr(e){var t=this.__data__=new rr(e);this.size=t.size}function Sr(){this.__data__=new rr,this.size=0}function Mr(e){var t=this.__data__,r=t.delete(e);return this.size=t.size,r}function Ar(e){return this.__data__.get(e)}function Tr(e){return this.__data__.has(e)}function Br(e,t){var r=this.__data__;if(r instanceof rr){var n=r.__data__;if(!Jc||n.length<ie-1)return n.push([e,t]),this.size=++r.size,this;r=this.__data__=new sr(n)}return r.set(e,t),this.size=r.size,this}function Pr(e,t){var r=md(e),n=!r&&vd(e),i=!r&&!n&&yd(e),a=!r&&!n&&!i&&Sd(e),o=r||n||i||a,f=o?P(e.length,cc):[],s=f.length;for(var u in e)!t&&!mc.call(e,u)||o&&("length"==u||i&&("offset"==u||"parent"==u)||a&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||Ca(u,s))||f.push(u);return f}function Or(e){var t=e.length;return t?e[Jn(0,t-1)]:ne}function zr(e,t){return $a(Ni(e),tn(t,0,e.length))}function jr(e){return $a(Ni(e))}function Ur(e,t,r){(r===ne||Kf(e[t],r))&&(r!==ne||t in e)||Jr(e,t,r)}function Xr(e,t,r){var n=e[t];mc.call(e,t)&&Kf(n,r)&&(r!==ne||t in e)||Jr(e,t,r)}function Zr(e,t){for(var r=e.length;r--;)if(Kf(e[r][0],t))return r;return-1}function Gr(e,t,r,n){return bh(e,function(e,i,a){t(n,e,r(e),a)}),n}function $r(e,t){return e&&qi(t,Hs(t),e)}function Qr(e,t){return e&&qi(t,Fs(t),e)}function Jr(e,t,r){"__proto__"==t&&zc?zc(e,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):e[t]=r}function en(e,t){for(var r=-1,n=t.length,i=nc(n),a=null==e;++r<n;)i[r]=a?ne:qs(e,t[r]);return i}function tn(e,t,r){return e===e&&(r!==ne&&(e=e<=r?e:r),t!==ne&&(e=e>=t?e:t)),e}function rn(e,t,r,n,i,a){var o,f=t&ce,u=t&he,c=t&de;if(r&&(o=i?r(e,n,i,a):r(e)),o!==ne)return o;if(!as(e))return e;var h=md(e);if(h){if(o=Ta(e),!f)return Ni(e,o)}else{var d=Eh(e),l=d==Ke||d==Ye;if(yd(e))return Mi(e,f);if(d==$e||d==Le||l&&!i){if(o=u||l?{}:Ba(e),!f)return u?Di(e,Qr(o,e)):Li(e,$r(o,e))}else{if(!xr[d])return i?e:{};o=Ra(e,d,rn,f)}}a||(a=new kr);var p=a.get(e);if(p)return p;a.set(e,o);var b=c?u?ga:ma:u?Fs:Hs,v=h?ne:b(e);return s(v||e,function(n,i){v&&(i=n,n=e[i]),Xr(o,i,rn(n,t,r,i,e,a))}),o}function nn(e){var t=Hs(e);return function(r){return an(r,e,t)}}function an(e,t,r){var n=r.length;if(null==e)return!n;for(e=sc(e);n--;){var i=r[n],a=t[i],o=e[i];if(o===ne&&!(i in e)||!a(o))return!1}return!0}function on(e,t,r){if("function"!=typeof e)throw new hc(oe);return Bh(function(){e.apply(ne,r)},t)}function fn(e,t,r,n){var i=-1,a=d,o=!0,f=e.length,s=[],u=t.length;if(!f)return s;r&&(t=p(t,C(r))),n?(a=l,o=!1):t.length>=ie&&(a=j,o=!1,t=new vr(t));e:for(;++i<f;){var c=e[i],h=null==r?c:r(c);if(c=n||0!==c?c:0,o&&h===h){for(var b=u;b--;)if(t[b]===h)continue e;s.push(c)}else a(t,h,n)||s.push(c)}return s}function sn(e,t){var r=!0;return bh(e,function(e,n,i){return r=!!t(e,n,i)}),r}function un(e,t,r){for(var n=-1,i=e.length;++n<i;){var a=e[n],o=t(a);if(null!=o&&(f===ne?o===o&&!ms(o):r(o,f)))var f=o,s=a}return s}function cn(e,t,r,n){var i=e.length;for(r=ks(r),r<0&&(r=-r>i?0:i+r),n=n===ne||n>i?i:ks(n),n<0&&(n+=i),n=r>n?0:Ss(n);r<n;)e[r++]=t;return e}function hn(e,t){var r=[];return bh(e,function(e,n,i){t(e,n,i)&&r.push(e)}),r}function dn(e,t,r,n,i){var a=-1,o=e.length;for(r||(r=Oa),i||(i=[]);++a<o;){var f=e[a];t>0&&r(f)?t>1?dn(f,t-1,r,n,i):b(i,f):n||(i[i.length]=f)}return i}function ln(e,t){return e&&mh(e,t,Hs)}function pn(e,t){return e&&gh(e,t,Hs)}function bn(e,t){return h(t,function(t){return rs(e[t])})}function vn(e,t){t=ki(t,e);for(var r=0,n=t.length;null!=e&&r<n;)e=e[Qa(t[r++])];return r&&r==n?e:ne}function mn(e,t,r){var n=t(e);return md(e)?n:b(n,r(e))}function gn(e){return null==e?e===ne?nt:Ge:Cc&&Cc in sc(e)?Ma(e):Wa(e)}function yn(e,t){return e>t}function _n(e,t){return null!=e&&mc.call(e,t)}function wn(e,t){return null!=e&&t in sc(e)}function xn(e,t,r){return e>=Yc(t,r)&&e<Kc(t,r)}function kn(e,t,r){for(var n=r?l:d,i=e[0].length,a=e.length,o=a,f=nc(a),s=1/0,u=[];o--;){var c=e[o];o&&t&&(c=p(c,C(t))),s=Yc(c.length,s),f[o]=!r&&(t||i>=120&&c.length>=120)?new vr(o&&c):ne}c=e[0];var h=-1,b=f[0];e:for(;++h<i&&u.length<s;){var v=c[h],m=t?t(v):v;if(v=r||0!==v?v:0,!(b?j(b,m):n(u,m,r))){for(o=a;--o;){var g=f[o];if(!(g?j(g,m):n(e[o],m,r)))continue e}b&&b.push(m),u.push(v)}}return u}function Sn(e,t,r,n){return ln(e,function(e,i,a){t(n,r(e),i,a)}),n}function Mn(e,t,r){t=ki(t,e),e=Ya(e,t);var n=null==e?e:e[Qa(wo(t))];return null==n?ne:o(n,e,r)}function An(e){return os(e)&&gn(e)==Le}function En(e){return os(e)&&gn(e)==ot}function In(e){return os(e)&&gn(e)==Ue}function Tn(e,t,r,n,i){return e===t||(null==e||null==t||!os(e)&&!os(t)?e!==e&&t!==t:Bn(e,t,r,n,Tn,i))}function Bn(e,t,r,n,i,a){var o=md(e),f=md(t),s=o?De:Eh(e),u=f?De:Eh(t);s=s==Le?$e:s,u=u==Le?$e:u;var c=s==$e,h=u==$e,d=s==u;if(d&&yd(e)){if(!yd(t))return!1;o=!0,c=!1}if(d&&!c)return a||(a=new kr),o||Sd(e)?la(e,t,r,n,i,a):pa(e,t,s,r,n,i,a);if(!(r&le)){var l=c&&mc.call(e,"__wrapped__"),p=h&&mc.call(t,"__wrapped__");if(l||p){var b=l?e.value():e,v=p?t.value():t;return a||(a=new kr),i(b,v,r,n,a)}}return!!d&&(a||(a=new kr),ba(e,t,r,n,i,a))}function Rn(e){return os(e)&&Eh(e)==Xe}function Pn(e,t,r,n){var i=r.length,a=i,o=!n;if(null==e)return!a;for(e=sc(e);i--;){var f=r[i];if(o&&f[2]?f[1]!==e[f[0]]:!(f[0]in e))return!1}for(;++i<a;){f=r[i];var s=f[0],u=e[s],c=f[1];if(o&&f[2]){if(u===ne&&!(s in e))return!1}else{var h=new kr;if(n)var d=n(u,c,s,e,t,h);if(!(d===ne?Tn(c,u,le|pe,n,h):d))return!1}}return!0}function On(e){return!(!as(e)||La(e))&&(rs(e)?kc:Wt).test(Ja(e))}function Cn(e){return os(e)&&gn(e)==Je}function zn(e){return os(e)&&Eh(e)==et}function jn(e){return os(e)&&is(e.length)&&!!wr[gn(e)]}function Nn(e){return"function"==typeof e?e:null==e?Ru:"object"==typeof e?md(e)?Un(e[0],e[1]):Fn(e):Lu(e)}function qn(e){if(!Da(e))return Wc(e);var t=[];for(var r in sc(e))mc.call(e,r)&&"constructor"!=r&&t.push(r);return t}function Ln(e){if(!as(e))return Va(e);var t=Da(e),r=[];for(var n in e)("constructor"!=n||!t&&mc.call(e,n))&&r.push(n);return r}function Dn(e,t){return e<t}function Hn(e,t){var r=-1,n=Yf(e)?nc(e.length):[];return bh(e,function(e,i,a){n[++r]=t(e,i,a)}),n}function Fn(e){var t=ka(e);return 1==t.length&&t[0][2]?Fa(t[0][0],t[0][1]):function(r){return r===e||Pn(r,e,t)}}function Un(e,t){return ja(e)&&Ha(t)?Fa(Qa(e),t):function(r){var n=qs(r,e);return n===ne&&n===t?Ds(r,e):Tn(t,n,le|pe)}}function Vn(e,t,r,n,i){e!==t&&mh(t,function(a,o){if(as(a))i||(i=new kr),Wn(e,t,o,r,Vn,n,i);else{var f=n?n(e[o],a,o+"",e,t,i):ne;f===ne&&(f=a),Ur(e,o,f)}},Fs)}function Wn(e,t,r,n,i,a,o){var f=e[r],s=t[r],u=o.get(s);if(u)return void Ur(e,r,u);var c=a?a(f,s,r+"",e,t,o):ne,h=c===ne;if(h){var d=md(s),l=!d&&yd(s),p=!d&&!l&&Sd(s);c=s,d||l||p?md(f)?c=f:Xf(f)?c=Ni(f):l?(h=!1,c=Mi(s,!0)):p?(h=!1,c=Pi(s,!0)):c=[]:ps(s)||vd(s)?(c=f,vd(f)?c=As(f):(!as(f)||n&&rs(f))&&(c=Ba(s))):h=!1}h&&(o.set(s,c),i(c,s,n,a,o),o.delete(s)),Ur(e,r,c)}function Kn(e,t){var r=e.length;if(r)return t+=t<0?r:0,Ca(t,r)?e[t]:ne}function Yn(e,t,r){var n=-1;return t=p(t.length?t:[Ru],C(wa())),B(Hn(e,function(e,r,i){return{criteria:p(t,function(t){return t(e)}),index:++n,value:e}}),function(e,t){return Ci(e,t,r)})}function Xn(e,t){return Zn(e,t,function(t,r){return Ds(e,r)})}function Zn(e,t,r){for(var n=-1,i=t.length,a={};++n<i;){var o=t[n],f=vn(e,o);r(f,o)&&ai(a,ki(o,e),f)}return a}function Gn(e){return function(t){return vn(t,e)}}function $n(e,t,r,n){var i=n?S:k,a=-1,o=t.length,f=e;for(e===t&&(t=Ni(t)),r&&(f=p(e,C(r)));++a<o;)for(var s=0,u=t[a],c=r?r(u):u;(s=i(f,c,s,n))>-1;)f!==e&&Rc.call(f,s,1),Rc.call(e,s,1);return e}function Qn(e,t){for(var r=e?t.length:0,n=r-1;r--;){var i=t[r];if(r==n||i!==a){var a=i;Ca(i)?Rc.call(e,i,1):bi(e,i)}}return e}function Jn(e,t){return e+Dc(Gc()*(t-e+1))}function ei(e,t,r,n){for(var i=-1,a=Kc(Lc((t-e)/(r||1)),0),o=nc(a);a--;)o[n?a:++i]=e,e+=r;return o}function ti(e,t){var r="";if(!e||t<1||t>Pe)return r;do{t%2&&(r+=e),(t=Dc(t/2))&&(e+=e)}while(t);return r}function ri(e,t){return Rh(Ka(e,t,Ru),e+"")}function ni(e){return Or(eu(e))}function ii(e,t){var r=eu(e);return $a(r,tn(t,0,r.length))}function ai(e,t,r,n){if(!as(e))return e;t=ki(t,e);for(var i=-1,a=t.length,o=a-1,f=e;null!=f&&++i<a;){var s=Qa(t[i]),u=r;if(i!=o){var c=f[s];u=n?n(c,s,f):ne,u===ne&&(u=as(c)?c:Ca(t[i+1])?[]:{})}Xr(f,s,u),f=f[s]}return e}function oi(e){return $a(eu(e))}function fi(e,t,r){var n=-1,i=e.length;t<0&&(t=-t>i?0:i+t),r=r>i?i:r,r<0&&(r+=i),i=t>r?0:r-t>>>0,t>>>=0;for(var a=nc(i);++n<i;)a[n]=e[n+t];return a}function si(e,t){var r;return bh(e,function(e,n,i){return!(r=t(e,n,i))}),!!r}function ui(e,t,r){var n=0,i=null==e?n:e.length;if("number"==typeof t&&t===t&&i<=Ne){for(;n<i;){var a=n+i>>>1,o=e[a];null!==o&&!ms(o)&&(r?o<=t:o<t)?n=a+1:i=a}return i}return ci(e,t,Ru,r)}function ci(e,t,r,n){t=r(t);for(var i=0,a=null==e?0:e.length,o=t!==t,f=null===t,s=ms(t),u=t===ne;i<a;){var c=Dc((i+a)/2),h=r(e[c]),d=h!==ne,l=null===h,p=h===h,b=ms(h);if(o)var v=n||p;else v=u?p&&(n||d):f?p&&d&&(n||!l):s?p&&d&&!l&&(n||!b):!l&&!b&&(n?h<=t:h<t);v?i=c+1:a=c}return Yc(a,je)}function hi(e,t){for(var r=-1,n=e.length,i=0,a=[];++r<n;){var o=e[r],f=t?t(o):o;if(!r||!Kf(f,s)){var s=f;a[i++]=0===o?0:o}}return a}function di(e){return"number"==typeof e?e:ms(e)?Ce:+e}function li(e){if("string"==typeof e)return e;if(md(e))return p(e,li)+"";if(ms(e))return lh?lh.call(e):"";var t=e+"";return"0"==t&&1/e==-Re?"-0":t}function pi(e,t,r){var n=-1,i=d,a=e.length,o=!0,f=[],s=f;if(r)o=!1,i=l;else if(a>=ie){var u=t?null:kh(e);if(u)return X(u);o=!1,i=j,s=new vr}else s=t?[]:f;e:for(;++n<a;){var c=e[n],h=t?t(c):c;if(c=r||0!==c?c:0,o&&h===h){for(var p=s.length;p--;)if(s[p]===h)continue e;t&&s.push(h),f.push(c)}else i(s,h,r)||(s!==f&&s.push(h),f.push(c))}return f}function bi(e,t){return t=ki(t,e),null==(e=Ya(e,t))||delete e[Qa(wo(t))]}function vi(e,t,r,n){return ai(e,t,r(vn(e,t)),n)}function mi(e,t,r,n){for(var i=e.length,a=n?i:-1;(n?a--:++a<i)&&t(e[a],a,e););return r?fi(e,n?0:a,n?a+1:i):fi(e,n?a+1:0,n?i:a)}function gi(e,t){var r=e;return r instanceof I&&(r=r.value()),v(t,function(e,t){return t.func.apply(t.thisArg,b([e],t.args))},r)}function yi(e,t,r){var n=e.length;if(n<2)return n?pi(e[0]):[];for(var i=-1,a=nc(n);++i<n;)for(var o=e[i],f=-1;++f<n;)f!=i&&(a[i]=fn(a[i]||o,e[f],t,r));return pi(dn(a,1),t,r)}function _i(e,t,r){for(var n=-1,i=e.length,a=t.length,o={};++n<i;){var f=n<a?t[n]:ne;r(o,e[n],f)}return o}function wi(e){return Xf(e)?e:[]}function xi(e){return"function"==typeof e?e:Ru}function ki(e,t){return md(e)?e:ja(e,t)?[e]:Ph(Is(e))}function Si(e,t,r){var n=e.length;return r=r===ne?n:r,!t&&r>=n?e:fi(e,t,r)}function Mi(e,t){if(t)return e.slice();var r=e.length,n=Ec?Ec(r):new e.constructor(r);return e.copy(n),n}function Ai(e){var t=new e.constructor(e.byteLength);return new Ac(t).set(new Ac(e)),t}function Ei(e,t){var r=t?Ai(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}function Ii(e,t,r){return v(t?r(W(e),ce):W(e),i,new e.constructor)}function Ti(e){var t=new e.constructor(e.source,Ft.exec(e));return t.lastIndex=e.lastIndex,t}function Bi(e,t,r){return v(t?r(X(e),ce):X(e),a,new e.constructor)}function Ri(e){return dh?sc(dh.call(e)):{}}function Pi(e,t){var r=t?Ai(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}function Oi(e,t){if(e!==t){var r=e!==ne,n=null===e,i=e===e,a=ms(e),o=t!==ne,f=null===t,s=t===t,u=ms(t);if(!f&&!u&&!a&&e>t||a&&o&&s&&!f&&!u||n&&o&&s||!r&&s||!i)return 1;if(!n&&!a&&!u&&e<t||u&&r&&i&&!n&&!a||f&&r&&i||!o&&i||!s)return-1}return 0}function Ci(e,t,r){for(var n=-1,i=e.criteria,a=t.criteria,o=i.length,f=r.length;++n<o;){var s=Oi(i[n],a[n]);if(s){if(n>=f)return s;return s*("desc"==r[n]?-1:1)}}return e.index-t.index}function zi(e,t,r,n){for(var i=-1,a=e.length,o=r.length,f=-1,s=t.length,u=Kc(a-o,0),c=nc(s+u),h=!n;++f<s;)c[f]=t[f];for(;++i<o;)(h||i<a)&&(c[r[i]]=e[i]);for(;u--;)c[f++]=e[i++];return c}function ji(e,t,r,n){for(var i=-1,a=e.length,o=-1,f=r.length,s=-1,u=t.length,c=Kc(a-f,0),h=nc(c+u),d=!n;++i<c;)h[i]=e[i];for(var l=i;++s<u;)h[l+s]=t[s];for(;++o<f;)(d||i<a)&&(h[l+r[o]]=e[i++]);return h}function Ni(e,t){var r=-1,n=e.length;for(t||(t=nc(n));++r<n;)t[r]=e[r];return t}function qi(e,t,r,n){var i=!r;r||(r={});for(var a=-1,o=t.length;++a<o;){var f=t[a],s=n?n(r[f],e[f],f,r,e):ne;s===ne&&(s=e[f]),i?Jr(r,f,s):Xr(r,f,s)}return r}function Li(e,t){return qi(e,Mh(e),t)}function Di(e,t){return qi(e,Ah(e),t)}function Hi(e,t){return function(r,n){var i=md(r)?f:Gr,a=t?t():{};return i(r,e,wa(n,2),a)}}function Fi(e){return ri(function(t,r){var n=-1,i=r.length,a=i>1?r[i-1]:ne,o=i>2?r[2]:ne;for(a=e.length>3&&"function"==typeof a?(i--,a):ne,o&&za(r[0],r[1],o)&&(a=i<3?ne:a,i=1),t=sc(t);++n<i;){var f=r[n];f&&e(t,f,n,a)}return t})}function Ui(e,t){return function(r,n){if(null==r)return r;if(!Yf(r))return e(r,n);for(var i=r.length,a=t?i:-1,o=sc(r);(t?a--:++a<i)&&!1!==n(o[a],a,o););return r}}function Vi(e){return function(t,r,n){for(var i=-1,a=sc(t),o=n(t),f=o.length;f--;){var s=o[e?f:++i];if(!1===r(a[s],s,a))break}return t}}function Wi(e,t,r){function n(){return(this&&this!==Rr&&this instanceof n?a:e).apply(i?r:this,arguments)}var i=t&be,a=Xi(e);return n}function Ki(e){return function(t){t=Is(t);var r=F(t)?J(t):ne,n=r?r[0]:t.charAt(0),i=r?Si(r,1).join(""):t.slice(1);return n[e]()+i}}function Yi(e){return function(t){return v(Au(ou(t).replace(lr,"")),e,"")}}function Xi(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=ph(e.prototype),n=e.apply(r,t);return as(n)?n:r}}function Zi(e,t,r){function n(){for(var a=arguments.length,f=nc(a),s=a,u=_a(n);s--;)f[s]=arguments[s];var c=a<3&&f[0]!==u&&f[a-1]!==u?[]:Y(f,u);return(a-=c.length)<r?oa(e,t,Qi,n.placeholder,ne,f,c,ne,ne,r-a):o(this&&this!==Rr&&this instanceof n?i:e,this,f)}var i=Xi(e);return n}function Gi(e){return function(t,r,n){var i=sc(t);if(!Yf(t)){var a=wa(r,3);t=Hs(t),r=function(e){return a(i[e],e,i)}}var o=e(t,r,n);return o>-1?i[a?t[o]:o]:ne}}function $i(e){return va(function(t){var r=t.length,n=r,i=y.prototype.thru;for(e&&t.reverse();n--;){var a=t[n];if("function"!=typeof a)throw new hc(oe);if(i&&!o&&"wrapper"==ya(a))var o=new y([],!0)}for(n=o?n:r;++n<r;){a=t[n];var f=ya(a),s="wrapper"==f?Sh(a):ne;o=s&&qa(s[0])&&s[1]==(xe|ge|_e|ke)&&!s[4].length&&1==s[9]?o[ya(s[0])].apply(o,s[3]):1==a.length&&qa(a)?o[f]():o.thru(a)}return function(){var e=arguments,n=e[0];if(o&&1==e.length&&md(n))return o.plant(n).value();for(var i=0,a=r?t[i].apply(this,e):n;++i<r;)a=t[i].call(this,a);return a}})}function Qi(e,t,r,n,i,a,o,f,s,u){function c(){for(var m=arguments.length,g=nc(m),y=m;y--;)g[y]=arguments[y];if(p)var _=_a(c),w=L(g,_);if(n&&(g=zi(g,n,i,p)),a&&(g=ji(g,a,o,p)),m-=w,p&&m<u){var x=Y(g,_);return oa(e,t,Qi,c.placeholder,r,g,x,f,s,u-m)}var k=d?r:this,S=l?k[e]:e;return m=g.length,f?g=Xa(g,f):b&&m>1&&g.reverse(),h&&s<m&&(g.length=s),this&&this!==Rr&&this instanceof c&&(S=v||Xi(S)),S.apply(k,g)}var h=t&xe,d=t&be,l=t&ve,p=t&(ge|ye),b=t&Se,v=l?ne:Xi(e);return c}function Ji(e,t){return function(r,n){return Sn(r,e,t(n),{})}}function ea(e,t){return function(r,n){var i;if(r===ne&&n===ne)return t;if(r!==ne&&(i=r),n!==ne){if(i===ne)return n;"string"==typeof r||"string"==typeof n?(r=li(r),n=li(n)):(r=di(r),n=di(n)),i=e(r,n)}return i}}function ta(e){return va(function(t){return t=p(t,C(wa())),ri(function(r){var n=this;return e(t,function(e){return o(e,n,r)})})})}function ra(e,t){t=t===ne?" ":li(t);var r=t.length;if(r<2)return r?ti(t,e):t;var n=ti(t,Lc(e/Q(t)));return F(t)?Si(J(n),0,e).join(""):n.slice(0,e)}function na(e,t,r,n){function i(){for(var t=-1,s=arguments.length,u=-1,c=n.length,h=nc(c+s),d=this&&this!==Rr&&this instanceof i?f:e;++u<c;)h[u]=n[u];for(;s--;)h[u++]=arguments[++t];return o(d,a?r:this,h)}var a=t&be,f=Xi(e);return i}function ia(e){return function(t,r,n){return n&&"number"!=typeof n&&za(t,r,n)&&(r=n=ne),t=xs(t),r===ne?(r=t,t=0):r=xs(r),n=n===ne?t<r?1:-1:xs(n),ei(t,r,n,e)}}function aa(e){return function(t,r){return"string"==typeof t&&"string"==typeof r||(t=Ms(t),r=Ms(r)),e(t,r)}}function oa(e,t,r,n,i,a,o,f,s,u){var c=t&ge,h=c?o:ne,d=c?ne:o,l=c?a:ne,p=c?ne:a;t|=c?_e:we,(t&=~(c?we:_e))&me||(t&=~(be|ve));var b=[e,t,i,l,h,p,d,f,s,u],v=r.apply(ne,b);return qa(e)&&Th(v,b),v.placeholder=n,Za(v,e,t)}function fa(e){var t=fc[e];return function(e,r){if(e=Ms(e),r=null==r?0:Yc(ks(r),292)){var n=(Is(e)+"e").split("e");return n=(Is(t(n[0]+"e"+(+n[1]+r)))+"e").split("e"),+(n[0]+"e"+(+n[1]-r))}return t(e)}}function sa(e){return function(t){var r=Eh(t);return r==Xe?W(t):r==et?Z(t):O(t,e(t))}}function ua(e,t,r,n,i,a,o,f){var s=t&ve;if(!s&&"function"!=typeof e)throw new hc(oe);var u=n?n.length:0;if(u||(t&=~(_e|we),n=i=ne),o=o===ne?o:Kc(ks(o),0),f=f===ne?f:ks(f),u-=i?i.length:0,t&we){var c=n,h=i;n=i=ne}var d=s?ne:Sh(e),l=[e,t,r,n,i,c,h,a,o,f];if(d&&Ua(l,d),e=l[0],t=l[1],r=l[2],n=l[3],i=l[4],f=l[9]=l[9]===ne?s?0:e.length:Kc(l[9]-u,0),!f&&t&(ge|ye)&&(t&=~(ge|ye)),t&&t!=be)p=t==ge||t==ye?Zi(e,t,f):t!=_e&&t!=(be|_e)||i.length?Qi.apply(ne,l):na(e,t,r,n);else var p=Wi(e,t,r);return Za((d?yh:Th)(p,l),e,t)}function ca(e,t,r,n){return e===ne||Kf(e,pc[r])&&!mc.call(n,r)?t:e}function ha(e,t,r,n,i,a){return as(e)&&as(t)&&(a.set(t,e),Vn(e,t,ne,ha,a),a.delete(t)),e}function da(e){return ps(e)?ne:e}function la(e,t,r,n,i,a){var o=r&le,f=e.length,s=t.length;if(f!=s&&!(o&&s>f))return!1;var u=a.get(e);if(u&&a.get(t))return u==t;var c=-1,h=!0,d=r&pe?new vr:ne;for(a.set(e,t),a.set(t,e);++c<f;){var l=e[c],p=t[c];if(n)var b=o?n(p,l,c,t,e,a):n(l,p,c,e,t,a);if(b!==ne){if(b)continue;h=!1;break}if(d){if(!g(t,function(e,t){if(!j(d,t)&&(l===e||i(l,e,r,n,a)))return d.push(t)})){h=!1;break}}else if(l!==p&&!i(l,p,r,n,a)){h=!1;break}}return a.delete(e),a.delete(t),h}function pa(e,t,r,n,i,a,o){switch(r){case ft:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case ot:return!(e.byteLength!=t.byteLength||!a(new Ac(e),new Ac(t)));case Fe:case Ue:case Ze:return Kf(+e,+t);case We:return e.name==t.name&&e.message==t.message;case Je:case tt:return e==t+"";case Xe:var f=W;case et:var s=n&le;if(f||(f=X),e.size!=t.size&&!s)return!1;var u=o.get(e);if(u)return u==t;n|=pe,o.set(e,t);var c=la(f(e),f(t),n,i,a,o);return o.delete(e),c;case rt:if(dh)return dh.call(e)==dh.call(t)}return!1}function ba(e,t,r,n,i,a){var o=r&le,f=ma(e),s=f.length;if(s!=ma(t).length&&!o)return!1;for(var u=s;u--;){var c=f[u];if(!(o?c in t:mc.call(t,c)))return!1}var h=a.get(e);if(h&&a.get(t))return h==t;var d=!0;a.set(e,t),a.set(t,e);for(var l=o;++u<s;){c=f[u];var p=e[c],b=t[c];if(n)var v=o?n(b,p,c,t,e,a):n(p,b,c,e,t,a);if(!(v===ne?p===b||i(p,b,r,n,a):v)){d=!1;break}l||(l="constructor"==c)}if(d&&!l){var m=e.constructor,g=t.constructor;m!=g&&"constructor"in e&&"constructor"in t&&!("function"==typeof m&&m instanceof m&&"function"==typeof g&&g instanceof g)&&(d=!1)}return a.delete(e),a.delete(t),d}function va(e){return Rh(Ka(e,ne,lo),e+"")}function ma(e){return mn(e,Hs,Mh)}function ga(e){return mn(e,Fs,Ah)}function ya(e){for(var t=e.name+"",r=ah[t],n=mc.call(ah,t)?r.length:0;n--;){var i=r[n],a=i.func;if(null==a||a==e)return i.name}return t}function _a(e){return(mc.call(r,"placeholder")?r:e).placeholder}function wa(){var e=r.iteratee||Pu;return e=e===Pu?Nn:e,arguments.length?e(arguments[0],arguments[1]):e}function xa(e,t){var r=e.__data__;return Na(t)?r["string"==typeof t?"string":"hash"]:r.map}function ka(e){for(var t=Hs(e),r=t.length;r--;){var n=t[r],i=e[n];t[r]=[n,i,Ha(i)]}return t}function Sa(e,t){var r=H(e,t);return On(r)?r:ne}function Ma(e){var t=mc.call(e,Cc),r=e[Cc];try{e[Cc]=ne;var n=!0}catch(e){}var i=_c.call(e);return n&&(t?e[Cc]=r:delete e[Cc]),i}function Aa(e,t,r){for(var n=-1,i=r.length;++n<i;){var a=r[n],o=a.size;switch(a.type){case"drop":e+=o;break;case"dropRight":t-=o;break;case"take":t=Yc(t,e+o);break;case"takeRight":e=Kc(e,t-o)}}return{start:e,end:t}}function Ea(e){var t=e.match(Nt);return t?t[1].split(qt):[]}function Ia(e,t,r){t=ki(t,e);for(var n=-1,i=t.length,a=!1;++n<i;){var o=Qa(t[n]);if(!(a=null!=e&&r(e,o)))break;e=e[o]}return a||++n!=i?a:!!(i=null==e?0:e.length)&&is(i)&&Ca(o,i)&&(md(e)||vd(e))}function Ta(e){var t=e.length,r=e.constructor(t);return t&&"string"==typeof e[0]&&mc.call(e,"index")&&(r.index=e.index,r.input=e.input),r}function Ba(e){return"function"!=typeof e.constructor||Da(e)?{}:ph(Ic(e))}function Ra(e,t,r,n){var i=e.constructor;switch(t){case ot:return Ai(e);case Fe:case Ue:return new i(+e);case ft:return Ei(e,n);case st:case ut:case ct:case ht:case dt:case lt:case pt:case bt:case vt:return Pi(e,n);case Xe:return Ii(e,n,r);case Ze:case tt:return new i(e);case Je:return Ti(e);case et:return Bi(e,n,r);case rt:return Ri(e)}}function Pa(e,t){var r=t.length;if(!r)return e;var n=r-1;return t[n]=(r>1?"& ":"")+t[n],t=t.join(r>2?", ":" "),e.replace(jt,"{\n/* [wrapped with "+t+"] */\n")}function Oa(e){return md(e)||vd(e)||!!(Pc&&e&&e[Pc])}function Ca(e,t){return!!(t=null==t?Pe:t)&&("number"==typeof e||Yt.test(e))&&e>-1&&e%1==0&&e<t}function za(e,t,r){if(!as(r))return!1;var n=typeof t;return!!("number"==n?Yf(r)&&Ca(t,r.length):"string"==n&&t in r)&&Kf(r[t],e)}function ja(e,t){if(md(e))return!1;var r=typeof e;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!ms(e))||(It.test(e)||!Et.test(e)||null!=t&&e in sc(t))}function Na(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}function qa(e){var t=ya(e),n=r[t];if("function"!=typeof n||!(t in I.prototype))return!1;if(e===n)return!0;var i=Sh(n);return!!i&&e===i[0]}function La(e){return!!yc&&yc in e}function Da(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||pc)}function Ha(e){return e===e&&!as(e)}function Fa(e,t){return function(r){return null!=r&&(r[e]===t&&(t!==ne||e in sc(r)))}}function Ua(e,t){var r=e[1],n=t[1],i=r|n,a=i<(be|ve|xe),o=n==xe&&r==ge||n==xe&&r==ke&&e[7].length<=t[8]||n==(xe|ke)&&t[7].length<=t[8]&&r==ge;if(!a&&!o)return e;n&be&&(e[2]=t[2],i|=r&be?0:me);var f=t[3];if(f){var s=e[3];e[3]=s?zi(s,f,t[4]):f,e[4]=s?Y(e[3],ue):t[4]}return f=t[5],f&&(s=e[5],e[5]=s?ji(s,f,t[6]):f,e[6]=s?Y(e[5],ue):t[6]),f=t[7],f&&(e[7]=f),n&xe&&(e[8]=null==e[8]?t[8]:Yc(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=i,e}function Va(e){var t=[];if(null!=e)for(var r in sc(e))t.push(r);return t}function Wa(e){return _c.call(e)}function Ka(e,t,r){return t=Kc(t===ne?e.length-1:t,0),function(){for(var n=arguments,i=-1,a=Kc(n.length-t,0),f=nc(a);++i<a;)f[i]=n[t+i];i=-1;for(var s=nc(t+1);++i<t;)s[i]=n[i];return s[t]=r(f),o(e,this,s)}}function Ya(e,t){return t.length<2?e:vn(e,fi(t,0,-1))}function Xa(e,t){for(var r=e.length,n=Yc(t.length,r),i=Ni(e);n--;){var a=t[n];e[n]=Ca(a,r)?i[a]:ne}return e}function Za(e,t,r){var n=t+"";return Rh(e,Pa(n,eo(Ea(n),r)))}function Ga(e){var t=0,r=0;return function(){var n=Xc(),i=Ie-(n-r);if(r=n,i>0){if(++t>=Ee)return arguments[0]}else t=0;return e.apply(ne,arguments)}}function $a(e,t){var r=-1,n=e.length,i=n-1;for(t=t===ne?n:t;++r<t;){var a=Jn(r,i),o=e[a];e[a]=e[r],e[r]=o}return e.length=t,e}function Qa(e){if("string"==typeof e||ms(e))return e;var t=e+"";return"0"==t&&1/e==-Re?"-0":t}function Ja(e){if(null!=e){try{return vc.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function eo(e,t){return s(qe,function(r){var n="_."+r[0];t&r[1]&&!d(e,n)&&e.push(n)}),e.sort()}function to(e){if(e instanceof I)return e.clone();var t=new y(e.__wrapped__,e.__chain__);return t.__actions__=Ni(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}function ro(e,t,r){t=(r?za(e,t,r):t===ne)?1:Kc(ks(t),0);var n=null==e?0:e.length;if(!n||t<1)return[];for(var i=0,a=0,o=nc(Lc(n/t));i<n;)o[a++]=fi(e,i,i+=t);return o}function no(e){for(var t=-1,r=null==e?0:e.length,n=0,i=[];++t<r;){var a=e[t];a&&(i[n++]=a)}return i}function io(){var e=arguments.length;if(!e)return[];for(var t=nc(e-1),r=arguments[0],n=e;n--;)t[n-1]=arguments[n];return b(md(r)?Ni(r):[r],dn(t,1))}function ao(e,t,r){var n=null==e?0:e.length;return n?(t=r||t===ne?1:ks(t),fi(e,t<0?0:t,n)):[]}function oo(e,t,r){var n=null==e?0:e.length;return n?(t=r||t===ne?1:ks(t),t=n-t,fi(e,0,t<0?0:t)):[]}function fo(e,t){return e&&e.length?mi(e,wa(t,3),!0,!0):[]}function so(e,t){return e&&e.length?mi(e,wa(t,3),!0):[]}function uo(e,t,r,n){var i=null==e?0:e.length;return i?(r&&"number"!=typeof r&&za(e,t,r)&&(r=0,n=i),cn(e,t,r,n)):[]}function co(e,t,r){var n=null==e?0:e.length;if(!n)return-1;var i=null==r?0:ks(r);return i<0&&(i=Kc(n+i,0)),x(e,wa(t,3),i)}function ho(e,t,r){var n=null==e?0:e.length;if(!n)return-1;var i=n-1;return r!==ne&&(i=ks(r),i=r<0?Kc(n+i,0):Yc(i,n-1)),x(e,wa(t,3),i,!0)}function lo(e){return(null==e?0:e.length)?dn(e,1):[]}function po(e){return(null==e?0:e.length)?dn(e,Re):[]}function bo(e,t){return(null==e?0:e.length)?(t=t===ne?1:ks(t),dn(e,t)):[]}function vo(e){for(var t=-1,r=null==e?0:e.length,n={};++t<r;){var i=e[t];n[i[0]]=i[1]}return n}function mo(e){return e&&e.length?e[0]:ne}function go(e,t,r){var n=null==e?0:e.length;if(!n)return-1;var i=null==r?0:ks(r);return i<0&&(i=Kc(n+i,0)),k(e,t,i)}function yo(e){return(null==e?0:e.length)?fi(e,0,-1):[]}function _o(e,t){return null==e?"":Vc.call(e,t)}function wo(e){var t=null==e?0:e.length;return t?e[t-1]:ne}function xo(e,t,r){var n=null==e?0:e.length;if(!n)return-1;var i=n;return r!==ne&&(i=ks(r),i=i<0?Kc(n+i,0):Yc(i,n-1)),t===t?$(e,t,i):x(e,M,i,!0)}function ko(e,t){return e&&e.length?Kn(e,ks(t)):ne}function So(e,t){return e&&e.length&&t&&t.length?$n(e,t):e}function Mo(e,t,r){return e&&e.length&&t&&t.length?$n(e,t,wa(r,2)):e}function Ao(e,t,r){return e&&e.length&&t&&t.length?$n(e,t,ne,r):e}function Eo(e,t){var r=[];if(!e||!e.length)return r;var n=-1,i=[],a=e.length;for(t=wa(t,3);++n<a;){var o=e[n];t(o,n,e)&&(r.push(o),i.push(n))}return Qn(e,i),r}function Io(e){return null==e?e:$c.call(e)}function To(e,t,r){var n=null==e?0:e.length;return n?(r&&"number"!=typeof r&&za(e,t,r)?(t=0,r=n):(t=null==t?0:ks(t),r=r===ne?n:ks(r)),fi(e,t,r)):[]}function Bo(e,t){return ui(e,t)}function Ro(e,t,r){return ci(e,t,wa(r,2))}function Po(e,t){var r=null==e?0:e.length;if(r){var n=ui(e,t);if(n<r&&Kf(e[n],t))return n}return-1}function Oo(e,t){return ui(e,t,!0)}function Co(e,t,r){return ci(e,t,wa(r,2),!0)}function zo(e,t){if(null==e?0:e.length){var r=ui(e,t,!0)-1;if(Kf(e[r],t))return r}return-1}function jo(e){return e&&e.length?hi(e):[]}function No(e,t){return e&&e.length?hi(e,wa(t,2)):[]}function qo(e){var t=null==e?0:e.length;return t?fi(e,1,t):[]}function Lo(e,t,r){return e&&e.length?(t=r||t===ne?1:ks(t),fi(e,0,t<0?0:t)):[]}function Do(e,t,r){var n=null==e?0:e.length;return n?(t=r||t===ne?1:ks(t),t=n-t,fi(e,t<0?0:t,n)):[]}function Ho(e,t){return e&&e.length?mi(e,wa(t,3),!1,!0):[]}function Fo(e,t){return e&&e.length?mi(e,wa(t,3)):[]}function Uo(e){return e&&e.length?pi(e):[]}function Vo(e,t){return e&&e.length?pi(e,wa(t,2)):[]}function Wo(e,t){return t="function"==typeof t?t:ne,e&&e.length?pi(e,ne,t):[]}function Ko(e){if(!e||!e.length)return[];var t=0;return e=h(e,function(e){if(Xf(e))return t=Kc(e.length,t),!0}),P(t,function(t){return p(e,E(t))})}function Yo(e,t){if(!e||!e.length)return[];var r=Ko(e);return null==t?r:p(r,function(e){return o(t,ne,e)})}function Xo(e,t){return _i(e||[],t||[],Xr)}function Zo(e,t){return _i(e||[],t||[],ai)}function Go(e){var t=r(e);return t.__chain__=!0,t}function $o(e,t){return t(e),e}function Qo(e,t){return t(e)}function Jo(){return Go(this)}function ef(){return new y(this.value(),this.__chain__)}function tf(){this.__values__===ne&&(this.__values__=ws(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?ne:this.__values__[this.__index__++]}}function rf(){return this}function nf(e){for(var t,r=this;r instanceof n;){var i=to(r);i.__index__=0,i.__values__=ne,t?a.__wrapped__=i:t=i;var a=i;r=r.__wrapped__}return a.__wrapped__=e,t}function af(){var e=this.__wrapped__;if(e instanceof I){var t=e;return this.__actions__.length&&(t=new I(this)),t=t.reverse(),t.__actions__.push({func:Qo,args:[Io],thisArg:ne}),new y(t,this.__chain__)}return this.thru(Io)}function of(){return gi(this.__wrapped__,this.__actions__)}function ff(e,t,r){var n=md(e)?c:sn;return r&&za(e,t,r)&&(t=ne),n(e,wa(t,3))}function sf(e,t){return(md(e)?h:hn)(e,wa(t,3))}function uf(e,t){return dn(bf(e,t),1)}function cf(e,t){return dn(bf(e,t),Re)}function hf(e,t,r){return r=r===ne?1:ks(r),dn(bf(e,t),r)}function df(e,t){return(md(e)?s:bh)(e,wa(t,3))}function lf(e,t){return(md(e)?u:vh)(e,wa(t,3))}function pf(e,t,r,n){e=Yf(e)?e:eu(e),r=r&&!n?ks(r):0;var i=e.length;return r<0&&(r=Kc(i+r,0)),vs(e)?r<=i&&e.indexOf(t,r)>-1:!!i&&k(e,t,r)>-1}function bf(e,t){return(md(e)?p:Hn)(e,wa(t,3))}function vf(e,t,r,n){return null==e?[]:(md(t)||(t=null==t?[]:[t]),r=n?ne:r,md(r)||(r=null==r?[]:[r]),Yn(e,t,r))}function mf(e,t,r){var n=md(e)?v:T,i=arguments.length<3;return n(e,wa(t,4),r,i,bh)}function gf(e,t,r){var n=md(e)?m:T,i=arguments.length<3;return n(e,wa(t,4),r,i,vh)}function yf(e,t){return(md(e)?h:hn)(e,Of(wa(t,3)))}function _f(e){return(md(e)?Or:ni)(e)}function wf(e,t,r){return t=(r?za(e,t,r):t===ne)?1:ks(t),(md(e)?zr:ii)(e,t)}function xf(e){return(md(e)?jr:oi)(e)}function kf(e){if(null==e)return 0;if(Yf(e))return vs(e)?Q(e):e.length;var t=Eh(e);return t==Xe||t==et?e.size:qn(e).length}function Sf(e,t,r){var n=md(e)?g:si;return r&&za(e,t,r)&&(t=ne),n(e,wa(t,3))}function Mf(e,t){if("function"!=typeof t)throw new hc(oe);return e=ks(e),function(){if(--e<1)return t.apply(this,arguments)}}function Af(e,t,r){return t=r?ne:t,t=e&&null==t?e.length:t,ua(e,xe,ne,ne,ne,ne,t)}function Ef(e,t){var r;if("function"!=typeof t)throw new hc(oe);return e=ks(e),function(){return--e>0&&(r=t.apply(this,arguments)),e<=1&&(t=ne),r}}function If(e,t,r){t=r?ne:t;var n=ua(e,ge,ne,ne,ne,ne,ne,t);return n.placeholder=If.placeholder,n}function Tf(e,t,r){t=r?ne:t;var n=ua(e,ye,ne,ne,ne,ne,ne,t);return n.placeholder=Tf.placeholder,n}function Bf(e,t,r){function n(t){var r=d,n=l;return d=l=ne,g=t,b=e.apply(n,r)}function i(e){return g=e,v=Bh(f,t),y?n(e):b}function a(e){var r=e-m,n=e-g,i=t-r;return _?Yc(i,p-n):i}function o(e){var r=e-m,n=e-g;return m===ne||r>=t||r<0||_&&n>=p}function f(){var e=ad();if(o(e))return s(e);v=Bh(f,a(e))}function s(e){return v=ne,w&&d?n(e):(d=l=ne,b)}function u(){v!==ne&&xh(v),g=0,d=m=l=v=ne}function c(){return v===ne?b:s(ad())}function h(){var e=ad(),r=o(e);if(d=arguments,l=this,m=e,r){if(v===ne)return i(m);if(_)return v=Bh(f,t),n(m)}return v===ne&&(v=Bh(f,t)),b}var d,l,p,b,v,m,g=0,y=!1,_=!1,w=!0;if("function"!=typeof e)throw new hc(oe);return t=Ms(t)||0,as(r)&&(y=!!r.leading,_="maxWait"in r,p=_?Kc(Ms(r.maxWait)||0,t):p,w="trailing"in r?!!r.trailing:w),h.cancel=u,h.flush=c,h}function Rf(e){return ua(e,Se)}function Pf(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new hc(oe);var r=function(){var n=arguments,i=t?t.apply(this,n):n[0],a=r.cache;if(a.has(i))return a.get(i);var o=e.apply(this,n);return r.cache=a.set(i,o)||a,o};return r.cache=new(Pf.Cache||sr),r}function Of(e){if("function"!=typeof e)throw new hc(oe);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}function Cf(e){return Ef(2,e)}function zf(e,t){if("function"!=typeof e)throw new hc(oe);return t=t===ne?t:ks(t),ri(e,t)}function jf(e,t){if("function"!=typeof e)throw new hc(oe);return t=null==t?0:Kc(ks(t),0),ri(function(r){var n=r[t],i=Si(r,0,t);return n&&b(i,n),o(e,this,i)})}function Nf(e,t,r){var n=!0,i=!0;if("function"!=typeof e)throw new hc(oe);return as(r)&&(n="leading"in r?!!r.leading:n,i="trailing"in r?!!r.trailing:i),Bf(e,t,{leading:n,maxWait:t,trailing:i})}function qf(e){return Af(e,1)}function Lf(e,t){return hd(xi(t),e)}function Df(){if(!arguments.length)return[];var e=arguments[0];return md(e)?e:[e]}function Hf(e){return rn(e,de)}function Ff(e,t){return t="function"==typeof t?t:ne,rn(e,de,t)}function Uf(e){return rn(e,ce|de)}function Vf(e,t){return t="function"==typeof t?t:ne,rn(e,ce|de,t)}function Wf(e,t){return null==t||an(e,t,Hs(t))}function Kf(e,t){return e===t||e!==e&&t!==t}function Yf(e){return null!=e&&is(e.length)&&!rs(e)}function Xf(e){return os(e)&&Yf(e)}function Zf(e){return!0===e||!1===e||os(e)&&gn(e)==Fe}function Gf(e){return os(e)&&1===e.nodeType&&!ps(e)}function $f(e){if(null==e)return!0;if(Yf(e)&&(md(e)||"string"==typeof e||"function"==typeof e.splice||yd(e)||Sd(e)||vd(e)))return!e.length;var t=Eh(e);if(t==Xe||t==et)return!e.size;if(Da(e))return!qn(e).length;for(var r in e)if(mc.call(e,r))return!1;return!0}function Qf(e,t){return Tn(e,t)}function Jf(e,t,r){r="function"==typeof r?r:ne;var n=r?r(e,t):ne;return n===ne?Tn(e,t,ne,r):!!n}function es(e){if(!os(e))return!1;var t=gn(e);return t==We||t==Ve||"string"==typeof e.message&&"string"==typeof e.name&&!ps(e)}function ts(e){return"number"==typeof e&&Uc(e)}function rs(e){if(!as(e))return!1;var t=gn(e);return t==Ke||t==Ye||t==He||t==Qe}function ns(e){return"number"==typeof e&&e==ks(e)}function is(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=Pe}function as(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function os(e){return null!=e&&"object"==typeof e}function fs(e,t){return e===t||Pn(e,t,ka(t))}function ss(e,t,r){return r="function"==typeof r?r:ne,Pn(e,t,ka(t),r)}function us(e){return ls(e)&&e!=+e}function cs(e){if(Ih(e))throw new ac(ae);return On(e)}function hs(e){return null===e}function ds(e){return null==e}function ls(e){return"number"==typeof e||os(e)&&gn(e)==Ze}function ps(e){if(!os(e)||gn(e)!=$e)return!1;var t=Ic(e);if(null===t)return!0;var r=mc.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&vc.call(r)==wc}function bs(e){return ns(e)&&e>=-Pe&&e<=Pe}function vs(e){return"string"==typeof e||!md(e)&&os(e)&&gn(e)==tt}function ms(e){return"symbol"==typeof e||os(e)&&gn(e)==rt}function gs(e){return e===ne}function ys(e){return os(e)&&Eh(e)==it}function _s(e){return os(e)&&gn(e)==at}function ws(e){if(!e)return[];if(Yf(e))return vs(e)?J(e):Ni(e);if(Oc&&e[Oc])return V(e[Oc]());var t=Eh(e);return(t==Xe?W:t==et?X:eu)(e)}function xs(e){if(!e)return 0===e?e:0;if((e=Ms(e))===Re||e===-Re){return(e<0?-1:1)*Oe}return e===e?e:0}function ks(e){var t=xs(e),r=t%1;return t===t?r?t-r:t:0}function Ss(e){return e?tn(ks(e),0,ze):0}function Ms(e){if("number"==typeof e)return e;if(ms(e))return Ce;if(as(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=as(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(Ot,"");var r=Vt.test(e);return r||Kt.test(e)?Ir(e.slice(2),r?2:8):Ut.test(e)?Ce:+e}function As(e){return qi(e,Fs(e))}function Es(e){return e?tn(ks(e),-Pe,Pe):0===e?e:0}function Is(e){return null==e?"":li(e)}function Ts(e,t){var r=ph(e);return null==t?r:$r(r,t)}function Bs(e,t){return w(e,wa(t,3),ln)}function Rs(e,t){return w(e,wa(t,3),pn)}function Ps(e,t){return null==e?e:mh(e,wa(t,3),Fs)}function Os(e,t){return null==e?e:gh(e,wa(t,3),Fs)}function Cs(e,t){return e&&ln(e,wa(t,3))}function zs(e,t){return e&&pn(e,wa(t,3))}function js(e){return null==e?[]:bn(e,Hs(e))}function Ns(e){return null==e?[]:bn(e,Fs(e))}function qs(e,t,r){var n=null==e?ne:vn(e,t);return n===ne?r:n}function Ls(e,t){return null!=e&&Ia(e,t,_n)}function Ds(e,t){return null!=e&&Ia(e,t,wn)}function Hs(e){return Yf(e)?Pr(e):qn(e)}function Fs(e){return Yf(e)?Pr(e,!0):Ln(e)}function Us(e,t){var r={};return t=wa(t,3),ln(e,function(e,n,i){Jr(r,t(e,n,i),e)}),r}function Vs(e,t){var r={};return t=wa(t,3),ln(e,function(e,n,i){Jr(r,n,t(e,n,i))}),r}function Ws(e,t){return Ks(e,Of(wa(t)))}function Ks(e,t){if(null==e)return{};var r=p(ga(e),function(e){return[e]});return t=wa(t),Zn(e,r,function(e,r){return t(e,r[0])})}function Ys(e,t,r){t=ki(t,e);var n=-1,i=t.length;for(i||(i=1,e=ne);++n<i;){var a=null==e?ne:e[Qa(t[n])];a===ne&&(n=i,a=r),e=rs(a)?a.call(e):a}return e}function Xs(e,t,r){return null==e?e:ai(e,t,r)}function Zs(e,t,r,n){return n="function"==typeof n?n:ne,null==e?e:ai(e,t,r,n)}function Gs(e,t,r){var n=md(e),i=n||yd(e)||Sd(e);if(t=wa(t,4),null==r){var a=e&&e.constructor;r=i?n?new a:[]:as(e)&&rs(a)?ph(Ic(e)):{}}return(i?s:ln)(e,function(e,n,i){return t(r,e,n,i)}),r}function $s(e,t){return null==e||bi(e,t)}function Qs(e,t,r){return null==e?e:vi(e,t,xi(r))}function Js(e,t,r,n){return n="function"==typeof n?n:ne,null==e?e:vi(e,t,xi(r),n)}function eu(e){return null==e?[]:z(e,Hs(e))}function tu(e){return null==e?[]:z(e,Fs(e))}function ru(e,t,r){return r===ne&&(r=t,t=ne),r!==ne&&(r=Ms(r),r=r===r?r:0),t!==ne&&(t=Ms(t),t=t===t?t:0),tn(Ms(e),t,r)}function nu(e,t,r){return t=xs(t),r===ne?(r=t,t=0):r=xs(r),e=Ms(e),xn(e,t,r)}function iu(e,t,r){if(r&&"boolean"!=typeof r&&za(e,t,r)&&(t=r=ne),r===ne&&("boolean"==typeof t?(r=t,t=ne):"boolean"==typeof e&&(r=e,e=ne)),e===ne&&t===ne?(e=0,t=1):(e=xs(e),t===ne?(t=e,e=0):t=xs(t)),e>t){var n=e;e=t,t=n}if(r||e%1||t%1){var i=Gc();return Yc(e+i*(t-e+Er("1e-"+((i+"").length-1))),t)}return Jn(e,t)}function au(e){return Gd(Is(e).toLowerCase())}function ou(e){return(e=Is(e))&&e.replace(Xt,Vr).replace(pr,"")}function fu(e,t,r){e=Is(e),t=li(t);var n=e.length;r=r===ne?n:tn(ks(r),0,n);var i=r;return(r-=t.length)>=0&&e.slice(r,i)==t}function su(e){return e=Is(e),e&&kt.test(e)?e.replace(wt,Wr):e}function uu(e){return e=Is(e),e&&Pt.test(e)?e.replace(Rt,"\\$&"):e}function cu(e,t,r){e=Is(e),t=ks(t);var n=t?Q(e):0;if(!t||n>=t)return e;var i=(t-n)/2;return ra(Dc(i),r)+e+ra(Lc(i),r)}function hu(e,t,r){e=Is(e),t=ks(t);var n=t?Q(e):0;return t&&n<t?e+ra(t-n,r):e}function du(e,t,r){e=Is(e),t=ks(t);var n=t?Q(e):0;return t&&n<t?ra(t-n,r)+e:e}function lu(e,t,r){return r||null==t?t=0:t&&(t=+t),Zc(Is(e).replace(Ct,""),t||0)}function pu(e,t,r){return t=(r?za(e,t,r):t===ne)?1:ks(t),ti(Is(e),t)}function bu(){var e=arguments,t=Is(e[0]);return e.length<3?t:t.replace(e[1],e[2])}function vu(e,t,r){return r&&"number"!=typeof r&&za(e,t,r)&&(t=r=ne),(r=r===ne?ze:r>>>0)?(e=Is(e),e&&("string"==typeof t||null!=t&&!xd(t))&&!(t=li(t))&&F(e)?Si(J(e),0,r):e.split(t,r)):[]}function mu(e,t,r){return e=Is(e),r=null==r?0:tn(ks(r),0,e.length),t=li(t),e.slice(r,r+t.length)==t}function gu(e,t,n){var i=r.templateSettings;n&&za(e,t,n)&&(t=ne),e=Is(e),t=Td({},t,i,ca);var a,o,f=Td({},t.imports,i.imports,ca),s=Hs(f),u=z(f,s),c=0,h=t.interpolate||Zt,d="__p += '",l=uc((t.escape||Zt).source+"|"+h.source+"|"+(h===At?Ht:Zt).source+"|"+(t.evaluate||Zt).source+"|$","g"),p="//# sourceURL="+("sourceURL"in t?t.sourceURL:"lodash.templateSources["+ ++_r+"]")+"\n";e.replace(l,function(t,r,n,i,f,s){return n||(n=i),d+=e.slice(c,s).replace(Gt,D),r&&(a=!0,d+="' +\n__e("+r+") +\n'"),f&&(o=!0,d+="';\n"+f+";\n__p += '"),n&&(d+="' +\n((__t = ("+n+")) == null ? '' : __t) +\n'"),c=s+t.length,t}),d+="';\n";var b=t.variable;b||(d="with (obj) {\n"+d+"\n}\n"),d=(o?d.replace(mt,""):d).replace(gt,"$1").replace(yt,"$1;"),d="function("+(b||"obj")+") {\n"+(b?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(o?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+d+"return __p\n}";var v=$d(function(){return oc(s,p+"return "+d).apply(ne,u)});if(v.source=d,es(v))throw v;return v}function yu(e){return Is(e).toLowerCase()}function _u(e){return Is(e).toUpperCase()}function wu(e,t,r){if((e=Is(e))&&(r||t===ne))return e.replace(Ot,"");if(!e||!(t=li(t)))return e;var n=J(e),i=J(t);return Si(n,N(n,i),q(n,i)+1).join("")}function xu(e,t,r){if((e=Is(e))&&(r||t===ne))return e.replace(zt,"");if(!e||!(t=li(t)))return e;var n=J(e);return Si(n,0,q(n,J(t))+1).join("")}function ku(e,t,r){if((e=Is(e))&&(r||t===ne))return e.replace(Ct,"");if(!e||!(t=li(t)))return e;var n=J(e);return Si(n,N(n,J(t))).join("")}function Su(e,t){var r=Me,n=Ae;if(as(t)){var i="separator"in t?t.separator:i;r="length"in t?ks(t.length):r,n="omission"in t?li(t.omission):n}e=Is(e);var a=e.length;if(F(e)){var o=J(e);a=o.length}if(r>=a)return e;var f=r-Q(n);if(f<1)return n;var s=o?Si(o,0,f).join(""):e.slice(0,f);if(i===ne)return s+n;if(o&&(f+=s.length-f),xd(i)){if(e.slice(f).search(i)){var u,c=s;for(i.global||(i=uc(i.source,Is(Ft.exec(i))+"g")),i.lastIndex=0;u=i.exec(c);)var h=u.index;s=s.slice(0,h===ne?f:h)}}else if(e.indexOf(li(i),f)!=f){var d=s.lastIndexOf(i);d>-1&&(s=s.slice(0,d))}return s+n}function Mu(e){return e=Is(e),e&&xt.test(e)?e.replace(_t,Kr):e}function Au(e,t,r){return e=Is(e),t=r?ne:t,t===ne?U(e)?re(e):_(e):e.match(t)||[]}function Eu(e){var t=null==e?0:e.length,r=wa();return e=t?p(e,function(e){if("function"!=typeof e[1])throw new hc(oe);return[r(e[0]),e[1]]}):[],ri(function(r){for(var n=-1;++n<t;){var i=e[n];if(o(i[0],this,r))return o(i[1],this,r)}})}function Iu(e){return nn(rn(e,ce))}function Tu(e){return function(){return e}}function Bu(e,t){return null==e||e!==e?t:e}function Ru(e){return e}function Pu(e){return Nn("function"==typeof e?e:rn(e,ce))}function Ou(e){return Fn(rn(e,ce))}function Cu(e,t){return Un(e,rn(t,ce))}function zu(e,t,r){var n=Hs(t),i=bn(t,n);null!=r||as(t)&&(i.length||!n.length)||(r=t,t=e,e=this,i=bn(t,Hs(t)));var a=!(as(r)&&"chain"in r&&!r.chain),o=rs(e);return s(i,function(r){var n=t[r];e[r]=n,o&&(e.prototype[r]=function(){var t=this.__chain__;if(a||t){var r=e(this.__wrapped__);return(r.__actions__=Ni(this.__actions__)).push({func:n,args:arguments,thisArg:e}),r.__chain__=t,r}return n.apply(e,b([this.value()],arguments))})}),e}function ju(){return Rr._===this&&(Rr._=xc),this}function Nu(){}function qu(e){return e=ks(e),ri(function(t){return Kn(t,e)})}function Lu(e){return ja(e)?E(Qa(e)):Gn(e)}function Du(e){return function(t){return null==e?ne:vn(e,t)}}function Hu(){return[]}function Fu(){return!1}function Uu(){return{}}function Vu(){return""}function Wu(){return!0}function Ku(e,t){if((e=ks(e))<1||e>Pe)return[];var r=ze,n=Yc(e,ze);t=wa(t),e-=ze;for(var i=P(n,t);++r<e;)t(r);return i}function Yu(e){return md(e)?p(e,Qa):ms(e)?[e]:Ni(Ph(Is(e)))}function Xu(e){var t=++gc;return Is(e)+t}function Zu(e){return e&&e.length?un(e,Ru,yn):ne}function Gu(e,t){return e&&e.length?un(e,wa(t,2),yn):ne}function $u(e){return A(e,Ru)}function Qu(e,t){return A(e,wa(t,2))}function Ju(e){return e&&e.length?un(e,Ru,Dn):ne}function ec(e,t){return e&&e.length?un(e,wa(t,2),Dn):ne}function tc(e){return e&&e.length?R(e,Ru):0}function rc(e,t){return e&&e.length?R(e,wa(t,2)):0}t=null==t?Rr:Yr.defaults(Rr.Object(),t,Yr.pick(Rr,yr));var nc=t.Array,ic=t.Date,ac=t.Error,oc=t.Function,fc=t.Math,sc=t.Object,uc=t.RegExp,cc=t.String,hc=t.TypeError,dc=nc.prototype,lc=oc.prototype,pc=sc.prototype,bc=t["__core-js_shared__"],vc=lc.toString,mc=pc.hasOwnProperty,gc=0,yc=function(){var e=/[^.]+$/.exec(bc&&bc.keys&&bc.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),_c=pc.toString,wc=vc.call(sc),xc=Rr._,kc=uc("^"+vc.call(mc).replace(Rt,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Sc=Cr?t.Buffer:ne,Mc=t.Symbol,Ac=t.Uint8Array,Ec=Sc?Sc.allocUnsafe:ne,Ic=K(sc.getPrototypeOf,sc),Tc=sc.create,Bc=pc.propertyIsEnumerable,Rc=dc.splice,Pc=Mc?Mc.isConcatSpreadable:ne,Oc=Mc?Mc.iterator:ne,Cc=Mc?Mc.toStringTag:ne,zc=function(){try{var e=Sa(sc,"defineProperty");return e({},"",{}),e}catch(e){}}(),jc=t.clearTimeout!==Rr.clearTimeout&&t.clearTimeout,Nc=ic&&ic.now!==Rr.Date.now&&ic.now,qc=t.setTimeout!==Rr.setTimeout&&t.setTimeout,Lc=fc.ceil,Dc=fc.floor,Hc=sc.getOwnPropertySymbols,Fc=Sc?Sc.isBuffer:ne,Uc=t.isFinite,Vc=dc.join,Wc=K(sc.keys,sc),Kc=fc.max,Yc=fc.min,Xc=ic.now,Zc=t.parseInt,Gc=fc.random,$c=dc.reverse,Qc=Sa(t,"DataView"),Jc=Sa(t,"Map"),eh=Sa(t,"Promise"),th=Sa(t,"Set"),rh=Sa(t,"WeakMap"),nh=Sa(sc,"create"),ih=rh&&new rh,ah={},oh=Ja(Qc),fh=Ja(Jc),sh=Ja(eh),uh=Ja(th),ch=Ja(rh),hh=Mc?Mc.prototype:ne,dh=hh?hh.valueOf:ne,lh=hh?hh.toString:ne,ph=function(){function e(){}return function(t){if(!as(t))return{};if(Tc)return Tc(t);e.prototype=t;var r=new e;return e.prototype=ne,r}}();r.templateSettings={escape:St,evaluate:Mt,interpolate:At,variable:"",imports:{_:r}},r.prototype=n.prototype,r.prototype.constructor=r,y.prototype=ph(n.prototype),y.prototype.constructor=y,I.prototype=ph(n.prototype),I.prototype.constructor=I,Lt.prototype.clear=$t,Lt.prototype.delete=Qt,Lt.prototype.get=Jt,Lt.prototype.has=er,Lt.prototype.set=tr,rr.prototype.clear=nr,rr.prototype.delete=ir,rr.prototype.get=ar,rr.prototype.has=or,rr.prototype.set=fr,sr.prototype.clear=ur,sr.prototype.delete=cr,sr.prototype.get=hr,sr.prototype.has=dr,sr.prototype.set=br,vr.prototype.add=vr.prototype.push=mr,vr.prototype.has=gr,kr.prototype.clear=Sr,kr.prototype.delete=Mr,kr.prototype.get=Ar,kr.prototype.has=Tr,kr.prototype.set=Br;var bh=Ui(ln),vh=Ui(pn,!0),mh=Vi(),gh=Vi(!0),yh=ih?function(e,t){return ih.set(e,t),e}:Ru,_h=zc?function(e,t){return zc(e,"toString",{configurable:!0,enumerable:!1,value:Tu(t),writable:!0})}:Ru,wh=ri,xh=jc||function(e){return Rr.clearTimeout(e)},kh=th&&1/X(new th([,-0]))[1]==Re?function(e){return new th(e)}:Nu,Sh=ih?function(e){return ih.get(e)}:Nu,Mh=Hc?function(e){return null==e?[]:(e=sc(e),h(Hc(e),function(t){return Bc.call(e,t)}))}:Hu,Ah=Hc?function(e){for(var t=[];e;)b(t,Mh(e)),e=Ic(e);return t}:Hu,Eh=gn;(Qc&&Eh(new Qc(new ArrayBuffer(1)))!=ft||Jc&&Eh(new Jc)!=Xe||eh&&"[object Promise]"!=Eh(eh.resolve())||th&&Eh(new th)!=et||rh&&Eh(new rh)!=it)&&(Eh=function(e){var t=gn(e),r=t==$e?e.constructor:ne,n=r?Ja(r):"";if(n)switch(n){case oh:return ft;case fh:return Xe;case sh:return"[object Promise]";case uh:return et;case ch:return it}return t});var Ih=bc?rs:Fu,Th=Ga(yh),Bh=qc||function(e,t){return Rr.setTimeout(e,t)},Rh=Ga(_h),Ph=function(e){var t=Pf(e,function(e){return r.size===se&&r.clear(),e}),r=t.cache;return t}(function(e){var t=[];return Tt.test(e)&&t.push(""),e.replace(Bt,function(e,r,n,i){t.push(n?i.replace(Dt,"$1"):r||e)}),t}),Oh=ri(function(e,t){return Xf(e)?fn(e,dn(t,1,Xf,!0)):[]}),Ch=ri(function(e,t){var r=wo(t);return Xf(r)&&(r=ne),Xf(e)?fn(e,dn(t,1,Xf,!0),wa(r,2)):[]}),zh=ri(function(e,t){var r=wo(t);return Xf(r)&&(r=ne),Xf(e)?fn(e,dn(t,1,Xf,!0),ne,r):[]}),jh=ri(function(e){var t=p(e,wi);return t.length&&t[0]===e[0]?kn(t):[]}),Nh=ri(function(e){var t=wo(e),r=p(e,wi);return t===wo(r)?t=ne:r.pop(),r.length&&r[0]===e[0]?kn(r,wa(t,2)):[]}),qh=ri(function(e){var t=wo(e),r=p(e,wi);return t="function"==typeof t?t:ne,t&&r.pop(),r.length&&r[0]===e[0]?kn(r,ne,t):[]}),Lh=ri(So),Dh=va(function(e,t){var r=null==e?0:e.length,n=en(e,t);return Qn(e,p(t,function(e){return Ca(e,r)?+e:e}).sort(Oi)),n}),Hh=ri(function(e){return pi(dn(e,1,Xf,!0))}),Fh=ri(function(e){var t=wo(e);return Xf(t)&&(t=ne),pi(dn(e,1,Xf,!0),wa(t,2))}),Uh=ri(function(e){var t=wo(e);return t="function"==typeof t?t:ne,pi(dn(e,1,Xf,!0),ne,t)}),Vh=ri(function(e,t){return Xf(e)?fn(e,t):[]}),Wh=ri(function(e){return yi(h(e,Xf))}),Kh=ri(function(e){var t=wo(e);return Xf(t)&&(t=ne),yi(h(e,Xf),wa(t,2))}),Yh=ri(function(e){var t=wo(e);return t="function"==typeof t?t:ne,yi(h(e,Xf),ne,t)}),Xh=ri(Ko),Zh=ri(function(e){var t=e.length,r=t>1?e[t-1]:ne;return r="function"==typeof r?(e.pop(),r):ne,Yo(e,r)}),Gh=va(function(e){var t=e.length,r=t?e[0]:0,n=this.__wrapped__,i=function(t){return en(t,e)};return!(t>1||this.__actions__.length)&&n instanceof I&&Ca(r)?(n=n.slice(r,+r+(t?1:0)),n.__actions__.push({func:Qo,args:[i],thisArg:ne}),new y(n,this.__chain__).thru(function(e){return t&&!e.length&&e.push(ne),e})):this.thru(i)}),$h=Hi(function(e,t,r){mc.call(e,r)?++e[r]:Jr(e,r,1)}),Qh=Gi(co),Jh=Gi(ho),ed=Hi(function(e,t,r){mc.call(e,r)?e[r].push(t):Jr(e,r,[t])}),td=ri(function(e,t,r){var n=-1,i="function"==typeof t,a=Yf(e)?nc(e.length):[];return bh(e,function(e){a[++n]=i?o(t,e,r):Mn(e,t,r)}),a}),rd=Hi(function(e,t,r){Jr(e,r,t)}),nd=Hi(function(e,t,r){e[r?0:1].push(t)},function(){return[[],[]]}),id=ri(function(e,t){if(null==e)return[];var r=t.length;return r>1&&za(e,t[0],t[1])?t=[]:r>2&&za(t[0],t[1],t[2])&&(t=[t[0]]),Yn(e,dn(t,1),[])}),ad=Nc||function(){return Rr.Date.now()},od=ri(function(e,t,r){var n=be;if(r.length){var i=Y(r,_a(od));n|=_e}return ua(e,n,t,r,i)}),fd=ri(function(e,t,r){var n=be|ve;if(r.length){var i=Y(r,_a(fd));n|=_e}return ua(t,n,e,r,i)}),sd=ri(function(e,t){return on(e,1,t)}),ud=ri(function(e,t,r){return on(e,Ms(t)||0,r)});Pf.Cache=sr;var cd=wh(function(e,t){t=1==t.length&&md(t[0])?p(t[0],C(wa())):p(dn(t,1),C(wa()));var r=t.length;return ri(function(n){for(var i=-1,a=Yc(n.length,r);++i<a;)n[i]=t[i].call(this,n[i]);return o(e,this,n)})}),hd=ri(function(e,t){var r=Y(t,_a(hd));return ua(e,_e,ne,t,r)}),dd=ri(function(e,t){var r=Y(t,_a(dd));return ua(e,we,ne,t,r)}),ld=va(function(e,t){return ua(e,ke,ne,ne,ne,t)}),pd=aa(yn),bd=aa(function(e,t){return e>=t}),vd=An(function(){return arguments}())?An:function(e){return os(e)&&mc.call(e,"callee")&&!Bc.call(e,"callee")},md=nc.isArray,gd=Nr?C(Nr):En,yd=Fc||Fu,_d=qr?C(qr):In,wd=Lr?C(Lr):Rn,xd=Dr?C(Dr):Cn,kd=Hr?C(Hr):zn,Sd=Fr?C(Fr):jn,Md=aa(Dn),Ad=aa(function(e,t){return e<=t}),Ed=Fi(function(e,t){if(Da(t)||Yf(t))return void qi(t,Hs(t),e);for(var r in t)mc.call(t,r)&&Xr(e,r,t[r])}),Id=Fi(function(e,t){qi(t,Fs(t),e)}),Td=Fi(function(e,t,r,n){qi(t,Fs(t),e,n)}),Bd=Fi(function(e,t,r,n){qi(t,Hs(t),e,n)}),Rd=va(en),Pd=ri(function(e){return e.push(ne,ca),o(Td,ne,e)}),Od=ri(function(e){return e.push(ne,ha),o(qd,ne,e)}),Cd=Ji(function(e,t,r){e[t]=r},Tu(Ru)),zd=Ji(function(e,t,r){mc.call(e,t)?e[t].push(r):e[t]=[r]},wa),jd=ri(Mn),Nd=Fi(function(e,t,r){Vn(e,t,r)}),qd=Fi(function(e,t,r,n){Vn(e,t,r,n)}),Ld=va(function(e,t){var r={};if(null==e)return r;var n=!1;t=p(t,function(t){return t=ki(t,e),n||(n=t.length>1),t}),qi(e,ga(e),r),n&&(r=rn(r,ce|he|de,da));for(var i=t.length;i--;)bi(r,t[i]);return r}),Dd=va(function(e,t){return null==e?{}:Xn(e,t)}),Hd=sa(Hs),Fd=sa(Fs),Ud=Yi(function(e,t,r){return t=t.toLowerCase(),e+(r?au(t):t)}),Vd=Yi(function(e,t,r){return e+(r?"-":"")+t.toLowerCase()}),Wd=Yi(function(e,t,r){return e+(r?" ":"")+t.toLowerCase()}),Kd=Ki("toLowerCase"),Yd=Yi(function(e,t,r){return e+(r?"_":"")+t.toLowerCase()}),Xd=Yi(function(e,t,r){return e+(r?" ":"")+Gd(t)}),Zd=Yi(function(e,t,r){return e+(r?" ":"")+t.toUpperCase()}),Gd=Ki("toUpperCase"),$d=ri(function(e,t){try{return o(e,ne,t)}catch(e){return es(e)?e:new ac(e)}}),Qd=va(function(e,t){return s(t,function(t){t=Qa(t),Jr(e,t,od(e[t],e))}),e}),Jd=$i(),el=$i(!0),tl=ri(function(e,t){return function(r){return Mn(r,e,t)}}),rl=ri(function(e,t){return function(r){return Mn(e,r,t)}}),nl=ta(p),il=ta(c),al=ta(g),ol=ia(),fl=ia(!0),sl=ea(function(e,t){return e+t},0),ul=fa("ceil"),cl=ea(function(e,t){return e/t},1),hl=fa("floor"),dl=ea(function(e,t){return e*t},1),ll=fa("round"),pl=ea(function(e,t){return e-t},0);return r.after=Mf,r.ary=Af,r.assign=Ed,r.assignIn=Id,r.assignInWith=Td,r.assignWith=Bd,r.at=Rd,r.before=Ef,r.bind=od,r.bindAll=Qd,r.bindKey=fd,r.castArray=Df,r.chain=Go,r.chunk=ro,r.compact=no,r.concat=io,r.cond=Eu,r.conforms=Iu,r.constant=Tu,r.countBy=$h,r.create=Ts,r.curry=If,r.curryRight=Tf,r.debounce=Bf,r.defaults=Pd,r.defaultsDeep=Od,r.defer=sd,r.delay=ud,r.difference=Oh,r.differenceBy=Ch,r.differenceWith=zh,r.drop=ao,r.dropRight=oo,r.dropRightWhile=fo,r.dropWhile=so,r.fill=uo,r.filter=sf,r.flatMap=uf,r.flatMapDeep=cf,r.flatMapDepth=hf,r.flatten=lo,r.flattenDeep=po,r.flattenDepth=bo,r.flip=Rf,r.flow=Jd,r.flowRight=el,r.fromPairs=vo,r.functions=js,r.functionsIn=Ns,r.groupBy=ed,r.initial=yo,r.intersection=jh,r.intersectionBy=Nh,r.intersectionWith=qh,r.invert=Cd,r.invertBy=zd,r.invokeMap=td,r.iteratee=Pu,r.keyBy=rd,r.keys=Hs,r.keysIn=Fs,r.map=bf,r.mapKeys=Us,r.mapValues=Vs,r.matches=Ou,r.matchesProperty=Cu,r.memoize=Pf,r.merge=Nd,r.mergeWith=qd,r.method=tl,r.methodOf=rl,r.mixin=zu,r.negate=Of,r.nthArg=qu,r.omit=Ld,r.omitBy=Ws,r.once=Cf,r.orderBy=vf,r.over=nl,r.overArgs=cd,r.overEvery=il,r.overSome=al,r.partial=hd,r.partialRight=dd,r.partition=nd,r.pick=Dd,r.pickBy=Ks,r.property=Lu,r.propertyOf=Du,r.pull=Lh,r.pullAll=So,r.pullAllBy=Mo,r.pullAllWith=Ao,r.pullAt=Dh,r.range=ol,r.rangeRight=fl,r.rearg=ld,r.reject=yf,r.remove=Eo,r.rest=zf,r.reverse=Io,r.sampleSize=wf,r.set=Xs,r.setWith=Zs,r.shuffle=xf,r.slice=To,r.sortBy=id,r.sortedUniq=jo,r.sortedUniqBy=No,r.split=vu,r.spread=jf,r.tail=qo,r.take=Lo,r.takeRight=Do,r.takeRightWhile=Ho,r.takeWhile=Fo,r.tap=$o,r.throttle=Nf,r.thru=Qo,r.toArray=ws,r.toPairs=Hd,r.toPairsIn=Fd,r.toPath=Yu,r.toPlainObject=As,r.transform=Gs,r.unary=qf,r.union=Hh,r.unionBy=Fh,r.unionWith=Uh,r.uniq=Uo,r.uniqBy=Vo,r.uniqWith=Wo,r.unset=$s,r.unzip=Ko,r.unzipWith=Yo,r.update=Qs,r.updateWith=Js,r.values=eu,r.valuesIn=tu,r.without=Vh,r.words=Au,r.wrap=Lf,r.xor=Wh,r.xorBy=Kh,r.xorWith=Yh,r.zip=Xh,r.zipObject=Xo,r.zipObjectDeep=Zo,r.zipWith=Zh,r.entries=Hd,r.entriesIn=Fd,r.extend=Id,r.extendWith=Td,zu(r,r),r.add=sl,r.attempt=$d,r.camelCase=Ud,r.capitalize=au,r.ceil=ul,r.clamp=ru,r.clone=Hf,r.cloneDeep=Uf,r.cloneDeepWith=Vf,r.cloneWith=Ff,r.conformsTo=Wf,r.deburr=ou,r.defaultTo=Bu,r.divide=cl,r.endsWith=fu,r.eq=Kf,r.escape=su,r.escapeRegExp=uu,r.every=ff,r.find=Qh,r.findIndex=co,r.findKey=Bs,r.findLast=Jh,r.findLastIndex=ho,r.findLastKey=Rs,r.floor=hl,r.forEach=df,r.forEachRight=lf,r.forIn=Ps,r.forInRight=Os,r.forOwn=Cs,r.forOwnRight=zs,r.get=qs,r.gt=pd,r.gte=bd,r.has=Ls,r.hasIn=Ds,r.head=mo,r.identity=Ru,r.includes=pf,r.indexOf=go,r.inRange=nu,r.invoke=jd,r.isArguments=vd,r.isArray=md,r.isArrayBuffer=gd,r.isArrayLike=Yf,r.isArrayLikeObject=Xf,r.isBoolean=Zf,r.isBuffer=yd,r.isDate=_d,r.isElement=Gf,r.isEmpty=$f,r.isEqual=Qf,r.isEqualWith=Jf,r.isError=es,r.isFinite=ts,r.isFunction=rs,r.isInteger=ns,r.isLength=is,r.isMap=wd,r.isMatch=fs,r.isMatchWith=ss,r.isNaN=us,r.isNative=cs,r.isNil=ds,r.isNull=hs,r.isNumber=ls,r.isObject=as,r.isObjectLike=os,r.isPlainObject=ps,r.isRegExp=xd,r.isSafeInteger=bs,r.isSet=kd,r.isString=vs,r.isSymbol=ms,r.isTypedArray=Sd,r.isUndefined=gs,r.isWeakMap=ys,r.isWeakSet=_s,r.join=_o,r.kebabCase=Vd,r.last=wo,r.lastIndexOf=xo,r.lowerCase=Wd,r.lowerFirst=Kd,r.lt=Md,r.lte=Ad,r.max=Zu,r.maxBy=Gu,r.mean=$u,r.meanBy=Qu,r.min=Ju,r.minBy=ec,r.stubArray=Hu,r.stubFalse=Fu,r.stubObject=Uu,r.stubString=Vu,r.stubTrue=Wu,r.multiply=dl,r.nth=ko,r.noConflict=ju,r.noop=Nu,r.now=ad,r.pad=cu,r.padEnd=hu,r.padStart=du,r.parseInt=lu,r.random=iu,r.reduce=mf,r.reduceRight=gf,r.repeat=pu,r.replace=bu,r.result=Ys,r.round=ll,r.runInContext=e,r.sample=_f,r.size=kf,r.snakeCase=Yd,r.some=Sf,r.sortedIndex=Bo,r.sortedIndexBy=Ro,r.sortedIndexOf=Po,r.sortedLastIndex=Oo,r.sortedLastIndexBy=Co,r.sortedLastIndexOf=zo,r.startCase=Xd,r.startsWith=mu,r.subtract=pl,r.sum=tc,r.sumBy=rc,r.template=gu,r.times=Ku,r.toFinite=xs,r.toInteger=ks,r.toLength=Ss,r.toLower=yu,r.toNumber=Ms,r.toSafeInteger=Es,r.toString=Is,r.toUpper=_u,r.trim=wu,r.trimEnd=xu,r.trimStart=ku,r.truncate=Su,r.unescape=Mu,r.uniqueId=Xu,r.upperCase=Zd,r.upperFirst=Gd,r.each=df,r.eachRight=lf,r.first=mo,zu(r,function(){var e={};return ln(r,function(t,n){mc.call(r.prototype,n)||(e[n]=t)}),e}(),{chain:!1}),r.VERSION="4.17.4",s(["bind","bindKey","curry","curryRight","partial","partialRight"],function(e){r[e].placeholder=r}),s(["drop","take"],function(e,t){I.prototype[e]=function(r){r=r===ne?1:Kc(ks(r),0);var n=this.__filtered__&&!t?new I(this):this.clone();return n.__filtered__?n.__takeCount__=Yc(r,n.__takeCount__):n.__views__.push({size:Yc(r,ze),type:e+(n.__dir__<0?"Right":"")}),n},I.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}}),s(["filter","map","takeWhile"],function(e,t){var r=t+1,n=r==Te||3==r;I.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:wa(e,3),type:r}),t.__filtered__=t.__filtered__||n,t}}),s(["head","last"],function(e,t){var r="take"+(t?"Right":"");I.prototype[e]=function(){return this[r](1).value()[0]}}),s(["initial","tail"],function(e,t){var r="drop"+(t?"":"Right");I.prototype[e]=function(){return this.__filtered__?new I(this):this[r](1)}}),I.prototype.compact=function(){return this.filter(Ru)},I.prototype.find=function(e){return this.filter(e).head()},I.prototype.findLast=function(e){return this.reverse().find(e)},I.prototype.invokeMap=ri(function(e,t){return"function"==typeof e?new I(this):this.map(function(r){return Mn(r,e,t)})}),I.prototype.reject=function(e){return this.filter(Of(wa(e)))},I.prototype.slice=function(e,t){e=ks(e);var r=this;return r.__filtered__&&(e>0||t<0)?new I(r):(e<0?r=r.takeRight(-e):e&&(r=r.drop(e)),t!==ne&&(t=ks(t),r=t<0?r.dropRight(-t):r.take(t-e)),r)},I.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},I.prototype.toArray=function(){return this.take(ze)},ln(I.prototype,function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),a=r[i?"take"+("last"==t?"Right":""):t],o=i||/^find/.test(t);a&&(r.prototype[t]=function(){var t=this.__wrapped__,f=i?[1]:arguments,s=t instanceof I,u=f[0],c=s||md(t),h=function(e){var t=a.apply(r,b([e],f));return i&&d?t[0]:t};c&&n&&"function"==typeof u&&1!=u.length&&(s=c=!1);var d=this.__chain__,l=!!this.__actions__.length,p=o&&!d,v=s&&!l;if(!o&&c){t=v?t:new I(this);var m=e.apply(t,f);return m.__actions__.push({func:Qo,args:[h],thisArg:ne}),new y(m,d)}return p&&v?e.apply(this,f):(m=this.thru(h),p?i?m.value()[0]:m.value():m)})}),s(["pop","push","shift","sort","splice","unshift"],function(e){var t=dc[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e);r.prototype[e]=function(){var e=arguments;if(i&&!this.__chain__){var r=this.value();return t.apply(md(r)?r:[],e)}return this[n](function(r){return t.apply(md(r)?r:[],e)})}}),ln(I.prototype,function(e,t){var n=r[t];if(n){var i=n.name+"";(ah[i]||(ah[i]=[])).push({name:t,func:n})}}),ah[Qi(ne,ve).name]=[{name:"wrapper",func:ne}],I.prototype.clone=G,I.prototype.reverse=ee,I.prototype.value=te,r.prototype.at=Gh,r.prototype.chain=Jo,r.prototype.commit=ef,r.prototype.next=tf,r.prototype.plant=nf,r.prototype.reverse=af,r.prototype.toJSON=r.prototype.valueOf=r.prototype.value=of,r.prototype.first=r.prototype.head,Oc&&(r.prototype[Oc]=rf),r}();Rr._=Yr,(n=function(){return Yr}.call(t,r,t,e))!==ne&&(e.exports=n)}).call(this)}).call(t,r(23)(e))},function(e,t,r){function n(e,t){if(void 0!==t&&e[0]!==t)throw new Error("Invalid network version");if(33===e.length)return{version:e[0],privateKey:e.slice(1,33),compressed:!1};if(34!==e.length)throw new Error("Invalid WIF length");if(1!==e[33])throw new Error("Invalid compression flag");return{version:e[0],privateKey:e.slice(1,33),compressed:!0}}function i(e,t,r){var n=new Buffer(r?34:33);return n.writeUInt8(e,0),t.copy(n,1),r&&(n[33]=1),n}function a(e,t){return n(f.decode(e),t)}function o(e,t,r){return"number"==typeof e?f.encode(i(e,t,r)):f.encode(i(e.version,e.privateKey,e.compressed))}var f=r(45);e.exports={decode:a,decodeRaw:n,encode:o,encodeRaw:i}},function(e,t,r){var n=r(96).Buffer;e.exports=function(e){function t(t){if(0===t.length)return"";for(var r=[0],n=0;n<t.length;++n){for(var i=0,a=t[n];i<r.length;++i)a+=r[i]<<8,r[i]=a%o,a=a/o|0;for(;a>0;)r.push(a%o),a=a/o|0}for(var f="",s=0;0===t[s]&&s<t.length-1;++s)f+=e[0];for(var u=r.length-1;u>=0;--u)f+=e[r[u]];return f}function r(e){if(0===e.length)return n.allocUnsafe(0);for(var t=[0],r=0;r<e.length;r++){var i=a[e[r]];if(void 0===i)return;for(var s=0,u=i;s<t.length;++s)u+=t[s]*o,t[s]=255&u,u>>=8;for(;u>0;)t.push(255&u),u>>=8}for(var c=0;e[c]===f&&c<e.length-1;++c)t.push(0);return n.from(t.reverse())}function i(e){var t=r(e);if(t)return t;throw new Error("Non-base"+o+" character")}for(var a={},o=e.length,f=e.charAt(0),s=0;s<e.length;s++){var u=e.charAt(s);if(void 0!==a[u])throw new TypeError(u+" is ambiguous");a[u]=s}return{encode:t,decodeUnsafe:r,decode:i}}},function(e,t,r){function n(e,t){for(var r in e)t[r]=e[r]}function i(e,t,r){return o(e,t,r)}var a=r(46),o=a.Buffer;o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow?e.exports=a:(n(a,t),t.Buffer=i),n(o,i),i.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return o(e,t,r)},i.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=o(e);return void 0!==t?"string"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},i.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return o(e)},i.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a.SlowBuffer(e)}},function(e,t,r){e.exports=r(25).createHash},function(e,t){e.exports={_from:"bigi@^1.4.2",_id:"bigi@1.4.2",_inBundle:!1,_integrity:"sha1-nGZalfiLiwj8Bc/XMfVhhZ1yWCU=",_location:"/bigi",_phantomChildren:{},_requested:{type:"range",registry:!0,raw:"bigi@^1.4.2",name:"bigi",escapedName:"bigi",rawSpec:"^1.4.2",saveSpec:null,fetchSpec:"^1.4.2"},_requiredBy:["/","/ecurve"],_resolved:"https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz",_shasum:"9c665a95f88b8b08fc05cfd731f561859d725825",_spec:"bigi@^1.4.2",_where:"/Users/ethanfast/Desktop/Code/NEO/neon-js",bugs:{url:"https://github.com/cryptocoinjs/bigi/issues"},bundleDependencies:!1,dependencies:{},deprecated:!1,description:"Big integers.",devDependencies:{coveralls:"^2.11.2",istanbul:"^0.3.5",jshint:"^2.5.1",mocha:"^2.1.0",mochify:"^2.1.0"},homepage:"https://github.com/cryptocoinjs/bigi#readme",keywords:["cryptography","math","bitcoin","arbitrary","precision","arithmetic","big","integer","int","number","biginteger","bigint","bignumber","decimal","float"],main:"./lib/index.js",name:"bigi",repository:{url:"git+https://github.com/cryptocoinjs/bigi.git",type:"git"},scripts:{"browser-test":"mochify --wd -R spec",coverage:"istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",coveralls:"npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info",jshint:"jshint --config jshint.json lib/*.js ; true",test:"_mocha -- test/*.js",unit:"mocha"},testling:{files:"test/*.js",harness:"mocha",browsers:["ie/9..latest","firefox/latest","chrome/latest","safari/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},version:"1.4.2"}},function(e,t,r){var n=r(14),i=r(49);i.fromByteArrayUnsigned=function(e){return new i(128&e[0]?[0].concat(e):e)},i.prototype.toByteArrayUnsigned=function(){var e=this.toByteArray();return 0===e[0]?e.slice(1):e},i.fromDERInteger=function(e){return new i(e)},i.prototype.toDERInteger=i.prototype.toByteArray,i.fromBuffer=function(e){if(128&e[0]){var t=Array.prototype.slice.call(e);return new i([0].concat(t))}return new i(e)},i.fromHex=function(e){return""===e?i.ZERO:(n.equal(e,e.match(/^[A-Fa-f0-9]+/),"Invalid hex string"),n.equal(e.length%2,0,"Incomplete hex"),new i(e,16))},i.prototype.toBuffer=function(e){for(var t=this.toByteArrayUnsigned(),r=[],n=e-t.length;r.length<n;)r.push(0);return new Buffer(r.concat(t))},i.prototype.toHex=function(e){return this.toBuffer(e).toString("hex")}},function(e,t,r){function n(e){var t=a[e];if(!t)return null;var r=new i(t.p,16),n=new i(t.a,16),f=new i(t.b,16),s=new i(t.n,16),u=new i(t.h,16),c=new i(t.Gx,16),h=new i(t.Gy,16);return new o(r,n,f,c,h,s,u)}var i=r(16),a=r(101),o=r(50);e.exports=n},function(e,t){e.exports={secp128r1:{p:"fffffffdffffffffffffffffffffffff",a:"fffffffdfffffffffffffffffffffffc",b:"e87579c11079f43dd824993c2cee5ed3",n:"fffffffe0000000075a30d1b9038a115",h:"01",Gx:"161ff7528b899b2d0c28607ca52c5b86",Gy:"cf5ac8395bafeb13c02da292dded7a83"},secp160k1:{p:"fffffffffffffffffffffffffffffffeffffac73",a:"00",b:"07",n:"0100000000000000000001b8fa16dfab9aca16b6b3",h:"01",Gx:"3b4c382ce37aa192a4019e763036f4f5dd4d7ebb",Gy:"938cf935318fdced6bc28286531733c3f03c4fee"},secp160r1:{p:"ffffffffffffffffffffffffffffffff7fffffff",a:"ffffffffffffffffffffffffffffffff7ffffffc",b:"1c97befc54bd7a8b65acf89f81d4d4adc565fa45",n:"0100000000000000000001f4c8f927aed3ca752257",h:"01",Gx:"4a96b5688ef573284664698968c38bb913cbfc82",Gy:"23a628553168947d59dcc912042351377ac5fb32"},secp192k1:{p:"fffffffffffffffffffffffffffffffffffffffeffffee37",a:"00",b:"03",n:"fffffffffffffffffffffffe26f2fc170f69466a74defd8d",h:"01",Gx:"db4ff10ec057e9ae26b07d0280b7f4341da5d1b1eae06c7d",Gy:"9b2f2f6d9c5628a7844163d015be86344082aa88d95e2f9d"},secp192r1:{p:"fffffffffffffffffffffffffffffffeffffffffffffffff",a:"fffffffffffffffffffffffffffffffefffffffffffffffc",b:"64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1",n:"ffffffffffffffffffffffff99def836146bc9b1b4d22831",h:"01",Gx:"188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012",Gy:"07192b95ffc8da78631011ed6b24cdd573f977a11e794811"},secp256k1:{p:"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f",a:"00",b:"07",n:"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",h:"01",Gx:"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",Gy:"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"},secp256r1:{p:"ffffffff00000001000000000000000000000000ffffffffffffffffffffffff",a:"ffffffff00000001000000000000000000000000fffffffffffffffffffffffc",b:"5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b",n:"ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551",h:"01",Gx:"6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296",Gy:"4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"}}},function(e,t){e.exports={_from:"elliptic@^6.4.0",_id:"elliptic@6.4.0",_inBundle:!1,_integrity:"sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=",_location:"/elliptic",_phantomChildren:{},_requested:{type:"range",registry:!0,raw:"elliptic@^6.4.0",name:"elliptic",escapedName:"elliptic",rawSpec:"^6.4.0",saveSpec:null,fetchSpec:"^6.4.0"},_requiredBy:["/","/browserify-sign","/create-ecdh"],_resolved:"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",_shasum:"cac9af8762c85836187003c8dfe193e5e2eae5df",_spec:"elliptic@^6.4.0",_where:"/Users/ethanfast/Desktop/Code/NEO/neon-js",author:{name:"Fedor Indutny",email:"fedor@indutny.com"},bugs:{url:"https://github.com/indutny/elliptic/issues"},bundleDependencies:!1,dependencies:{"bn.js":"^4.4.0",brorand:"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0",inherits:"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},deprecated:!1,description:"EC cryptography",devDependencies:{brfs:"^1.4.3",coveralls:"^2.11.3",grunt:"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2",istanbul:"^0.4.2",jscs:"^2.9.0",jshint:"^2.6.0",mocha:"^2.1.0"},files:["lib"],homepage:"https://github.com/indutny/elliptic",keywords:["EC","Elliptic","curve","Cryptography"],license:"MIT",main:"lib/elliptic.js",name:"elliptic",repository:{type:"git",url:"git+ssh://git@github.com/indutny/elliptic.git"},scripts:{jscs:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",jshint:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",lint:"npm run jscs && npm run jshint",test:"npm run lint && npm run unit",unit:"istanbul test _mocha --reporter=spec test/index.js",version:"grunt dist && git add dist/"},version:"6.4.0"}},function(e,t,r){"use strict";function n(e,t){for(var r=[],n=1<<t+1,i=e.clone();i.cmpn(1)>=0;){var a;if(i.isOdd()){var o=i.andln(n-1);a=o>(n>>1)-1?(n>>1)-o:o,i.isubn(a)}else a=0;r.push(a);for(var f=0!==i.cmpn(0)&&0===i.andln(n-1)?t+1:1,s=1;s<f;s++)r.push(0);i.iushrn(f)}return r}function i(e,t){var r=[[],[]];e=e.clone(),t=t.clone();for(var n=0,i=0;e.cmpn(-n)>0||t.cmpn(-i)>0;){var a=e.andln(3)+n&3,o=t.andln(3)+i&3;3===a&&(a=-1),3===o&&(o=-1);var f;if(0==(1&a))f=0;else{var s=e.andln(7)+n&7;f=3!==s&&5!==s||2!==o?a:-a}r[0].push(f);var u;if(0==(1&o))u=0;else{var s=t.andln(7)+i&7;u=3!==s&&5!==s||2!==a?o:-o}r[1].push(u),2*n===f+1&&(n=1-n),2*i===u+1&&(i=1-i),e.iushrn(1),t.iushrn(1)}return r}function a(e,t,r){var n="_"+t;e.prototype[t]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)}}function o(e){return"string"==typeof e?s.toArray(e,"hex"):e}function f(e){return new u(e,"hex","le")}var s=t,u=r(6),c=r(7),h=r(51);s.assert=c,s.toArray=h.toArray,s.zero2=h.zero2,s.toHex=h.toHex,s.encode=h.encode,s.getNAF=n,s.getJSF=i,s.cachedProperty=a,s.parseBytes=o,s.intFromLE=f},function(e,t,r){function n(e){this.rand=e}var i;if(e.exports=function(e){return i||(i=new n(null)),i.generate(e)},e.exports.Rand=n,n.prototype.generate=function(e){return this._rand(e)},n.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),r=0;r<t.length;r++)t[r]=this.rand.getByte();return t},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?n.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?n.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"==typeof window&&(n.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var a=r(25);if("function"!=typeof a.randomBytes)throw new Error("Not supported");n.prototype._rand=function(e){return a.randomBytes(e)}}catch(e){}},function(e,t,r){"use strict";function n(e,t){this.type=e,this.p=new a(t.p,16),this.red=t.prime?a.red(t.prime):a.mont(this.p),this.zero=new a(0).toRed(this.red),this.one=new a(1).toRed(this.red),this.two=new a(2).toRed(this.red),this.n=t.n&&new a(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4);var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function i(e,t){this.curve=e,this.type=t,this.precomputed=null}var a=r(6),o=r(3),f=o.utils,s=f.getNAF,u=f.getJSF,c=f.assert;e.exports=n,n.prototype.point=function(){throw new Error("Not implemented")},n.prototype.validate=function(){throw new Error("Not implemented")},n.prototype._fixedNafMul=function(e,t){c(e.precomputed);var r=e._getDoubles(),n=s(t,1),i=(1<<r.step+1)-(r.step%2==0?2:1);i/=3;for(var a=[],o=0;o<n.length;o+=r.step){for(var f=0,t=o+r.step-1;t>=o;t--)f=(f<<1)+n[t];a.push(f)}for(var u=this.jpoint(null,null,null),h=this.jpoint(null,null,null),d=i;d>0;d--){for(var o=0;o<a.length;o++){var f=a[o];f===d?h=h.mixedAdd(r.points[o]):f===-d&&(h=h.mixedAdd(r.points[o].neg()))}u=u.add(h)}return u.toP()},n.prototype._wnafMul=function(e,t){var r=4,n=e._getNAFPoints(r);r=n.wnd;for(var i=n.points,a=s(t,r),o=this.jpoint(null,null,null),f=a.length-1;f>=0;f--){for(var t=0;f>=0&&0===a[f];f--)t++;if(f>=0&&t++,o=o.dblp(t),f<0)break;var u=a[f];c(0!==u),o="affine"===e.type?u>0?o.mixedAdd(i[u-1>>1]):o.mixedAdd(i[-u-1>>1].neg()):u>0?o.add(i[u-1>>1]):o.add(i[-u-1>>1].neg())}return"affine"===e.type?o.toP():o},n.prototype._wnafMulAdd=function(e,t,r,n,i){for(var a=this._wnafT1,o=this._wnafT2,f=this._wnafT3,c=0,h=0;h<n;h++){var d=t[h],l=d._getNAFPoints(e);a[h]=l.wnd,o[h]=l.points}for(var h=n-1;h>=1;h-=2){var p=h-1,b=h;if(1===a[p]&&1===a[b]){var v=[t[p],null,null,t[b]];0===t[p].y.cmp(t[b].y)?(v[1]=t[p].add(t[b]),v[2]=t[p].toJ().mixedAdd(t[b].neg())):0===t[p].y.cmp(t[b].y.redNeg())?(v[1]=t[p].toJ().mixedAdd(t[b]),v[2]=t[p].add(t[b].neg())):(v[1]=t[p].toJ().mixedAdd(t[b]),v[2]=t[p].toJ().mixedAdd(t[b].neg()));var m=[-3,-1,-5,-7,0,7,5,1,3],g=u(r[p],r[b]);c=Math.max(g[0].length,c),f[p]=new Array(c),f[b]=new Array(c);for(var y=0;y<c;y++){var _=0|g[0][y],w=0|g[1][y];f[p][y]=m[3*(_+1)+(w+1)],f[b][y]=0,o[p]=v}}else f[p]=s(r[p],a[p]),f[b]=s(r[b],a[b]),c=Math.max(f[p].length,c),c=Math.max(f[b].length,c)}for(var x=this.jpoint(null,null,null),k=this._wnafT4,h=c;h>=0;h--){for(var S=0;h>=0;){for(var M=!0,y=0;y<n;y++)k[y]=0|f[y][h],0!==k[y]&&(M=!1);if(!M)break;S++,h--}if(h>=0&&S++,x=x.dblp(S),h<0)break;for(var y=0;y<n;y++){var d,A=k[y];0!==A&&(A>0?d=o[y][A-1>>1]:A<0&&(d=o[y][-A-1>>1].neg()),x="affine"===d.type?x.mixedAdd(d):x.add(d))}}for(var h=0;h<n;h++)o[h]=null;return i?x:x.toP()},n.BasePoint=i,i.prototype.eq=function(){throw new Error("Not implemented")},i.prototype.validate=function(){return this.curve.validate(this)},n.prototype.decodePoint=function(e,t){e=f.toArray(e,t);var r=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*r){6===e[0]?c(e[e.length-1]%2==0):7===e[0]&&c(e[e.length-1]%2==1);return this.point(e.slice(1,1+r),e.slice(1+r,1+2*r))}if((2===e[0]||3===e[0])&&e.length-1===r)return this.pointFromX(e.slice(1,1+r),3===e[0]);throw new Error("Unknown point format")},i.prototype.encodeCompressed=function(e){return this.encode(e,!0)},i.prototype._encode=function(e){var t=this.curve.p.byteLength(),r=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",t))},i.prototype.encode=function(e,t){return f.encode(this._encode(t),e)},i.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},i.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},i.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<t;i+=e){for(var a=0;a<e;a++)n=n.dbl();r.push(n)}return{step:e,points:r}},i.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],r=(1<<e)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)t[i]=t[i-1].add(n);return{wnd:e,points:t}},i.prototype._getBeta=function(){return null},i.prototype.dblp=function(e){for(var t=this,r=0;r<e;r++)t=t.dbl();return t}},function(e,t,r){"use strict";function n(e){c.call(this,"short",e),this.a=new s(e.a,16).toRed(this.red),this.b=new s(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function i(e,t,r,n){c.BasePoint.call(this,e,"affine"),null===t&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new s(t,16),this.y=new s(r,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function a(e,t,r,n){c.BasePoint.call(this,e,"jacobian"),null===t&&null===r&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new s(0)):(this.x=new s(t,16),this.y=new s(r,16),this.z=new s(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}var o=r(17),f=r(3),s=r(6),u=r(18),c=o.base,h=f.utils.assert;u(n,c),e.exports=n,n.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,r;if(e.beta)t=new s(e.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);t=n[0].cmp(n[1])<0?n[0]:n[1],t=t.toRed(this.red)}if(e.lambda)r=new s(e.lambda,16);else{var i=this._getEndoRoots(this.n);0===this.g.mul(i[0]).x.cmp(this.g.x.redMul(t))?r=i[0]:(r=i[1],h(0===this.g.mul(r).x.cmp(this.g.x.redMul(t))))}var a;return a=e.basis?e.basis.map(function(e){return{a:new s(e.a,16),b:new s(e.b,16)}}):this._getEndoBasis(r),{beta:t,lambda:r,basis:a}}},n.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:s.mont(e),r=new s(2).toRed(t).redInvm(),n=r.redNeg(),i=new s(3).toRed(t).redNeg().redSqrt().redMul(r);return[n.redAdd(i).fromRed(),n.redSub(i).fromRed()]},n.prototype._getEndoBasis=function(e){for(var t,r,n,i,a,o,f,u,c,h=this.n.ushrn(Math.floor(this.n.bitLength()/2)),d=e,l=this.n.clone(),p=new s(1),b=new s(0),v=new s(0),m=new s(1),g=0;0!==d.cmpn(0);){var y=l.div(d);u=l.sub(y.mul(d)),c=v.sub(y.mul(p));var _=m.sub(y.mul(b));if(!n&&u.cmp(h)<0)t=f.neg(),r=p,n=u.neg(),i=c;else if(n&&2==++g)break;f=u,l=d,d=u,v=p,p=c,m=b,b=_}a=u.neg(),o=c;var w=n.sqr().add(i.sqr());return a.sqr().add(o.sqr()).cmp(w)>=0&&(a=t,o=r),n.negative&&(n=n.neg(),i=i.neg()),a.negative&&(a=a.neg(),o=o.neg()),[{a:n,b:i},{a:a,b:o}]},n.prototype._endoSplit=function(e){var t=this.endo.basis,r=t[0],n=t[1],i=n.b.mul(e).divRound(this.n),a=r.b.neg().mul(e).divRound(this.n),o=i.mul(r.a),f=a.mul(n.a),s=i.mul(r.b),u=a.mul(n.b);return{k1:e.sub(o).sub(f),k2:s.add(u).neg()}},n.prototype.pointFromX=function(e,t){e=new s(e,16),e.red||(e=e.toRed(this.red));var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var i=n.fromRed().isOdd();return(t&&!i||!t&&i)&&(n=n.redNeg()),this.point(e,n)},n.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,r=e.y,n=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},n.prototype._endoWnafMulAdd=function(e,t,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,a=0;a<e.length;a++){var o=this._endoSplit(t[a]),f=e[a],s=f._getBeta();o.k1.negative&&(o.k1.ineg(),f=f.neg(!0)),o.k2.negative&&(o.k2.ineg(),s=s.neg(!0)),n[2*a]=f,n[2*a+1]=s,i[2*a]=o.k1,i[2*a+1]=o.k2}for(var u=this._wnafMulAdd(1,n,i,2*a,r),c=0;c<2*a;c++)n[c]=null,i[c]=null;return u},u(i,c.BasePoint),n.prototype.point=function(e,t,r){return new i(this,e,t,r)},n.prototype.pointFromJSON=function(e,t){return i.fromJSON(this,e,t)},i.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve,n=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(n)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(n)}}}return t}},i.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},i.fromJSON=function(e,t,r){function n(t){return e.point(t[0],t[1],r)}"string"==typeof t&&(t=JSON.parse(t));var i=e.point(t[0],t[1],r);if(!t[2])return i;var a=t[2];return i.precomputed={beta:null,doubles:a.doubles&&{step:a.doubles.step,points:[i].concat(a.doubles.points.map(n))},naf:a.naf&&{wnd:a.naf.wnd,points:[i].concat(a.naf.points.map(n))}},i},i.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},i.prototype.isInfinity=function(){return this.inf},i.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var r=t.redSqr().redISub(this.x).redISub(e.x),n=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},i.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,r=this.x.redSqr(),n=e.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),a=i.redSqr().redISub(this.x.redAdd(this.x)),o=i.redMul(this.x.redSub(a)).redISub(this.y);return this.curve.point(a,o)},i.prototype.getX=function(){return this.x.fromRed()},i.prototype.getY=function(){return this.y.fromRed()},i.prototype.mul=function(e){return e=new s(e,16),this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},i.prototype.mulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},i.prototype.jmulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},i.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},i.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed,n=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}}}return t},i.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},u(a,c.BasePoint),n.prototype.jpoint=function(e,t,r){return new a(this,e,t,r)},a.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),r=this.x.redMul(t),n=this.y.redMul(t).redMul(e);return this.curve.point(r,n)},a.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},a.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(t),i=e.x.redMul(r),a=this.y.redMul(t.redMul(e.z)),o=e.y.redMul(r.redMul(this.z)),f=n.redSub(i),s=a.redSub(o);if(0===f.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=f.redSqr(),c=u.redMul(f),h=n.redMul(u),d=s.redSqr().redIAdd(c).redISub(h).redISub(h),l=s.redMul(h.redISub(d)).redISub(a.redMul(c)),p=this.z.redMul(e.z).redMul(f);return this.curve.jpoint(d,l,p)},a.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),r=this.x,n=e.x.redMul(t),i=this.y,a=e.y.redMul(t).redMul(this.z),o=r.redSub(n),f=i.redSub(a);if(0===o.cmpn(0))return 0!==f.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var s=o.redSqr(),u=s.redMul(o),c=r.redMul(s),h=f.redSqr().redIAdd(u).redISub(c).redISub(c),d=f.redMul(c.redISub(h)).redISub(i.redMul(u)),l=this.z.redMul(o);return this.curve.jpoint(h,d,l)},a.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var t=this,r=0;r<e;r++)t=t.dbl();return t}for(var n=this.curve.a,i=this.curve.tinv,a=this.x,o=this.y,f=this.z,s=f.redSqr().redSqr(),u=o.redAdd(o),r=0;r<e;r++){var c=a.redSqr(),h=u.redSqr(),d=h.redSqr(),l=c.redAdd(c).redIAdd(c).redIAdd(n.redMul(s)),p=a.redMul(h),b=l.redSqr().redISub(p.redAdd(p)),v=p.redISub(b),m=l.redMul(v);m=m.redIAdd(m).redISub(d);var g=u.redMul(f);r+1<e&&(s=s.redMul(d)),a=b,f=g,u=m}return this.curve.jpoint(a,u.redMul(i),f)},a.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},a.prototype._zeroDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),a=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(n).redISub(a);o=o.redIAdd(o);var f=n.redAdd(n).redIAdd(n),s=f.redSqr().redISub(o).redISub(o),u=a.redIAdd(a);u=u.redIAdd(u),u=u.redIAdd(u),e=s,t=f.redMul(o.redISub(s)).redISub(u),r=this.y.redAdd(this.y)}else{var c=this.x.redSqr(),h=this.y.redSqr(),d=h.redSqr(),l=this.x.redAdd(h).redSqr().redISub(c).redISub(d);l=l.redIAdd(l);var p=c.redAdd(c).redIAdd(c),b=p.redSqr(),v=d.redIAdd(d);v=v.redIAdd(v),v=v.redIAdd(v),e=b.redISub(l).redISub(l),t=p.redMul(l.redISub(e)).redISub(v),r=this.y.redMul(this.z),r=r.redIAdd(r)}return this.curve.jpoint(e,t,r)},a.prototype._threeDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),a=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(n).redISub(a);o=o.redIAdd(o);var f=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),s=f.redSqr().redISub(o).redISub(o);e=s;var u=a.redIAdd(a);u=u.redIAdd(u),u=u.redIAdd(u),t=f.redMul(o.redISub(s)).redISub(u),r=this.y.redAdd(this.y)}else{var c=this.z.redSqr(),h=this.y.redSqr(),d=this.x.redMul(h),l=this.x.redSub(c).redMul(this.x.redAdd(c));l=l.redAdd(l).redIAdd(l);var p=d.redIAdd(d);p=p.redIAdd(p);var b=p.redAdd(p);e=l.redSqr().redISub(b),r=this.y.redAdd(this.z).redSqr().redISub(h).redISub(c);var v=h.redSqr();v=v.redIAdd(v),v=v.redIAdd(v),v=v.redIAdd(v),t=l.redMul(p.redISub(e)).redISub(v)}return this.curve.jpoint(e,t,r)},a.prototype._dbl=function(){var e=this.curve.a,t=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),a=t.redSqr(),o=r.redSqr(),f=a.redAdd(a).redIAdd(a).redIAdd(e.redMul(i)),s=t.redAdd(t);s=s.redIAdd(s);var u=s.redMul(o),c=f.redSqr().redISub(u.redAdd(u)),h=u.redISub(c),d=o.redSqr();d=d.redIAdd(d),d=d.redIAdd(d),d=d.redIAdd(d);var l=f.redMul(h).redISub(d),p=r.redAdd(r).redMul(n);return this.curve.jpoint(c,l,p)},a.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr(),n=t.redSqr(),i=e.redAdd(e).redIAdd(e),a=i.redSqr(),o=this.x.redAdd(t).redSqr().redISub(e).redISub(n);o=o.redIAdd(o),o=o.redAdd(o).redIAdd(o),o=o.redISub(a);var f=o.redSqr(),s=n.redIAdd(n);s=s.redIAdd(s),s=s.redIAdd(s),s=s.redIAdd(s);var u=i.redIAdd(o).redSqr().redISub(a).redISub(f).redISub(s),c=t.redMul(u);c=c.redIAdd(c),c=c.redIAdd(c);var h=this.x.redMul(f).redISub(c);h=h.redIAdd(h),h=h.redIAdd(h);var d=this.y.redMul(u.redMul(s.redISub(u)).redISub(o.redMul(f)));d=d.redIAdd(d),d=d.redIAdd(d),d=d.redIAdd(d);var l=this.z.redAdd(o).redSqr().redISub(r).redISub(f);return this.curve.jpoint(h,d,l)},a.prototype.mul=function(e,t){return e=new s(e,t),this.curve._wnafMul(this,e)},a.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),r=e.z.redSqr();if(0!==this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))return!1;var n=t.redMul(this.z),i=r.redMul(e.z);return 0===this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)},a.prototype.eqXToP=function(e){var t=this.z.redSqr(),r=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(r))return!0;for(var n=e.clone(),i=this.curve.redN.redMul(t);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(i),0===this.x.cmp(r))return!0}return!1},a.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},a.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}},function(e,t,r){"use strict";function n(e){s.call(this,"mont",e),this.a=new o(e.a,16).toRed(this.red),this.b=new o(e.b,16).toRed(this.red),this.i4=new o(4).toRed(this.red).redInvm(),this.two=new o(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function i(e,t,r){s.BasePoint.call(this,e,"projective"),null===t&&null===r?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new o(t,16),this.z=new o(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}var a=r(17),o=r(6),f=r(18),s=a.base,u=r(3),c=u.utils;f(n,s),e.exports=n,n.prototype.validate=function(e){var t=e.normalize().x,r=t.redSqr(),n=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);return 0===n.redSqrt().redSqr().cmp(n)},f(i,s.BasePoint),n.prototype.decodePoint=function(e,t){return this.point(c.toArray(e,t),1)},n.prototype.point=function(e,t){return new i(this,e,t)},n.prototype.pointFromJSON=function(e){return i.fromJSON(this,e)},i.prototype.precompute=function(){},i.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},i.fromJSON=function(e,t){return new i(e,t[0],t[1]||e.one)},i.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},i.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},i.prototype.dbl=function(){var e=this.x.redAdd(this.z),t=e.redSqr(),r=this.x.redSub(this.z),n=r.redSqr(),i=t.redSub(n),a=t.redMul(n),o=i.redMul(n.redAdd(this.curve.a24.redMul(i)));return this.curve.point(a,o)},i.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},i.prototype.diffAdd=function(e,t){var r=this.x.redAdd(this.z),n=this.x.redSub(this.z),i=e.x.redAdd(e.z),a=e.x.redSub(e.z),o=a.redMul(r),f=i.redMul(n),s=t.z.redMul(o.redAdd(f).redSqr()),u=t.x.redMul(o.redISub(f).redSqr());return this.curve.point(s,u)},i.prototype.mul=function(e){for(var t=e.clone(),r=this,n=this.curve.point(null,null),i=this,a=[];0!==t.cmpn(0);t.iushrn(1))a.push(t.andln(1));for(var o=a.length-1;o>=0;o--)0===a[o]?(r=r.diffAdd(n,i),n=n.dbl()):(n=r.diffAdd(n,i),r=r.dbl());return n},i.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},i.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},i.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},i.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},i.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},function(e,t,r){"use strict";function n(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,u.call(this,"edwards",e),this.a=new f(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new f(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new f(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),c(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function i(e,t,r,n,i){u.BasePoint.call(this,e,"projective"),null===t&&null===r&&null===n?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new f(t,16),this.y=new f(r,16),this.z=n?new f(n,16):this.curve.one,this.t=i&&new f(i,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}var a=r(17),o=r(3),f=r(6),s=r(18),u=a.base,c=o.utils.assert;s(n,u),e.exports=n,n.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},n.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},n.prototype.jpoint=function(e,t,r,n){return this.point(e,t,r,n)},n.prototype.pointFromX=function(e,t){e=new f(e,16),e.red||(e=e.toRed(this.red));var r=e.redSqr(),n=this.c2.redSub(this.a.redMul(r)),i=this.one.redSub(this.c2.redMul(this.d).redMul(r)),a=n.redMul(i.redInvm()),o=a.redSqrt();if(0!==o.redSqr().redSub(a).cmp(this.zero))throw new Error("invalid point");var s=o.fromRed().isOdd();return(t&&!s||!t&&s)&&(o=o.redNeg()),this.point(e,o)},n.prototype.pointFromY=function(e,t){e=new f(e,16),e.red||(e=e.toRed(this.red));var r=e.redSqr(),n=r.redSub(this.one),i=r.redMul(this.d).redAdd(this.one),a=n.redMul(i.redInvm());if(0===a.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var o=a.redSqrt();if(0!==o.redSqr().redSub(a).cmp(this.zero))throw new Error("invalid point");return o.isOdd()!==t&&(o=o.redNeg()),this.point(o,e)},n.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),r=e.y.redSqr(),n=t.redMul(this.a).redAdd(r),i=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return 0===n.cmp(i)},s(i,u.BasePoint),n.prototype.pointFromJSON=function(e){return i.fromJSON(this,e)},n.prototype.point=function(e,t,r,n){return new i(this,e,t,r,n)},i.fromJSON=function(e,t){return new i(e,t[0],t[1],t[2])},i.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},i.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&0===this.y.cmp(this.z)},i.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var n=this.curve._mulA(e),i=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),a=n.redAdd(t),o=a.redSub(r),f=n.redSub(t),s=i.redMul(o),u=a.redMul(f),c=i.redMul(f),h=o.redMul(a);return this.curve.point(s,u,h,c)},i.prototype._projDbl=function(){var e,t,r,n=this.x.redAdd(this.y).redSqr(),i=this.x.redSqr(),a=this.y.redSqr();if(this.curve.twisted){var o=this.curve._mulA(i),f=o.redAdd(a);if(this.zOne)e=n.redSub(i).redSub(a).redMul(f.redSub(this.curve.two)),t=f.redMul(o.redSub(a)),r=f.redSqr().redSub(f).redSub(f);else{var s=this.z.redSqr(),u=f.redSub(s).redISub(s);e=n.redSub(i).redISub(a).redMul(u),t=f.redMul(o.redSub(a)),r=f.redMul(u)}}else{var o=i.redAdd(a),s=this.curve._mulC(this.c.redMul(this.z)).redSqr(),u=o.redSub(s).redSub(s);e=this.curve._mulC(n.redISub(o)).redMul(u),t=this.curve._mulC(o).redMul(i.redISub(a)),r=o.redMul(u)}return this.curve.point(e,t,r)},i.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},i.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),n=this.t.redMul(this.curve.dd).redMul(e.t),i=this.z.redMul(e.z.redAdd(e.z)),a=r.redSub(t),o=i.redSub(n),f=i.redAdd(n),s=r.redAdd(t),u=a.redMul(o),c=f.redMul(s),h=a.redMul(s),d=o.redMul(f);return this.curve.point(u,c,d,h)},i.prototype._projAdd=function(e){var t,r,n=this.z.redMul(e.z),i=n.redSqr(),a=this.x.redMul(e.x),o=this.y.redMul(e.y),f=this.curve.d.redMul(a).redMul(o),s=i.redSub(f),u=i.redAdd(f),c=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(a).redISub(o),h=n.redMul(s).redMul(c);return this.curve.twisted?(t=n.redMul(u).redMul(o.redSub(this.curve._mulA(a))),r=s.redMul(u)):(t=n.redMul(u).redMul(o.redSub(a)),r=this.curve._mulC(s).redMul(u)),this.curve.point(h,t,r)},i.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},i.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},i.prototype.mulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!1)},i.prototype.jmulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!0)},i.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},i.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},i.prototype.getX=function(){return this.normalize(),this.x.fromRed()},i.prototype.getY=function(){return this.normalize(),this.y.fromRed()},i.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},i.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var r=e.clone(),n=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(n),0===this.x.cmp(t))return!0}return!1},i.prototype.toP=i.prototype.normalize,i.prototype.mixedAdd=i.prototype.add},function(e,t,r){"use strict";function n(e){"short"===e.type?this.curve=new f.curve.short(e):"edwards"===e.type?this.curve=new f.curve.edwards(e):this.curve=new f.curve.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,s(this.g.validate(),"Invalid curve"),s(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function i(e,t){Object.defineProperty(a,e,{configurable:!0,enumerable:!0,get:function(){var r=new n(t);return Object.defineProperty(a,e,{configurable:!0,enumerable:!0,value:r}),r}})}var a=t,o=r(26),f=r(3),s=f.utils.assert;a.PresetCurve=n,i("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:o.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),i("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:o.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),i("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:o.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),i("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:o.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),i("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:o.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),i("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.sha256,gRed:!1,g:["9"]}),i("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var u;try{u=r(117)}catch(e){u=void 0}i("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:o.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",u]})},function(e,t,r){"use strict";t.sha1=r(112),t.sha224=r(113),t.sha256=r(53),t.sha384=r(114),t.sha512=r(54)},function(e,t,r){"use strict";function n(){if(!(this instanceof n))return new n;h.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}var i=r(5),a=r(12),o=r(52),f=i.rotl32,s=i.sum32,u=i.sum32_5,c=o.ft_1,h=a.BlockHash,d=[1518500249,1859775393,2400959708,3395469782];i.inherits(n,h),e.exports=n,n.blockSize=512,n.outSize=160,n.hmacStrength=80,n.padLength=64,n.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=f(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var i=this.h[0],a=this.h[1],o=this.h[2],h=this.h[3],l=this.h[4];for(n=0;n<r.length;n++){var p=~~(n/20),b=u(f(i,5),c(p,a,o,h),l,r[n],d[p]);l=h,h=o,o=f(a,30),a=i,i=b}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],a),this.h[2]=s(this.h[2],o),this.h[3]=s(this.h[3],h),this.h[4]=s(this.h[4],l)},n.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},function(e,t,r){"use strict";function n(){if(!(this instanceof n))return new n;a.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}var i=r(5),a=r(53);i.inherits(n,a),e.exports=n,n.blockSize=512,n.outSize=224,n.hmacStrength=192,n.padLength=64,n.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h.slice(0,7),"big"):i.split32(this.h.slice(0,7),"big")}},function(e,t,r){"use strict";function n(){if(!(this instanceof n))return new n;a.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}var i=r(5),a=r(54);i.inherits(n,a),e.exports=n,n.blockSize=1024,n.outSize=384,n.hmacStrength=192,n.padLength=128,n.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h.slice(0,12),"big"):i.split32(this.h.slice(0,12),"big")}},function(e,t,r){"use strict";function n(){if(!(this instanceof n))return new n;l.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function i(e,t,r,n){return e<=15?t^r^n:e<=31?t&r|~t&n:e<=47?(t|~r)^n:e<=63?t&n|r&~n:t^(r|~n)}function a(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function o(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}var f=r(5),s=r(12),u=f.rotl32,c=f.sum32,h=f.sum32_3,d=f.sum32_4,l=s.BlockHash;f.inherits(n,l),t.ripemd160=n,n.blockSize=512,n.outSize=160,n.hmacStrength=192,n.padLength=64,n.prototype._update=function(e,t){for(var r=this.h[0],n=this.h[1],f=this.h[2],s=this.h[3],l=this.h[4],g=r,y=n,_=f,w=s,x=l,k=0;k<80;k++){var S=c(u(d(r,i(k,n,f,s),e[p[k]+t],a(k)),v[k]),l);r=l,l=s,s=u(f,10),f=n,n=S,S=c(u(d(g,i(79-k,y,_,w),e[b[k]+t],o(k)),m[k]),x),g=x,x=w,w=u(_,10),_=y,y=S}S=h(this.h[1],f,w),this.h[1]=h(this.h[2],s,x),this.h[2]=h(this.h[3],l,g),this.h[3]=h(this.h[4],r,y),this.h[4]=h(this.h[0],n,_),this.h[0]=S},n.prototype._digest=function(e){return"hex"===e?f.toHex32(this.h,"little"):f.split32(this.h,"little")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],b=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],v=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],m=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},function(e,t,r){"use strict";function n(e,t,r){if(!(this instanceof n))return new n(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(i.toArray(t,r))}var i=r(5),a=r(7);e.exports=n,n.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),a(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},n.prototype.update=function(e,t){return this.inner.update(e,t),this},n.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},function(e,t){e.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},function(e,t,r){"use strict";function n(e){if(!(this instanceof n))return new n(e);"string"==typeof e&&(s(o.curves.hasOwnProperty(e),"Unknown curve "+e),e=o.curves[e]),e instanceof o.curves.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}var i=r(6),a=r(119),o=r(3),f=o.utils,s=f.assert,u=r(120),c=r(121);e.exports=n,n.prototype.keyPair=function(e){return new u(this,e)},n.prototype.keyFromPrivate=function(e,t){return u.fromPrivate(this,e,t)},n.prototype.keyFromPublic=function(e,t){return u.fromPublic(this,e,t)},n.prototype.genKeyPair=function(e){e||(e={});for(var t=new a({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||o.rand(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),n=this.n.sub(new i(2));;){var f=new i(t.generate(r));if(!(f.cmp(n)>0))return f.iaddn(1),this.keyFromPrivate(f)}},n.prototype._truncateToN=function(e,t){var r=8*e.byteLength()-this.n.bitLength();return r>0&&(e=e.ushrn(r)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},n.prototype.sign=function(e,t,r,n){"object"==typeof r&&(n=r,r=null),n||(n={}),t=this.keyFromPrivate(t,r),e=this._truncateToN(new i(e,16));for(var o=this.n.byteLength(),f=t.getPrivate().toArray("be",o),s=e.toArray("be",o),u=new a({hash:this.hash,entropy:f,nonce:s,pers:n.pers,persEnc:n.persEnc||"utf8"}),h=this.n.sub(new i(1)),d=0;!0;d++){var l=n.k?n.k(d):new i(u.generate(this.n.byteLength()));if(l=this._truncateToN(l,!0),!(l.cmpn(1)<=0||l.cmp(h)>=0)){var p=this.g.mul(l);if(!p.isInfinity()){var b=p.getX(),v=b.umod(this.n);if(0!==v.cmpn(0)){var m=l.invm(this.n).mul(v.mul(t.getPrivate()).iadd(e));if(m=m.umod(this.n),0!==m.cmpn(0)){var g=(p.getY().isOdd()?1:0)|(0!==b.cmp(v)?2:0);return n.canonical&&m.cmp(this.nh)>0&&(m=this.n.sub(m),g^=1),new c({r:v,s:m,recoveryParam:g})}}}}}},n.prototype.verify=function(e,t,r,n){e=this._truncateToN(new i(e,16)),r=this.keyFromPublic(r,n),t=new c(t,"hex");var a=t.r,o=t.s;if(a.cmpn(1)<0||a.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var f=o.invm(this.n),s=f.mul(e).umod(this.n),u=f.mul(a).umod(this.n);if(!this.curve._maxwellTrick){var h=this.g.mulAdd(s,r.getPublic(),u);return!h.isInfinity()&&0===h.getX().umod(this.n).cmp(a)}var h=this.g.jmulAdd(s,r.getPublic(),u);return!h.isInfinity()&&h.eqXToP(a)},n.prototype.recoverPubKey=function(e,t,r,n){s((3&r)===r,"The recovery param is more than two bits"),t=new c(t,n);var a=this.n,o=new i(e),f=t.r,u=t.s,h=1&r,d=r>>1;if(f.cmp(this.curve.p.umod(this.curve.n))>=0&&d)throw new Error("Unable to find sencond key candinate");f=d?this.curve.pointFromX(f.add(this.curve.n),h):this.curve.pointFromX(f,h);var l=t.r.invm(a),p=a.sub(o).mul(l).umod(a),b=u.mul(l).umod(a);return this.g.mulAdd(p,f,b)},n.prototype.getKeyRecoveryParam=function(e,t,r,n){if(t=new c(t,n),null!==t.recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var a;try{a=this.recoverPubKey(e,t,i)}catch(e){continue}if(a.eq(r))return i}throw new Error("Unable to find valid recovery factor")}},function(e,t,r){"use strict";function n(e){if(!(this instanceof n))return new n(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=a.toArray(e.entropy,e.entropyEnc||"hex"),r=a.toArray(e.nonce,e.nonceEnc||"hex"),i=a.toArray(e.pers,e.persEnc||"hex");o(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,r,i)}var i=r(26),a=r(51),o=r(7);e.exports=n,n.prototype._init=function(e,t,r){var n=e.concat(t).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},n.prototype._hmac=function(){return new i.hmac(this.hash,this.K)},n.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},n.prototype.reseed=function(e,t,r,n){"string"!=typeof t&&(n=r,r=t,t=null),e=a.toArray(e,t),r=a.toArray(r,n),o(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(r||[])),this._reseed=1},n.prototype.generate=function(e,t,r,n){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(n=r,r=t,t=null),r&&(r=a.toArray(r,n||"hex"),this._update(r));for(var i=[];i.length<e;)this.V=this._hmac().update(this.V).digest(),i=i.concat(this.V);var o=i.slice(0,e);return this._update(r),this._reseed++,a.encode(o,t)}},function(e,t,r){"use strict";function n(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}var i=r(6),a=r(3),o=a.utils,f=o.assert;e.exports=n,n.fromPublic=function(e,t,r){return t instanceof n?t:new n(e,{pub:t,pubEnc:r})},n.fromPrivate=function(e,t,r){return t instanceof n?t:new n(e,{priv:t,privEnc:r})},n.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},n.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},n.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},n.prototype._importPrivate=function(e,t){this.priv=new i(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},n.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?f(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||f(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},n.prototype.derive=function(e){return e.mul(this.priv).getX()},n.prototype.sign=function(e,t,r){return this.ec.sign(e,this,t,r)},n.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},n.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},function(e,t,r){"use strict";function n(e,t){if(e instanceof n)return e;this._importDER(e,t)||(h(e.r&&e.s,"Signature without r or s"),this.r=new s(e.r,16),this.s=new s(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}function i(){this.place=0}function a(e,t){var r=e[t.place++];if(!(128&r))return r;for(var n=15&r,i=0,a=0,o=t.place;a<n;a++,o++)i<<=8,i|=e[o];return t.place=o,i}function o(e){for(var t=0,r=e.length-1;!e[t]&&!(128&e[t+1])&&t<r;)t++;return 0===t?e:e.slice(t)}function f(e,t){if(t<128)return void e.push(t);var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|r);--r;)e.push(t>>>(r<<3)&255);e.push(t)}var s=r(6),u=r(3),c=u.utils,h=c.assert;e.exports=n,n.prototype._importDER=function(e,t){e=c.toArray(e,t);var r=new i;if(48!==e[r.place++])return!1;if(a(e,r)+r.place!==e.length)return!1;if(2!==e[r.place++])return!1;var n=a(e,r),o=e.slice(r.place,n+r.place);if(r.place+=n,2!==e[r.place++])return!1;var f=a(e,r);if(e.length!==f+r.place)return!1;var u=e.slice(r.place,f+r.place);return 0===o[0]&&128&o[1]&&(o=o.slice(1)),0===u[0]&&128&u[1]&&(u=u.slice(1)),this.r=new s(o),this.s=new s(u),this.recoveryParam=null,!0},n.prototype.toDER=function(e){var t=this.r.toArray(),r=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&r[0]&&(r=[0].concat(r)),t=o(t),r=o(r);!(r[0]||128&r[1]);)r=r.slice(1);var n=[2];f(n,t.length),n=n.concat(t),n.push(2),f(n,r.length);var i=n.concat(r),a=[48];return f(a,i.length),a=a.concat(i),c.encode(a,e)}},function(e,t,r){"use strict";function n(e){if(f("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof n))return new n(e);var e=a.curves[e].curve;this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=i.sha512}var i=r(26),a=r(3),o=a.utils,f=o.assert,s=o.parseBytes,u=r(123),c=r(124);e.exports=n,n.prototype.sign=function(e,t){e=s(e);var r=this.keyFromSecret(t),n=this.hashInt(r.messagePrefix(),e),i=this.g.mul(n),a=this.encodePoint(i),o=this.hashInt(a,r.pubBytes(),e).mul(r.priv()),f=n.add(o).umod(this.curve.n);return this.makeSignature({R:i,S:f,Rencoded:a})},n.prototype.verify=function(e,t,r){e=s(e),t=this.makeSignature(t);var n=this.keyFromPublic(r),i=this.hashInt(t.Rencoded(),n.pubBytes(),e),a=this.g.mul(t.S());return t.R().add(n.pub().mul(i)).eq(a)},n.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return o.intFromLE(e.digest()).umod(this.curve.n)},n.prototype.keyFromPublic=function(e){return u.fromPublic(this,e)},n.prototype.keyFromSecret=function(e){return u.fromSecret(this,e)},n.prototype.makeSignature=function(e){return e instanceof c?e:new c(this,e)},n.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},n.prototype.decodePoint=function(e){e=o.parseBytes(e);var t=e.length-1,r=e.slice(0,t).concat(-129&e[t]),n=0!=(128&e[t]),i=o.intFromLE(r);return this.curve.pointFromY(i,n)},n.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},n.prototype.decodeInt=function(e){return o.intFromLE(e)},n.prototype.isPoint=function(e){return e instanceof this.pointClass}},function(e,t,r){"use strict";function n(e,t){this.eddsa=e,this._secret=f(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=f(t.pub)}var i=r(3),a=i.utils,o=a.assert,f=a.parseBytes,s=a.cachedProperty;n.fromPublic=function(e,t){return t instanceof n?t:new n(e,{pub:t})},n.fromSecret=function(e,t){return t instanceof n?t:new n(e,{secret:t})},n.prototype.secret=function(){return this._secret},s(n,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())}),s(n,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())}),s(n,"privBytes",function(){var e=this.eddsa,t=this.hash(),r=e.encodingLength-1,n=t.slice(0,e.encodingLength);return n[0]&=248,n[r]&=127,n[r]|=64,n}),s(n,"priv",function(){return this.eddsa.decodeInt(this.privBytes())}),s(n,"hash",function(){return this.eddsa.hash().update(this.secret()).digest()}),s(n,"messagePrefix",function(){return this.hash().slice(this.eddsa.encodingLength)}),n.prototype.sign=function(e){return o(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},n.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},n.prototype.getSecret=function(e){return o(this._secret,"KeyPair is public only"),a.encode(this.secret(),e)},n.prototype.getPublic=function(e){return a.encode(this.pubBytes(),e)},e.exports=n},function(e,t,r){"use strict";function n(e,t){this.eddsa=e,"object"!=typeof t&&(t=u(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),f(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof i&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}var i=r(6),a=r(3),o=a.utils,f=o.assert,s=o.cachedProperty,u=o.parseBytes;s(n,"S",function(){return this.eddsa.decodeInt(this.Sencoded())}),s(n,"R",function(){return this.eddsa.decodePoint(this.Rencoded())}),s(n,"Rencoded",function(){return this.eddsa.encodePoint(this.R())}),s(n,"Sencoded",function(){return this.eddsa.encodeInt(this.S())}),n.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},n.prototype.toHex=function(){return o.encode(this.toBytes(),"hex").toUpperCase()},e.exports=n},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(){if("function"==typeof ArrayBuffer){var t=e,r=t.lib,n=r.WordArray,i=n.init;(n.init=function(e){if(e instanceof ArrayBuffer&&(e=new Uint8Array(e)),(e instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&e instanceof Uint8ClampedArray||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array)&&(e=new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),e instanceof Uint8Array){for(var t=e.byteLength,r=[],n=0;n<t;n++)r[n>>>2]|=e[n]<<24-n%4*8;i.call(this,r,t)}else i.apply(this,arguments)}).prototype=n}}(),e.lib.WordArray})},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){return function(){function t(e){return e<<8&4278255360|e>>>8&16711935}var r=e,n=r.lib,i=n.WordArray,a=r.enc;a.Utf16=a.Utf16BE={stringify:function(e){for(var t=e.words,r=e.sigBytes,n=[],i=0;i<r;i+=2){var a=t[i>>>2]>>>16-i%4*8&65535;n.push(String.fromCharCode(a))}return n.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n++)r[n>>>1]|=e.charCodeAt(n)<<16-n%2*16;return i.create(r,2*t)}};a.Utf16LE={stringify:function(e){for(var r=e.words,n=e.sigBytes,i=[],a=0;a<n;a+=2){var o=t(r[a>>>2]>>>16-a%4*8&65535);i.push(String.fromCharCode(o))}return i.join("")},parse:function(e){for(var r=e.length,n=[],a=0;a<r;a++)n[a>>>1]|=t(e.charCodeAt(a)<<16-a%2*16);return i.create(n,2*r)}}}(),e.enc.Utf16})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(56))}(0,function(e){return function(){var t=e,r=t.lib,n=r.WordArray,i=t.algo,a=i.SHA256,o=i.SHA224=a.extend({_doReset:function(){this._hash=new n.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var e=a._doFinalize.call(this);return e.sigBytes-=4,e}});t.SHA224=a._createHelper(o),t.HmacSHA224=a._createHmacHelper(o)}(),e.SHA224})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(19),r(57))}(0,function(e){return function(){var t=e,r=t.x64,n=r.Word,i=r.WordArray,a=t.algo,o=a.SHA512,f=a.SHA384=o.extend({_doReset:function(){this._hash=new i.init([new n.init(3418070365,3238371032),new n.init(1654270250,914150663),new n.init(2438529370,812702999),new n.init(355462360,4144912697),new n.init(1731405415,4290775857),new n.init(2394180231,1750603025),new n.init(3675008525,1694076839),new n.init(1203062813,3204075428)])},_doFinalize:function(){var e=o._doFinalize.call(this);return e.sigBytes-=16,e}});t.SHA384=o._createHelper(f),t.HmacSHA384=o._createHmacHelper(f)}(),e.SHA384})},function(e,t,r){!function(n,i,a){e.exports=t=i(r(0),r(19))}(0,function(e){return function(t){var r=e,n=r.lib,i=n.WordArray,a=n.Hasher,o=r.x64,f=o.Word,s=r.algo,u=[],c=[],h=[];!function(){for(var e=1,t=0,r=0;r<24;r++){u[e+5*t]=(r+1)*(r+2)/2%64;var n=t%5,i=(2*e+3*t)%5;e=n,t=i}for(var e=0;e<5;e++)for(var t=0;t<5;t++)c[e+5*t]=t+(2*e+3*t)%5*5;for(var a=1,o=0;o<24;o++){for(var s=0,d=0,l=0;l<7;l++){if(1&a){var p=(1<<l)-1;p<32?d^=1<<p:s^=1<<p-32}128&a?a=a<<1^113:a<<=1}h[o]=f.create(s,d)}}();var d=[];!function(){for(var e=0;e<25;e++)d[e]=f.create()}();var l=s.SHA3=a.extend({cfg:a.cfg.extend({outputLength:512}),_doReset:function(){for(var e=this._state=[],t=0;t<25;t++)e[t]=new f.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(e,t){for(var r=this._state,n=this.blockSize/2,i=0;i<n;i++){var a=e[t+2*i],o=e[t+2*i+1];a=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),o=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8);var f=r[i];f.high^=o,f.low^=a}for(var s=0;s<24;s++){for(var l=0;l<5;l++){for(var p=0,b=0,v=0;v<5;v++){var f=r[l+5*v];p^=f.high,b^=f.low}var m=d[l];m.high=p,m.low=b}for(var l=0;l<5;l++)for(var g=d[(l+4)%5],y=d[(l+1)%5],_=y.high,w=y.low,p=g.high^(_<<1|w>>>31),b=g.low^(w<<1|_>>>31),v=0;v<5;v++){var f=r[l+5*v];f.high^=p,f.low^=b}for(var x=1;x<25;x++){var f=r[x],k=f.high,S=f.low,M=u[x];if(M<32)var p=k<<M|S>>>32-M,b=S<<M|k>>>32-M;else var p=S<<M-32|k>>>64-M,b=k<<M-32|S>>>64-M;var A=d[c[x]];A.high=p,A.low=b}var E=d[0],I=r[0];E.high=I.high,E.low=I.low;for(var l=0;l<5;l++)for(var v=0;v<5;v++){var x=l+5*v,f=r[x],T=d[x],B=d[(l+1)%5+5*v],R=d[(l+2)%5+5*v];f.high=T.high^~B.high&R.high,f.low=T.low^~B.low&R.low}var f=r[0],P=h[s];f.high^=P.high,f.low^=P.low}},_doFinalize:function(){var e=this._data,r=e.words,n=(this._nDataBytes,8*e.sigBytes),a=32*this.blockSize;r[n>>>5]|=1<<24-n%32,r[(t.ceil((n+1)/a)*a>>>5)-1]|=128,e.sigBytes=4*r.length,this._process();for(var o=this._state,f=this.cfg.outputLength/8,s=f/8,u=[],c=0;c<s;c++){var h=o[c],d=h.high,l=h.low;d=16711935&(d<<8|d>>>24)|4278255360&(d<<24|d>>>8),l=16711935&(l<<8|l>>>24)|4278255360&(l<<24|l>>>8),u.push(l),u.push(d)}return new i.init(u,f)},clone:function(){for(var e=a.clone.call(this),t=e._state=this._state.slice(0),r=0;r<25;r++)t[r]=t[r].clone();return e}});r.SHA3=a._createHelper(l),r.HmacSHA3=a._createHmacHelper(l)}(Math),e.SHA3})},function(e,t,r){!function(n,i){e.exports=t=i(r(0))}(0,function(e){/** @preserve